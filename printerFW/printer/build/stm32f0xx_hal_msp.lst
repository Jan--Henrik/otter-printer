ARM GAS  /tmp/ccXBTJBR.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_msp.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_MspInit
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_MspInit:
  25              	.LFB37:
  26              		.file 1 "Src/stm32f0xx_hal_msp.c"
   1:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f0xx_hal_msp.c **** /**
   3:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
   4:Src/stm32f0xx_hal_msp.c ****   * File Name          : stm32f0xx_hal_msp.c
   5:Src/stm32f0xx_hal_msp.c ****   * Description        : This file provides code for the MSP Initialization 
   6:Src/stm32f0xx_hal_msp.c ****   *                      and de-Initialization codes.
   7:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
   8:Src/stm32f0xx_hal_msp.c ****   * This notice applies to any and all portions of this file
   9:Src/stm32f0xx_hal_msp.c ****   * that are not between comment pairs USER CODE BEGIN and
  10:Src/stm32f0xx_hal_msp.c ****   * USER CODE END. Other portions of this file, whether 
  11:Src/stm32f0xx_hal_msp.c ****   * inserted by the user or by software development tools
  12:Src/stm32f0xx_hal_msp.c ****   * are owned by their respective copyright owners.
  13:Src/stm32f0xx_hal_msp.c ****   *
  14:Src/stm32f0xx_hal_msp.c ****   * Copyright (c) 2019 STMicroelectronics International N.V. 
  15:Src/stm32f0xx_hal_msp.c ****   * All rights reserved.
  16:Src/stm32f0xx_hal_msp.c ****   *
  17:Src/stm32f0xx_hal_msp.c ****   * Redistribution and use in source and binary forms, with or without 
  18:Src/stm32f0xx_hal_msp.c ****   * modification, are permitted, provided that the following conditions are met:
  19:Src/stm32f0xx_hal_msp.c ****   *
  20:Src/stm32f0xx_hal_msp.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  21:Src/stm32f0xx_hal_msp.c ****   *    this list of conditions and the following disclaimer.
  22:Src/stm32f0xx_hal_msp.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  23:Src/stm32f0xx_hal_msp.c ****   *    this list of conditions and the following disclaimer in the documentation
  24:Src/stm32f0xx_hal_msp.c ****   *    and/or other materials provided with the distribution.
  25:Src/stm32f0xx_hal_msp.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  26:Src/stm32f0xx_hal_msp.c ****   *    contributors to this software may be used to endorse or promote products 
  27:Src/stm32f0xx_hal_msp.c ****   *    derived from this software without specific written permission.
  28:Src/stm32f0xx_hal_msp.c ****   * 4. This software, including modifications and/or derivative works of this 
  29:Src/stm32f0xx_hal_msp.c ****   *    software, must execute solely and exclusively on microcontroller or
  30:Src/stm32f0xx_hal_msp.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  31:Src/stm32f0xx_hal_msp.c ****   * 5. Redistribution and use of this software other than as permitted under 
  32:Src/stm32f0xx_hal_msp.c ****   *    this license is void and will automatically terminate your rights under 
ARM GAS  /tmp/ccXBTJBR.s 			page 2


  33:Src/stm32f0xx_hal_msp.c ****   *    this license. 
  34:Src/stm32f0xx_hal_msp.c ****   *
  35:Src/stm32f0xx_hal_msp.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  36:Src/stm32f0xx_hal_msp.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  37:Src/stm32f0xx_hal_msp.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  38:Src/stm32f0xx_hal_msp.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  39:Src/stm32f0xx_hal_msp.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  40:Src/stm32f0xx_hal_msp.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  41:Src/stm32f0xx_hal_msp.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  42:Src/stm32f0xx_hal_msp.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  43:Src/stm32f0xx_hal_msp.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  44:Src/stm32f0xx_hal_msp.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  45:Src/stm32f0xx_hal_msp.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  46:Src/stm32f0xx_hal_msp.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Src/stm32f0xx_hal_msp.c ****   *
  48:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
  49:Src/stm32f0xx_hal_msp.c ****   */
  50:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Header */
  51:Src/stm32f0xx_hal_msp.c **** 
  52:Src/stm32f0xx_hal_msp.c **** /* Includes ------------------------------------------------------------------*/
  53:Src/stm32f0xx_hal_msp.c **** #include "main.h"
  54:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Includes */
  55:Src/stm32f0xx_hal_msp.c **** 
  56:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Includes */
  57:Src/stm32f0xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_i2c1_rx;
  58:Src/stm32f0xx_hal_msp.c **** 
  59:Src/stm32f0xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_i2c1_tx;
  60:Src/stm32f0xx_hal_msp.c **** 
  61:Src/stm32f0xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_usart3_rx;
  62:Src/stm32f0xx_hal_msp.c **** 
  63:Src/stm32f0xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_usart3_tx;
  64:Src/stm32f0xx_hal_msp.c **** 
  65:Src/stm32f0xx_hal_msp.c **** /* Private typedef -----------------------------------------------------------*/
  66:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN TD */
  67:Src/stm32f0xx_hal_msp.c **** 
  68:Src/stm32f0xx_hal_msp.c **** /* USER CODE END TD */
  69:Src/stm32f0xx_hal_msp.c **** 
  70:Src/stm32f0xx_hal_msp.c **** /* Private define ------------------------------------------------------------*/
  71:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Define */
  72:Src/stm32f0xx_hal_msp.c ****  
  73:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Define */
  74:Src/stm32f0xx_hal_msp.c **** 
  75:Src/stm32f0xx_hal_msp.c **** /* Private macro -------------------------------------------------------------*/
  76:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Macro */
  77:Src/stm32f0xx_hal_msp.c **** 
  78:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Macro */
  79:Src/stm32f0xx_hal_msp.c **** 
  80:Src/stm32f0xx_hal_msp.c **** /* Private variables ---------------------------------------------------------*/
  81:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN PV */
  82:Src/stm32f0xx_hal_msp.c **** 
  83:Src/stm32f0xx_hal_msp.c **** /* USER CODE END PV */
  84:Src/stm32f0xx_hal_msp.c **** 
  85:Src/stm32f0xx_hal_msp.c **** /* Private function prototypes -----------------------------------------------*/
  86:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN PFP */
  87:Src/stm32f0xx_hal_msp.c **** 
  88:Src/stm32f0xx_hal_msp.c **** /* USER CODE END PFP */
  89:Src/stm32f0xx_hal_msp.c **** 
ARM GAS  /tmp/ccXBTJBR.s 			page 3


  90:Src/stm32f0xx_hal_msp.c **** /* External functions --------------------------------------------------------*/
  91:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN ExternalFunctions */
  92:Src/stm32f0xx_hal_msp.c **** 
  93:Src/stm32f0xx_hal_msp.c **** /* USER CODE END ExternalFunctions */
  94:Src/stm32f0xx_hal_msp.c **** 
  95:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN 0 */
  96:Src/stm32f0xx_hal_msp.c **** 
  97:Src/stm32f0xx_hal_msp.c **** /* USER CODE END 0 */
  98:Src/stm32f0xx_hal_msp.c ****                         
  99:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
 100:Src/stm32f0xx_hal_msp.c ****                                         /**
 101:Src/stm32f0xx_hal_msp.c ****   * Initializes the Global MSP.
 102:Src/stm32f0xx_hal_msp.c ****   */
 103:Src/stm32f0xx_hal_msp.c **** void HAL_MspInit(void)
 104:Src/stm32f0xx_hal_msp.c **** {
  27              		.loc 1 104 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 82B0     		sub	sp, sp, #8
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
 105:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 0 */
 106:Src/stm32f0xx_hal_msp.c **** 
 107:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END MspInit 0 */
 108:Src/stm32f0xx_hal_msp.c **** 
 109:Src/stm32f0xx_hal_msp.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
  35              		.loc 1 109 3 view .LVU1
  36              	.LBB2:
  37              		.loc 1 109 3 view .LVU2
  38              		.loc 1 109 3 view .LVU3
  39 0002 0A4B     		ldr	r3, .L2
  40 0004 9969     		ldr	r1, [r3, #24]
  41 0006 0122     		movs	r2, #1
  42 0008 1143     		orrs	r1, r2
  43 000a 9961     		str	r1, [r3, #24]
  44              		.loc 1 109 3 view .LVU4
  45 000c 9969     		ldr	r1, [r3, #24]
  46 000e 0A40     		ands	r2, r1
  47 0010 0092     		str	r2, [sp]
  48              		.loc 1 109 3 view .LVU5
  49 0012 009A     		ldr	r2, [sp]
  50              	.LBE2:
 110:Src/stm32f0xx_hal_msp.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  51              		.loc 1 110 3 view .LVU6
  52              	.LBB3:
  53              		.loc 1 110 3 view .LVU7
  54              		.loc 1 110 3 view .LVU8
  55 0014 DA69     		ldr	r2, [r3, #28]
  56 0016 8021     		movs	r1, #128
  57 0018 4905     		lsls	r1, r1, #21
  58 001a 0A43     		orrs	r2, r1
  59 001c DA61     		str	r2, [r3, #28]
  60              		.loc 1 110 3 view .LVU9
  61 001e DB69     		ldr	r3, [r3, #28]
  62 0020 0B40     		ands	r3, r1
ARM GAS  /tmp/ccXBTJBR.s 			page 4


  63 0022 0193     		str	r3, [sp, #4]
  64              		.loc 1 110 3 view .LVU10
  65 0024 019B     		ldr	r3, [sp, #4]
  66              	.LBE3:
 111:Src/stm32f0xx_hal_msp.c **** 
 112:Src/stm32f0xx_hal_msp.c ****   /* System interrupt init*/
 113:Src/stm32f0xx_hal_msp.c **** 
 114:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 1 */
 115:Src/stm32f0xx_hal_msp.c **** 
 116:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END MspInit 1 */
 117:Src/stm32f0xx_hal_msp.c **** }
  67              		.loc 1 117 1 is_stmt 0 view .LVU11
  68 0026 02B0     		add	sp, sp, #8
  69              		@ sp needed
  70 0028 7047     		bx	lr
  71              	.L3:
  72 002a C046     		.align	2
  73              	.L2:
  74 002c 00100240 		.word	1073876992
  75              		.cfi_endproc
  76              	.LFE37:
  78              		.section	.text.HAL_TIM_Encoder_MspInit,"ax",%progbits
  79              		.align	1
  80              		.global	HAL_TIM_Encoder_MspInit
  81              		.syntax unified
  82              		.code	16
  83              		.thumb_func
  84              		.fpu softvfp
  86              	HAL_TIM_Encoder_MspInit:
  87              	.LVL0:
  88              	.LFB38:
 118:Src/stm32f0xx_hal_msp.c **** 
 119:Src/stm32f0xx_hal_msp.c **** /**
 120:Src/stm32f0xx_hal_msp.c **** * @brief TIM_Encoder MSP Initialization
 121:Src/stm32f0xx_hal_msp.c **** * This function configures the hardware resources used in this example
 122:Src/stm32f0xx_hal_msp.c **** * @param htim_encoder: TIM_Encoder handle pointer
 123:Src/stm32f0xx_hal_msp.c **** * @retval None
 124:Src/stm32f0xx_hal_msp.c **** */
 125:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* htim_encoder)
 126:Src/stm32f0xx_hal_msp.c **** {
  89              		.loc 1 126 1 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 32
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		.loc 1 126 1 is_stmt 0 view .LVU13
  94 0000 10B5     		push	{r4, lr}
  95              	.LCFI1:
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 4, -8
  98              		.cfi_offset 14, -4
  99 0002 88B0     		sub	sp, sp, #32
 100              	.LCFI2:
 101              		.cfi_def_cfa_offset 40
 102 0004 0400     		movs	r4, r0
 127:Src/stm32f0xx_hal_msp.c **** 
 128:Src/stm32f0xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 103              		.loc 1 128 3 is_stmt 1 view .LVU14
ARM GAS  /tmp/ccXBTJBR.s 			page 5


 104              		.loc 1 128 20 is_stmt 0 view .LVU15
 105 0006 1422     		movs	r2, #20
 106 0008 0021     		movs	r1, #0
 107 000a 03A8     		add	r0, sp, #12
 108              	.LVL1:
 109              		.loc 1 128 20 view .LVU16
 110 000c FFF7FEFF 		bl	memset
 111              	.LVL2:
 129:Src/stm32f0xx_hal_msp.c ****   if(htim_encoder->Instance==TIM1)
 112              		.loc 1 129 3 is_stmt 1 view .LVU17
 113              		.loc 1 129 18 is_stmt 0 view .LVU18
 114 0010 2268     		ldr	r2, [r4]
 115              		.loc 1 129 5 view .LVU19
 116 0012 124B     		ldr	r3, .L7
 117 0014 9A42     		cmp	r2, r3
 118 0016 01D0     		beq	.L6
 119              	.L4:
 130:Src/stm32f0xx_hal_msp.c ****   {
 131:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 132:Src/stm32f0xx_hal_msp.c **** 
 133:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM1_MspInit 0 */
 134:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 135:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM1_CLK_ENABLE();
 136:Src/stm32f0xx_hal_msp.c ****   
 137:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 138:Src/stm32f0xx_hal_msp.c ****     /**TIM1 GPIO Configuration    
 139:Src/stm32f0xx_hal_msp.c ****     PA8     ------> TIM1_CH1
 140:Src/stm32f0xx_hal_msp.c ****     PA9     ------> TIM1_CH2 
 141:Src/stm32f0xx_hal_msp.c ****     */
 142:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = ENCODER_B_Pin|ENCODER_A_Pin;
 143:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 144:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 145:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 146:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM1;
 147:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 148:Src/stm32f0xx_hal_msp.c **** 
 149:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 150:Src/stm32f0xx_hal_msp.c **** 
 151:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM1_MspInit 1 */
 152:Src/stm32f0xx_hal_msp.c ****   }
 153:Src/stm32f0xx_hal_msp.c **** 
 154:Src/stm32f0xx_hal_msp.c **** }
 120              		.loc 1 154 1 view .LVU20
 121 0018 08B0     		add	sp, sp, #32
 122              		@ sp needed
 123              	.LVL3:
 124              		.loc 1 154 1 view .LVU21
 125 001a 10BD     		pop	{r4, pc}
 126              	.LVL4:
 127              	.L6:
 135:Src/stm32f0xx_hal_msp.c ****   
 128              		.loc 1 135 5 is_stmt 1 view .LVU22
 129              	.LBB4:
 135:Src/stm32f0xx_hal_msp.c ****   
 130              		.loc 1 135 5 view .LVU23
 135:Src/stm32f0xx_hal_msp.c ****   
 131              		.loc 1 135 5 view .LVU24
ARM GAS  /tmp/ccXBTJBR.s 			page 6


 132 001c 104B     		ldr	r3, .L7+4
 133 001e 9969     		ldr	r1, [r3, #24]
 134 0020 8020     		movs	r0, #128
 135 0022 0001     		lsls	r0, r0, #4
 136 0024 0143     		orrs	r1, r0
 137 0026 9961     		str	r1, [r3, #24]
 135:Src/stm32f0xx_hal_msp.c ****   
 138              		.loc 1 135 5 view .LVU25
 139 0028 9A69     		ldr	r2, [r3, #24]
 140 002a 0240     		ands	r2, r0
 141 002c 0192     		str	r2, [sp, #4]
 135:Src/stm32f0xx_hal_msp.c ****   
 142              		.loc 1 135 5 view .LVU26
 143 002e 019A     		ldr	r2, [sp, #4]
 144              	.LBE4:
 137:Src/stm32f0xx_hal_msp.c ****     /**TIM1 GPIO Configuration    
 145              		.loc 1 137 5 view .LVU27
 146              	.LBB5:
 137:Src/stm32f0xx_hal_msp.c ****     /**TIM1 GPIO Configuration    
 147              		.loc 1 137 5 view .LVU28
 137:Src/stm32f0xx_hal_msp.c ****     /**TIM1 GPIO Configuration    
 148              		.loc 1 137 5 view .LVU29
 149 0030 5A69     		ldr	r2, [r3, #20]
 150 0032 8021     		movs	r1, #128
 151 0034 8902     		lsls	r1, r1, #10
 152 0036 0A43     		orrs	r2, r1
 153 0038 5A61     		str	r2, [r3, #20]
 137:Src/stm32f0xx_hal_msp.c ****     /**TIM1 GPIO Configuration    
 154              		.loc 1 137 5 view .LVU30
 155 003a 5B69     		ldr	r3, [r3, #20]
 156 003c 0B40     		ands	r3, r1
 157 003e 0293     		str	r3, [sp, #8]
 137:Src/stm32f0xx_hal_msp.c ****     /**TIM1 GPIO Configuration    
 158              		.loc 1 137 5 view .LVU31
 159 0040 029B     		ldr	r3, [sp, #8]
 160              	.LBE5:
 142:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 161              		.loc 1 142 5 view .LVU32
 142:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 162              		.loc 1 142 25 is_stmt 0 view .LVU33
 163 0042 C023     		movs	r3, #192
 164 0044 9B00     		lsls	r3, r3, #2
 165 0046 0393     		str	r3, [sp, #12]
 143:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 166              		.loc 1 143 5 is_stmt 1 view .LVU34
 143:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 167              		.loc 1 143 26 is_stmt 0 view .LVU35
 168 0048 0223     		movs	r3, #2
 169 004a 0493     		str	r3, [sp, #16]
 144:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 170              		.loc 1 144 5 is_stmt 1 view .LVU36
 145:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM1;
 171              		.loc 1 145 5 view .LVU37
 146:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 172              		.loc 1 146 5 view .LVU38
 146:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 173              		.loc 1 146 31 is_stmt 0 view .LVU39
ARM GAS  /tmp/ccXBTJBR.s 			page 7


 174 004c 0793     		str	r3, [sp, #28]
 147:Src/stm32f0xx_hal_msp.c **** 
 175              		.loc 1 147 5 is_stmt 1 view .LVU40
 176 004e 9020     		movs	r0, #144
 177 0050 03A9     		add	r1, sp, #12
 178 0052 C005     		lsls	r0, r0, #23
 179 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 180              	.LVL5:
 181              		.loc 1 154 1 is_stmt 0 view .LVU41
 182 0058 DEE7     		b	.L4
 183              	.L8:
 184 005a C046     		.align	2
 185              	.L7:
 186 005c 002C0140 		.word	1073818624
 187 0060 00100240 		.word	1073876992
 188              		.cfi_endproc
 189              	.LFE38:
 191              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 192              		.align	1
 193              		.global	HAL_TIM_Base_MspInit
 194              		.syntax unified
 195              		.code	16
 196              		.thumb_func
 197              		.fpu softvfp
 199              	HAL_TIM_Base_MspInit:
 200              	.LVL6:
 201              	.LFB39:
 155:Src/stm32f0xx_hal_msp.c **** 
 156:Src/stm32f0xx_hal_msp.c **** /**
 157:Src/stm32f0xx_hal_msp.c **** * @brief TIM_Base MSP Initialization
 158:Src/stm32f0xx_hal_msp.c **** * This function configures the hardware resources used in this example
 159:Src/stm32f0xx_hal_msp.c **** * @param htim_base: TIM_Base handle pointer
 160:Src/stm32f0xx_hal_msp.c **** * @retval None
 161:Src/stm32f0xx_hal_msp.c **** */
 162:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
 163:Src/stm32f0xx_hal_msp.c **** {
 202              		.loc 1 163 1 is_stmt 1 view -0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 8
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 207              		.loc 1 163 1 is_stmt 0 view .LVU43
 208 0000 82B0     		sub	sp, sp, #8
 209              	.LCFI3:
 210              		.cfi_def_cfa_offset 8
 164:Src/stm32f0xx_hal_msp.c **** 
 165:Src/stm32f0xx_hal_msp.c ****   if(htim_base->Instance==TIM2)
 211              		.loc 1 165 3 is_stmt 1 view .LVU44
 212              		.loc 1 165 15 is_stmt 0 view .LVU45
 213 0002 0368     		ldr	r3, [r0]
 214              		.loc 1 165 5 view .LVU46
 215 0004 8022     		movs	r2, #128
 216 0006 D205     		lsls	r2, r2, #23
 217 0008 9342     		cmp	r3, r2
 218 000a 04D0     		beq	.L12
 166:Src/stm32f0xx_hal_msp.c ****   {
 167:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspInit 0 */
ARM GAS  /tmp/ccXBTJBR.s 			page 8


 168:Src/stm32f0xx_hal_msp.c **** 
 169:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM2_MspInit 0 */
 170:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 171:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM2_CLK_ENABLE();
 172:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 173:Src/stm32f0xx_hal_msp.c **** 
 174:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM2_MspInit 1 */
 175:Src/stm32f0xx_hal_msp.c ****   }
 176:Src/stm32f0xx_hal_msp.c ****   else if(htim_base->Instance==TIM3)
 219              		.loc 1 176 8 is_stmt 1 view .LVU47
 220              		.loc 1 176 10 is_stmt 0 view .LVU48
 221 000c 0C4A     		ldr	r2, .L14
 222 000e 9342     		cmp	r3, r2
 223 0010 0BD0     		beq	.L13
 224              	.L9:
 177:Src/stm32f0xx_hal_msp.c ****   {
 178:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 179:Src/stm32f0xx_hal_msp.c **** 
 180:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM3_MspInit 0 */
 181:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 182:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM3_CLK_ENABLE();
 183:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 184:Src/stm32f0xx_hal_msp.c **** 
 185:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM3_MspInit 1 */
 186:Src/stm32f0xx_hal_msp.c ****   }
 187:Src/stm32f0xx_hal_msp.c **** 
 188:Src/stm32f0xx_hal_msp.c **** }
 225              		.loc 1 188 1 view .LVU49
 226 0012 02B0     		add	sp, sp, #8
 227              		@ sp needed
 228 0014 7047     		bx	lr
 229              	.L12:
 171:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 230              		.loc 1 171 5 is_stmt 1 view .LVU50
 231              	.LBB6:
 171:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 232              		.loc 1 171 5 view .LVU51
 171:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 233              		.loc 1 171 5 view .LVU52
 234 0016 0B4A     		ldr	r2, .L14+4
 235 0018 D169     		ldr	r1, [r2, #28]
 236 001a 0123     		movs	r3, #1
 237 001c 1943     		orrs	r1, r3
 238 001e D161     		str	r1, [r2, #28]
 171:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 239              		.loc 1 171 5 view .LVU53
 240 0020 D269     		ldr	r2, [r2, #28]
 241 0022 1340     		ands	r3, r2
 242 0024 0093     		str	r3, [sp]
 171:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 243              		.loc 1 171 5 view .LVU54
 244 0026 009B     		ldr	r3, [sp]
 245              	.LBE6:
 246 0028 F3E7     		b	.L9
 247              	.L13:
 182:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 248              		.loc 1 182 5 view .LVU55
ARM GAS  /tmp/ccXBTJBR.s 			page 9


 249              	.LBB7:
 182:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 250              		.loc 1 182 5 view .LVU56
 182:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 251              		.loc 1 182 5 view .LVU57
 252 002a 064A     		ldr	r2, .L14+4
 253 002c D169     		ldr	r1, [r2, #28]
 254 002e 0223     		movs	r3, #2
 255 0030 1943     		orrs	r1, r3
 256 0032 D161     		str	r1, [r2, #28]
 182:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 257              		.loc 1 182 5 view .LVU58
 258 0034 D269     		ldr	r2, [r2, #28]
 259 0036 1340     		ands	r3, r2
 260 0038 0193     		str	r3, [sp, #4]
 182:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 261              		.loc 1 182 5 view .LVU59
 262 003a 019B     		ldr	r3, [sp, #4]
 263              	.LBE7:
 264              		.loc 1 188 1 is_stmt 0 view .LVU60
 265 003c E9E7     		b	.L9
 266              	.L15:
 267 003e C046     		.align	2
 268              	.L14:
 269 0040 00040040 		.word	1073742848
 270 0044 00100240 		.word	1073876992
 271              		.cfi_endproc
 272              	.LFE39:
 274              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 275              		.align	1
 276              		.global	HAL_TIM_MspPostInit
 277              		.syntax unified
 278              		.code	16
 279              		.thumb_func
 280              		.fpu softvfp
 282              	HAL_TIM_MspPostInit:
 283              	.LVL7:
 284              	.LFB40:
 189:Src/stm32f0xx_hal_msp.c **** 
 190:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
 191:Src/stm32f0xx_hal_msp.c **** {
 285              		.loc 1 191 1 is_stmt 1 view -0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 32
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		.loc 1 191 1 is_stmt 0 view .LVU62
 290 0000 70B5     		push	{r4, r5, r6, lr}
 291              	.LCFI4:
 292              		.cfi_def_cfa_offset 16
 293              		.cfi_offset 4, -16
 294              		.cfi_offset 5, -12
 295              		.cfi_offset 6, -8
 296              		.cfi_offset 14, -4
 297 0002 88B0     		sub	sp, sp, #32
 298              	.LCFI5:
 299              		.cfi_def_cfa_offset 48
 300 0004 0400     		movs	r4, r0
ARM GAS  /tmp/ccXBTJBR.s 			page 10


 192:Src/stm32f0xx_hal_msp.c **** 
 193:Src/stm32f0xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 301              		.loc 1 193 3 is_stmt 1 view .LVU63
 302              		.loc 1 193 20 is_stmt 0 view .LVU64
 303 0006 1422     		movs	r2, #20
 304 0008 0021     		movs	r1, #0
 305 000a 03A8     		add	r0, sp, #12
 306              	.LVL8:
 307              		.loc 1 193 20 view .LVU65
 308 000c FFF7FEFF 		bl	memset
 309              	.LVL9:
 194:Src/stm32f0xx_hal_msp.c ****   if(htim->Instance==TIM2)
 310              		.loc 1 194 3 is_stmt 1 view .LVU66
 311              		.loc 1 194 10 is_stmt 0 view .LVU67
 312 0010 2368     		ldr	r3, [r4]
 313              		.loc 1 194 5 view .LVU68
 314 0012 8022     		movs	r2, #128
 315 0014 D205     		lsls	r2, r2, #23
 316 0016 9342     		cmp	r3, r2
 317 0018 04D0     		beq	.L19
 195:Src/stm32f0xx_hal_msp.c ****   {
 196:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspPostInit 0 */
 197:Src/stm32f0xx_hal_msp.c **** 
 198:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM2_MspPostInit 0 */
 199:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 200:Src/stm32f0xx_hal_msp.c ****     /**TIM2 GPIO Configuration    
 201:Src/stm32f0xx_hal_msp.c ****     PA0     ------> TIM2_CH1
 202:Src/stm32f0xx_hal_msp.c ****     PA1     ------> TIM2_CH2
 203:Src/stm32f0xx_hal_msp.c ****     PA2     ------> TIM2_CH3
 204:Src/stm32f0xx_hal_msp.c ****     PA3     ------> TIM2_CH4 
 205:Src/stm32f0xx_hal_msp.c ****     */
 206:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = DCLCK_Pin|S5_Pin|S2_Pin|S3_Pin;
 207:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 208:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 209:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 210:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM2;
 211:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 212:Src/stm32f0xx_hal_msp.c **** 
 213:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspPostInit 1 */
 214:Src/stm32f0xx_hal_msp.c **** 
 215:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM2_MspPostInit 1 */
 216:Src/stm32f0xx_hal_msp.c ****   }
 217:Src/stm32f0xx_hal_msp.c ****   else if(htim->Instance==TIM3)
 318              		.loc 1 217 8 is_stmt 1 view .LVU69
 319              		.loc 1 217 10 is_stmt 0 view .LVU70
 320 001a 234A     		ldr	r2, .L21
 321 001c 9342     		cmp	r3, r2
 322 001e 18D0     		beq	.L20
 323              	.LVL10:
 324              	.L16:
 218:Src/stm32f0xx_hal_msp.c ****   {
 219:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspPostInit 0 */
 220:Src/stm32f0xx_hal_msp.c **** 
 221:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM3_MspPostInit 0 */
 222:Src/stm32f0xx_hal_msp.c ****   
 223:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 224:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
ARM GAS  /tmp/ccXBTJBR.s 			page 11


 225:Src/stm32f0xx_hal_msp.c ****     /**TIM3 GPIO Configuration    
 226:Src/stm32f0xx_hal_msp.c ****     PA6     ------> TIM3_CH1
 227:Src/stm32f0xx_hal_msp.c ****     PA7     ------> TIM3_CH2
 228:Src/stm32f0xx_hal_msp.c ****     PB0     ------> TIM3_CH3
 229:Src/stm32f0xx_hal_msp.c ****     PB1     ------> TIM3_CH4 
 230:Src/stm32f0xx_hal_msp.c ****     */
 231:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = S4_Pin|S1_Pin;
 232:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 233:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 234:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 235:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM3;
 236:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 237:Src/stm32f0xx_hal_msp.c **** 
 238:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = F3_Pin|F5_Pin;
 239:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 240:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 241:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 242:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM3;
 243:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 244:Src/stm32f0xx_hal_msp.c **** 
 245:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspPostInit 1 */
 246:Src/stm32f0xx_hal_msp.c **** 
 247:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM3_MspPostInit 1 */
 248:Src/stm32f0xx_hal_msp.c ****   }
 249:Src/stm32f0xx_hal_msp.c **** 
 250:Src/stm32f0xx_hal_msp.c **** }
 325              		.loc 1 250 1 view .LVU71
 326 0020 08B0     		add	sp, sp, #32
 327              		@ sp needed
 328 0022 70BD     		pop	{r4, r5, r6, pc}
 329              	.LVL11:
 330              	.L19:
 199:Src/stm32f0xx_hal_msp.c ****     /**TIM2 GPIO Configuration    
 331              		.loc 1 199 5 is_stmt 1 view .LVU72
 332              	.LBB8:
 199:Src/stm32f0xx_hal_msp.c ****     /**TIM2 GPIO Configuration    
 333              		.loc 1 199 5 view .LVU73
 199:Src/stm32f0xx_hal_msp.c ****     /**TIM2 GPIO Configuration    
 334              		.loc 1 199 5 view .LVU74
 335 0024 214A     		ldr	r2, .L21+4
 336 0026 5169     		ldr	r1, [r2, #20]
 337 0028 8020     		movs	r0, #128
 338 002a 8002     		lsls	r0, r0, #10
 339 002c 0143     		orrs	r1, r0
 340 002e 5161     		str	r1, [r2, #20]
 199:Src/stm32f0xx_hal_msp.c ****     /**TIM2 GPIO Configuration    
 341              		.loc 1 199 5 view .LVU75
 342 0030 5369     		ldr	r3, [r2, #20]
 343 0032 0340     		ands	r3, r0
 344 0034 0093     		str	r3, [sp]
 199:Src/stm32f0xx_hal_msp.c ****     /**TIM2 GPIO Configuration    
 345              		.loc 1 199 5 view .LVU76
 346 0036 009B     		ldr	r3, [sp]
 347              	.LBE8:
 206:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 348              		.loc 1 206 5 view .LVU77
 206:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /tmp/ccXBTJBR.s 			page 12


 349              		.loc 1 206 25 is_stmt 0 view .LVU78
 350 0038 0F23     		movs	r3, #15
 351 003a 0393     		str	r3, [sp, #12]
 207:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 352              		.loc 1 207 5 is_stmt 1 view .LVU79
 207:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 353              		.loc 1 207 26 is_stmt 0 view .LVU80
 354 003c 0D3B     		subs	r3, r3, #13
 355 003e 0493     		str	r3, [sp, #16]
 208:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 356              		.loc 1 208 5 is_stmt 1 view .LVU81
 209:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM2;
 357              		.loc 1 209 5 view .LVU82
 209:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM2;
 358              		.loc 1 209 27 is_stmt 0 view .LVU83
 359 0040 0322     		movs	r2, #3
 360 0042 0692     		str	r2, [sp, #24]
 210:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 361              		.loc 1 210 5 is_stmt 1 view .LVU84
 210:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 362              		.loc 1 210 31 is_stmt 0 view .LVU85
 363 0044 0793     		str	r3, [sp, #28]
 211:Src/stm32f0xx_hal_msp.c **** 
 364              		.loc 1 211 5 is_stmt 1 view .LVU86
 365 0046 9020     		movs	r0, #144
 366 0048 03A9     		add	r1, sp, #12
 367 004a C005     		lsls	r0, r0, #23
 368 004c FFF7FEFF 		bl	HAL_GPIO_Init
 369              	.LVL12:
 370 0050 E6E7     		b	.L16
 371              	.L20:
 223:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 372              		.loc 1 223 5 view .LVU87
 373              	.LBB9:
 223:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 374              		.loc 1 223 5 view .LVU88
 223:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 375              		.loc 1 223 5 view .LVU89
 376 0052 164B     		ldr	r3, .L21+4
 377 0054 5969     		ldr	r1, [r3, #20]
 378 0056 8020     		movs	r0, #128
 379 0058 8002     		lsls	r0, r0, #10
 380 005a 0143     		orrs	r1, r0
 381 005c 5961     		str	r1, [r3, #20]
 223:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 382              		.loc 1 223 5 view .LVU90
 383 005e 5A69     		ldr	r2, [r3, #20]
 384 0060 0240     		ands	r2, r0
 385 0062 0192     		str	r2, [sp, #4]
 223:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 386              		.loc 1 223 5 view .LVU91
 387 0064 019A     		ldr	r2, [sp, #4]
 388              	.LBE9:
 224:Src/stm32f0xx_hal_msp.c ****     /**TIM3 GPIO Configuration    
 389              		.loc 1 224 5 view .LVU92
 390              	.LBB10:
 224:Src/stm32f0xx_hal_msp.c ****     /**TIM3 GPIO Configuration    
ARM GAS  /tmp/ccXBTJBR.s 			page 13


 391              		.loc 1 224 5 view .LVU93
 224:Src/stm32f0xx_hal_msp.c ****     /**TIM3 GPIO Configuration    
 392              		.loc 1 224 5 view .LVU94
 393 0066 5A69     		ldr	r2, [r3, #20]
 394 0068 8021     		movs	r1, #128
 395 006a C902     		lsls	r1, r1, #11
 396 006c 0A43     		orrs	r2, r1
 397 006e 5A61     		str	r2, [r3, #20]
 224:Src/stm32f0xx_hal_msp.c ****     /**TIM3 GPIO Configuration    
 398              		.loc 1 224 5 view .LVU95
 399 0070 5B69     		ldr	r3, [r3, #20]
 400 0072 0B40     		ands	r3, r1
 401 0074 0293     		str	r3, [sp, #8]
 224:Src/stm32f0xx_hal_msp.c ****     /**TIM3 GPIO Configuration    
 402              		.loc 1 224 5 view .LVU96
 403 0076 029B     		ldr	r3, [sp, #8]
 404              	.LBE10:
 231:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 405              		.loc 1 231 5 view .LVU97
 231:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 406              		.loc 1 231 25 is_stmt 0 view .LVU98
 407 0078 C023     		movs	r3, #192
 408 007a 0393     		str	r3, [sp, #12]
 232:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 409              		.loc 1 232 5 is_stmt 1 view .LVU99
 232:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 410              		.loc 1 232 26 is_stmt 0 view .LVU100
 411 007c 0226     		movs	r6, #2
 412 007e 0496     		str	r6, [sp, #16]
 233:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 413              		.loc 1 233 5 is_stmt 1 view .LVU101
 234:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM3;
 414              		.loc 1 234 5 view .LVU102
 234:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM3;
 415              		.loc 1 234 27 is_stmt 0 view .LVU103
 416 0080 0324     		movs	r4, #3
 417              	.LVL13:
 234:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM3;
 418              		.loc 1 234 27 view .LVU104
 419 0082 0694     		str	r4, [sp, #24]
 235:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 420              		.loc 1 235 5 is_stmt 1 view .LVU105
 235:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 421              		.loc 1 235 31 is_stmt 0 view .LVU106
 422 0084 0125     		movs	r5, #1
 423 0086 0795     		str	r5, [sp, #28]
 236:Src/stm32f0xx_hal_msp.c **** 
 424              		.loc 1 236 5 is_stmt 1 view .LVU107
 425 0088 9020     		movs	r0, #144
 426 008a 03A9     		add	r1, sp, #12
 427 008c C005     		lsls	r0, r0, #23
 428 008e FFF7FEFF 		bl	HAL_GPIO_Init
 429              	.LVL14:
 238:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 430              		.loc 1 238 5 view .LVU108
 238:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 431              		.loc 1 238 25 is_stmt 0 view .LVU109
ARM GAS  /tmp/ccXBTJBR.s 			page 14


 432 0092 0394     		str	r4, [sp, #12]
 239:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 433              		.loc 1 239 5 is_stmt 1 view .LVU110
 239:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 434              		.loc 1 239 26 is_stmt 0 view .LVU111
 435 0094 0496     		str	r6, [sp, #16]
 240:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 436              		.loc 1 240 5 is_stmt 1 view .LVU112
 240:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 437              		.loc 1 240 26 is_stmt 0 view .LVU113
 438 0096 0023     		movs	r3, #0
 439 0098 0593     		str	r3, [sp, #20]
 241:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM3;
 440              		.loc 1 241 5 is_stmt 1 view .LVU114
 241:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM3;
 441              		.loc 1 241 27 is_stmt 0 view .LVU115
 442 009a 0694     		str	r4, [sp, #24]
 242:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 443              		.loc 1 242 5 is_stmt 1 view .LVU116
 242:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 444              		.loc 1 242 31 is_stmt 0 view .LVU117
 445 009c 0795     		str	r5, [sp, #28]
 243:Src/stm32f0xx_hal_msp.c **** 
 446              		.loc 1 243 5 is_stmt 1 view .LVU118
 447 009e 03A9     		add	r1, sp, #12
 448 00a0 0348     		ldr	r0, .L21+8
 449 00a2 FFF7FEFF 		bl	HAL_GPIO_Init
 450              	.LVL15:
 451              		.loc 1 250 1 is_stmt 0 view .LVU119
 452 00a6 BBE7     		b	.L16
 453              	.L22:
 454              		.align	2
 455              	.L21:
 456 00a8 00040040 		.word	1073742848
 457 00ac 00100240 		.word	1073876992
 458 00b0 00040048 		.word	1207960576
 459              		.cfi_endproc
 460              	.LFE40:
 462              		.section	.text.HAL_TIM_Encoder_MspDeInit,"ax",%progbits
 463              		.align	1
 464              		.global	HAL_TIM_Encoder_MspDeInit
 465              		.syntax unified
 466              		.code	16
 467              		.thumb_func
 468              		.fpu softvfp
 470              	HAL_TIM_Encoder_MspDeInit:
 471              	.LVL16:
 472              	.LFB41:
 251:Src/stm32f0xx_hal_msp.c **** /**
 252:Src/stm32f0xx_hal_msp.c **** * @brief TIM_Encoder MSP De-Initialization
 253:Src/stm32f0xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 254:Src/stm32f0xx_hal_msp.c **** * @param htim_encoder: TIM_Encoder handle pointer
 255:Src/stm32f0xx_hal_msp.c **** * @retval None
 256:Src/stm32f0xx_hal_msp.c **** */
 257:Src/stm32f0xx_hal_msp.c **** 
 258:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_Encoder_MspDeInit(TIM_HandleTypeDef* htim_encoder)
 259:Src/stm32f0xx_hal_msp.c **** {
ARM GAS  /tmp/ccXBTJBR.s 			page 15


 473              		.loc 1 259 1 is_stmt 1 view -0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477              		.loc 1 259 1 is_stmt 0 view .LVU121
 478 0000 10B5     		push	{r4, lr}
 479              	.LCFI6:
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 4, -8
 482              		.cfi_offset 14, -4
 260:Src/stm32f0xx_hal_msp.c **** 
 261:Src/stm32f0xx_hal_msp.c ****   if(htim_encoder->Instance==TIM1)
 483              		.loc 1 261 3 is_stmt 1 view .LVU122
 484              		.loc 1 261 18 is_stmt 0 view .LVU123
 485 0002 0268     		ldr	r2, [r0]
 486              		.loc 1 261 5 view .LVU124
 487 0004 074B     		ldr	r3, .L26
 488 0006 9A42     		cmp	r2, r3
 489 0008 00D0     		beq	.L25
 490              	.LVL17:
 491              	.L23:
 262:Src/stm32f0xx_hal_msp.c ****   {
 263:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 264:Src/stm32f0xx_hal_msp.c **** 
 265:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM1_MspDeInit 0 */
 266:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 267:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM1_CLK_DISABLE();
 268:Src/stm32f0xx_hal_msp.c ****   
 269:Src/stm32f0xx_hal_msp.c ****     /**TIM1 GPIO Configuration    
 270:Src/stm32f0xx_hal_msp.c ****     PA8     ------> TIM1_CH1
 271:Src/stm32f0xx_hal_msp.c ****     PA9     ------> TIM1_CH2 
 272:Src/stm32f0xx_hal_msp.c ****     */
 273:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, ENCODER_B_Pin|ENCODER_A_Pin);
 274:Src/stm32f0xx_hal_msp.c **** 
 275:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 276:Src/stm32f0xx_hal_msp.c **** 
 277:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM1_MspDeInit 1 */
 278:Src/stm32f0xx_hal_msp.c ****   }
 279:Src/stm32f0xx_hal_msp.c **** 
 280:Src/stm32f0xx_hal_msp.c **** }
 492              		.loc 1 280 1 view .LVU125
 493              		@ sp needed
 494 000a 10BD     		pop	{r4, pc}
 495              	.LVL18:
 496              	.L25:
 267:Src/stm32f0xx_hal_msp.c ****   
 497              		.loc 1 267 5 is_stmt 1 view .LVU126
 498 000c 064A     		ldr	r2, .L26+4
 499 000e 9369     		ldr	r3, [r2, #24]
 500 0010 0649     		ldr	r1, .L26+8
 501 0012 0B40     		ands	r3, r1
 502 0014 9361     		str	r3, [r2, #24]
 273:Src/stm32f0xx_hal_msp.c **** 
 503              		.loc 1 273 5 view .LVU127
 504 0016 C021     		movs	r1, #192
 505 0018 9020     		movs	r0, #144
 506              	.LVL19:
ARM GAS  /tmp/ccXBTJBR.s 			page 16


 273:Src/stm32f0xx_hal_msp.c **** 
 507              		.loc 1 273 5 is_stmt 0 view .LVU128
 508 001a 8900     		lsls	r1, r1, #2
 509 001c C005     		lsls	r0, r0, #23
 510 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 511              	.LVL20:
 512              		.loc 1 280 1 view .LVU129
 513 0022 F2E7     		b	.L23
 514              	.L27:
 515              		.align	2
 516              	.L26:
 517 0024 002C0140 		.word	1073818624
 518 0028 00100240 		.word	1073876992
 519 002c FFF7FFFF 		.word	-2049
 520              		.cfi_endproc
 521              	.LFE41:
 523              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 524              		.align	1
 525              		.global	HAL_TIM_Base_MspDeInit
 526              		.syntax unified
 527              		.code	16
 528              		.thumb_func
 529              		.fpu softvfp
 531              	HAL_TIM_Base_MspDeInit:
 532              	.LVL21:
 533              	.LFB42:
 281:Src/stm32f0xx_hal_msp.c **** 
 282:Src/stm32f0xx_hal_msp.c **** /**
 283:Src/stm32f0xx_hal_msp.c **** * @brief TIM_Base MSP De-Initialization
 284:Src/stm32f0xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 285:Src/stm32f0xx_hal_msp.c **** * @param htim_base: TIM_Base handle pointer
 286:Src/stm32f0xx_hal_msp.c **** * @retval None
 287:Src/stm32f0xx_hal_msp.c **** */
 288:Src/stm32f0xx_hal_msp.c **** 
 289:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* htim_base)
 290:Src/stm32f0xx_hal_msp.c **** {
 534              		.loc 1 290 1 is_stmt 1 view -0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 291:Src/stm32f0xx_hal_msp.c **** 
 292:Src/stm32f0xx_hal_msp.c ****   if(htim_base->Instance==TIM2)
 539              		.loc 1 292 3 view .LVU131
 540              		.loc 1 292 15 is_stmt 0 view .LVU132
 541 0000 0368     		ldr	r3, [r0]
 542              		.loc 1 292 5 view .LVU133
 543 0002 8022     		movs	r2, #128
 544 0004 D205     		lsls	r2, r2, #23
 545 0006 9342     		cmp	r3, r2
 546 0008 03D0     		beq	.L31
 293:Src/stm32f0xx_hal_msp.c ****   {
 294:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 295:Src/stm32f0xx_hal_msp.c **** 
 296:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM2_MspDeInit 0 */
 297:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 298:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM2_CLK_DISABLE();
ARM GAS  /tmp/ccXBTJBR.s 			page 17


 299:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 300:Src/stm32f0xx_hal_msp.c **** 
 301:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM2_MspDeInit 1 */
 302:Src/stm32f0xx_hal_msp.c ****   }
 303:Src/stm32f0xx_hal_msp.c ****   else if(htim_base->Instance==TIM3)
 547              		.loc 1 303 8 is_stmt 1 view .LVU134
 548              		.loc 1 303 10 is_stmt 0 view .LVU135
 549 000a 084A     		ldr	r2, .L33
 550 000c 9342     		cmp	r3, r2
 551 000e 06D0     		beq	.L32
 552              	.L28:
 304:Src/stm32f0xx_hal_msp.c ****   {
 305:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 306:Src/stm32f0xx_hal_msp.c **** 
 307:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM3_MspDeInit 0 */
 308:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 309:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM3_CLK_DISABLE();
 310:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 311:Src/stm32f0xx_hal_msp.c **** 
 312:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM3_MspDeInit 1 */
 313:Src/stm32f0xx_hal_msp.c ****   }
 314:Src/stm32f0xx_hal_msp.c **** 
 315:Src/stm32f0xx_hal_msp.c **** }
 553              		.loc 1 315 1 view .LVU136
 554              		@ sp needed
 555 0010 7047     		bx	lr
 556              	.L31:
 298:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 557              		.loc 1 298 5 is_stmt 1 view .LVU137
 558 0012 074A     		ldr	r2, .L33+4
 559 0014 D369     		ldr	r3, [r2, #28]
 560 0016 0121     		movs	r1, #1
 561 0018 8B43     		bics	r3, r1
 562 001a D361     		str	r3, [r2, #28]
 563 001c F8E7     		b	.L28
 564              	.L32:
 309:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 565              		.loc 1 309 5 view .LVU138
 566 001e 044A     		ldr	r2, .L33+4
 567 0020 D369     		ldr	r3, [r2, #28]
 568 0022 0221     		movs	r1, #2
 569 0024 8B43     		bics	r3, r1
 570 0026 D361     		str	r3, [r2, #28]
 571              		.loc 1 315 1 is_stmt 0 view .LVU139
 572 0028 F2E7     		b	.L28
 573              	.L34:
 574 002a C046     		.align	2
 575              	.L33:
 576 002c 00040040 		.word	1073742848
 577 0030 00100240 		.word	1073876992
 578              		.cfi_endproc
 579              	.LFE42:
 581              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 582              		.align	1
 583              		.global	HAL_UART_MspInit
 584              		.syntax unified
 585              		.code	16
ARM GAS  /tmp/ccXBTJBR.s 			page 18


 586              		.thumb_func
 587              		.fpu softvfp
 589              	HAL_UART_MspInit:
 590              	.LVL22:
 591              	.LFB43:
 316:Src/stm32f0xx_hal_msp.c **** 
 317:Src/stm32f0xx_hal_msp.c **** /**
 318:Src/stm32f0xx_hal_msp.c **** * @brief UART MSP Initialization
 319:Src/stm32f0xx_hal_msp.c **** * This function configures the hardware resources used in this example
 320:Src/stm32f0xx_hal_msp.c **** * @param huart: UART handle pointer
 321:Src/stm32f0xx_hal_msp.c **** * @retval None
 322:Src/stm32f0xx_hal_msp.c **** */
 323:Src/stm32f0xx_hal_msp.c **** void HAL_UART_MspInit(UART_HandleTypeDef* huart)
 324:Src/stm32f0xx_hal_msp.c **** {
 592              		.loc 1 324 1 is_stmt 1 view -0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 32
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596              		.loc 1 324 1 is_stmt 0 view .LVU141
 597 0000 10B5     		push	{r4, lr}
 598              	.LCFI7:
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 4, -8
 601              		.cfi_offset 14, -4
 602 0002 88B0     		sub	sp, sp, #32
 603              	.LCFI8:
 604              		.cfi_def_cfa_offset 40
 605 0004 0400     		movs	r4, r0
 325:Src/stm32f0xx_hal_msp.c **** 
 326:Src/stm32f0xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 606              		.loc 1 326 3 is_stmt 1 view .LVU142
 607              		.loc 1 326 20 is_stmt 0 view .LVU143
 608 0006 1422     		movs	r2, #20
 609 0008 0021     		movs	r1, #0
 610 000a 03A8     		add	r0, sp, #12
 611              	.LVL23:
 612              		.loc 1 326 20 view .LVU144
 613 000c FFF7FEFF 		bl	memset
 614              	.LVL24:
 327:Src/stm32f0xx_hal_msp.c ****   if(huart->Instance==USART3)
 615              		.loc 1 327 3 is_stmt 1 view .LVU145
 616              		.loc 1 327 5 is_stmt 0 view .LVU146
 617 0010 284B     		ldr	r3, .L42
 618 0012 2268     		ldr	r2, [r4]
 619 0014 9A42     		cmp	r2, r3
 620 0016 01D0     		beq	.L39
 621              	.L35:
 328:Src/stm32f0xx_hal_msp.c ****   {
 329:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspInit 0 */
 330:Src/stm32f0xx_hal_msp.c **** 
 331:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USART3_MspInit 0 */
 332:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 333:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_USART3_CLK_ENABLE();
 334:Src/stm32f0xx_hal_msp.c ****   
 335:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 336:Src/stm32f0xx_hal_msp.c ****     /**USART3 GPIO Configuration    
 337:Src/stm32f0xx_hal_msp.c ****     PB10     ------> USART3_TX
ARM GAS  /tmp/ccXBTJBR.s 			page 19


 338:Src/stm32f0xx_hal_msp.c ****     PB11     ------> USART3_RX 
 339:Src/stm32f0xx_hal_msp.c ****     */
 340:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = IN_TX_Pin|IN_RX_Pin;
 341:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 342:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 343:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 344:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF4_USART3;
 345:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 346:Src/stm32f0xx_hal_msp.c **** 
 347:Src/stm32f0xx_hal_msp.c ****     /* USART3 DMA Init */
 348:Src/stm32f0xx_hal_msp.c ****     /* USART3_RX Init */
 349:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Instance = DMA1_Channel6;
 350:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 351:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 352:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 353:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 354:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 355:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.Mode = DMA_NORMAL;
 356:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_LOW;
 357:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 358:Src/stm32f0xx_hal_msp.c ****     {
 359:Src/stm32f0xx_hal_msp.c ****       Error_Handler();
 360:Src/stm32f0xx_hal_msp.c ****     }
 361:Src/stm32f0xx_hal_msp.c **** 
 362:Src/stm32f0xx_hal_msp.c ****     __HAL_LINKDMA(huart,hdmarx,hdma_usart3_rx);
 363:Src/stm32f0xx_hal_msp.c **** 
 364:Src/stm32f0xx_hal_msp.c ****     /* USART3_TX Init */
 365:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Instance = DMA1_Channel7;
 366:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 367:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 368:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 369:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 370:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 371:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.Mode = DMA_NORMAL;
 372:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.Priority = DMA_PRIORITY_LOW;
 373:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 374:Src/stm32f0xx_hal_msp.c ****     {
 375:Src/stm32f0xx_hal_msp.c ****       Error_Handler();
 376:Src/stm32f0xx_hal_msp.c ****     }
 377:Src/stm32f0xx_hal_msp.c **** 
 378:Src/stm32f0xx_hal_msp.c ****     __HAL_LINKDMA(huart,hdmatx,hdma_usart3_tx);
 379:Src/stm32f0xx_hal_msp.c **** 
 380:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspInit 1 */
 381:Src/stm32f0xx_hal_msp.c **** 
 382:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USART3_MspInit 1 */
 383:Src/stm32f0xx_hal_msp.c ****   }
 384:Src/stm32f0xx_hal_msp.c **** 
 385:Src/stm32f0xx_hal_msp.c **** }
 622              		.loc 1 385 1 view .LVU147
 623 0018 08B0     		add	sp, sp, #32
 624              		@ sp needed
 625              	.LVL25:
 626              		.loc 1 385 1 view .LVU148
 627 001a 10BD     		pop	{r4, pc}
 628              	.LVL26:
 629              	.L39:
 333:Src/stm32f0xx_hal_msp.c ****   
ARM GAS  /tmp/ccXBTJBR.s 			page 20


 630              		.loc 1 333 5 is_stmt 1 view .LVU149
 631              	.LBB11:
 333:Src/stm32f0xx_hal_msp.c ****   
 632              		.loc 1 333 5 view .LVU150
 333:Src/stm32f0xx_hal_msp.c ****   
 633              		.loc 1 333 5 view .LVU151
 634 001c 264B     		ldr	r3, .L42+4
 635 001e D969     		ldr	r1, [r3, #28]
 636 0020 8022     		movs	r2, #128
 637 0022 D202     		lsls	r2, r2, #11
 638 0024 1143     		orrs	r1, r2
 639 0026 D961     		str	r1, [r3, #28]
 333:Src/stm32f0xx_hal_msp.c ****   
 640              		.loc 1 333 5 view .LVU152
 641 0028 D969     		ldr	r1, [r3, #28]
 642 002a 1140     		ands	r1, r2
 643 002c 0191     		str	r1, [sp, #4]
 333:Src/stm32f0xx_hal_msp.c ****   
 644              		.loc 1 333 5 view .LVU153
 645 002e 0199     		ldr	r1, [sp, #4]
 646              	.LBE11:
 335:Src/stm32f0xx_hal_msp.c ****     /**USART3 GPIO Configuration    
 647              		.loc 1 335 5 view .LVU154
 648              	.LBB12:
 335:Src/stm32f0xx_hal_msp.c ****     /**USART3 GPIO Configuration    
 649              		.loc 1 335 5 view .LVU155
 335:Src/stm32f0xx_hal_msp.c ****     /**USART3 GPIO Configuration    
 650              		.loc 1 335 5 view .LVU156
 651 0030 5969     		ldr	r1, [r3, #20]
 652 0032 1143     		orrs	r1, r2
 653 0034 5961     		str	r1, [r3, #20]
 335:Src/stm32f0xx_hal_msp.c ****     /**USART3 GPIO Configuration    
 654              		.loc 1 335 5 view .LVU157
 655 0036 5B69     		ldr	r3, [r3, #20]
 656 0038 1A40     		ands	r2, r3
 657 003a 0292     		str	r2, [sp, #8]
 335:Src/stm32f0xx_hal_msp.c ****     /**USART3 GPIO Configuration    
 658              		.loc 1 335 5 view .LVU158
 659 003c 029B     		ldr	r3, [sp, #8]
 660              	.LBE12:
 340:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 661              		.loc 1 340 5 view .LVU159
 340:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 662              		.loc 1 340 25 is_stmt 0 view .LVU160
 663 003e C023     		movs	r3, #192
 664 0040 1B01     		lsls	r3, r3, #4
 665 0042 0393     		str	r3, [sp, #12]
 341:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 666              		.loc 1 341 5 is_stmt 1 view .LVU161
 341:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 667              		.loc 1 341 26 is_stmt 0 view .LVU162
 668 0044 0223     		movs	r3, #2
 669 0046 0493     		str	r3, [sp, #16]
 342:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 670              		.loc 1 342 5 is_stmt 1 view .LVU163
 343:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF4_USART3;
 671              		.loc 1 343 5 view .LVU164
ARM GAS  /tmp/ccXBTJBR.s 			page 21


 343:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF4_USART3;
 672              		.loc 1 343 27 is_stmt 0 view .LVU165
 673 0048 0133     		adds	r3, r3, #1
 674 004a 0693     		str	r3, [sp, #24]
 344:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 675              		.loc 1 344 5 is_stmt 1 view .LVU166
 344:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 676              		.loc 1 344 31 is_stmt 0 view .LVU167
 677 004c 0133     		adds	r3, r3, #1
 678 004e 0793     		str	r3, [sp, #28]
 345:Src/stm32f0xx_hal_msp.c **** 
 679              		.loc 1 345 5 is_stmt 1 view .LVU168
 680 0050 03A9     		add	r1, sp, #12
 681 0052 1A48     		ldr	r0, .L42+8
 682 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 683              	.LVL27:
 349:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 684              		.loc 1 349 5 view .LVU169
 349:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 685              		.loc 1 349 29 is_stmt 0 view .LVU170
 686 0058 1948     		ldr	r0, .L42+12
 687 005a 1A4B     		ldr	r3, .L42+16
 688 005c 0360     		str	r3, [r0]
 350:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 689              		.loc 1 350 5 is_stmt 1 view .LVU171
 350:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 690              		.loc 1 350 35 is_stmt 0 view .LVU172
 691 005e 0023     		movs	r3, #0
 692 0060 4360     		str	r3, [r0, #4]
 351:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 693              		.loc 1 351 5 is_stmt 1 view .LVU173
 351:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 694              		.loc 1 351 35 is_stmt 0 view .LVU174
 695 0062 8360     		str	r3, [r0, #8]
 352:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 696              		.loc 1 352 5 is_stmt 1 view .LVU175
 352:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 697              		.loc 1 352 32 is_stmt 0 view .LVU176
 698 0064 8022     		movs	r2, #128
 699 0066 C260     		str	r2, [r0, #12]
 353:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 700              		.loc 1 353 5 is_stmt 1 view .LVU177
 353:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 701              		.loc 1 353 45 is_stmt 0 view .LVU178
 702 0068 0361     		str	r3, [r0, #16]
 354:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.Mode = DMA_NORMAL;
 703              		.loc 1 354 5 is_stmt 1 view .LVU179
 354:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.Mode = DMA_NORMAL;
 704              		.loc 1 354 42 is_stmt 0 view .LVU180
 705 006a 4361     		str	r3, [r0, #20]
 355:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_LOW;
 706              		.loc 1 355 5 is_stmt 1 view .LVU181
 355:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_LOW;
 707              		.loc 1 355 30 is_stmt 0 view .LVU182
 708 006c 8361     		str	r3, [r0, #24]
 356:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 709              		.loc 1 356 5 is_stmt 1 view .LVU183
ARM GAS  /tmp/ccXBTJBR.s 			page 22


 356:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 710              		.loc 1 356 34 is_stmt 0 view .LVU184
 711 006e C361     		str	r3, [r0, #28]
 357:Src/stm32f0xx_hal_msp.c ****     {
 712              		.loc 1 357 5 is_stmt 1 view .LVU185
 357:Src/stm32f0xx_hal_msp.c ****     {
 713              		.loc 1 357 9 is_stmt 0 view .LVU186
 714 0070 FFF7FEFF 		bl	HAL_DMA_Init
 715              	.LVL28:
 357:Src/stm32f0xx_hal_msp.c ****     {
 716              		.loc 1 357 8 view .LVU187
 717 0074 0028     		cmp	r0, #0
 718 0076 17D1     		bne	.L40
 719              	.L37:
 362:Src/stm32f0xx_hal_msp.c **** 
 720              		.loc 1 362 5 is_stmt 1 view .LVU188
 362:Src/stm32f0xx_hal_msp.c **** 
 721              		.loc 1 362 5 view .LVU189
 722 0078 114B     		ldr	r3, .L42+12
 723 007a 6366     		str	r3, [r4, #100]
 362:Src/stm32f0xx_hal_msp.c **** 
 724              		.loc 1 362 5 view .LVU190
 725 007c 5C62     		str	r4, [r3, #36]
 365:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 726              		.loc 1 365 5 view .LVU191
 365:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 727              		.loc 1 365 29 is_stmt 0 view .LVU192
 728 007e 1248     		ldr	r0, .L42+20
 729 0080 124B     		ldr	r3, .L42+24
 730 0082 0360     		str	r3, [r0]
 366:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 731              		.loc 1 366 5 is_stmt 1 view .LVU193
 366:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 732              		.loc 1 366 35 is_stmt 0 view .LVU194
 733 0084 1023     		movs	r3, #16
 734 0086 4360     		str	r3, [r0, #4]
 367:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 735              		.loc 1 367 5 is_stmt 1 view .LVU195
 367:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 736              		.loc 1 367 35 is_stmt 0 view .LVU196
 737 0088 0023     		movs	r3, #0
 738 008a 8360     		str	r3, [r0, #8]
 368:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 739              		.loc 1 368 5 is_stmt 1 view .LVU197
 368:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 740              		.loc 1 368 32 is_stmt 0 view .LVU198
 741 008c 8022     		movs	r2, #128
 742 008e C260     		str	r2, [r0, #12]
 369:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 743              		.loc 1 369 5 is_stmt 1 view .LVU199
 369:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 744              		.loc 1 369 45 is_stmt 0 view .LVU200
 745 0090 0361     		str	r3, [r0, #16]
 370:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.Mode = DMA_NORMAL;
 746              		.loc 1 370 5 is_stmt 1 view .LVU201
 370:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.Mode = DMA_NORMAL;
 747              		.loc 1 370 42 is_stmt 0 view .LVU202
ARM GAS  /tmp/ccXBTJBR.s 			page 23


 748 0092 4361     		str	r3, [r0, #20]
 371:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.Priority = DMA_PRIORITY_LOW;
 749              		.loc 1 371 5 is_stmt 1 view .LVU203
 371:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.Priority = DMA_PRIORITY_LOW;
 750              		.loc 1 371 30 is_stmt 0 view .LVU204
 751 0094 8361     		str	r3, [r0, #24]
 372:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 752              		.loc 1 372 5 is_stmt 1 view .LVU205
 372:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 753              		.loc 1 372 34 is_stmt 0 view .LVU206
 754 0096 C361     		str	r3, [r0, #28]
 373:Src/stm32f0xx_hal_msp.c ****     {
 755              		.loc 1 373 5 is_stmt 1 view .LVU207
 373:Src/stm32f0xx_hal_msp.c ****     {
 756              		.loc 1 373 9 is_stmt 0 view .LVU208
 757 0098 FFF7FEFF 		bl	HAL_DMA_Init
 758              	.LVL29:
 373:Src/stm32f0xx_hal_msp.c ****     {
 759              		.loc 1 373 8 view .LVU209
 760 009c 0028     		cmp	r0, #0
 761 009e 06D1     		bne	.L41
 762              	.L38:
 378:Src/stm32f0xx_hal_msp.c **** 
 763              		.loc 1 378 5 is_stmt 1 view .LVU210
 378:Src/stm32f0xx_hal_msp.c **** 
 764              		.loc 1 378 5 view .LVU211
 765 00a0 094B     		ldr	r3, .L42+20
 766 00a2 2366     		str	r3, [r4, #96]
 378:Src/stm32f0xx_hal_msp.c **** 
 767              		.loc 1 378 5 view .LVU212
 768 00a4 5C62     		str	r4, [r3, #36]
 769              		.loc 1 385 1 is_stmt 0 view .LVU213
 770 00a6 B7E7     		b	.L35
 771              	.L40:
 359:Src/stm32f0xx_hal_msp.c ****     }
 772              		.loc 1 359 7 is_stmt 1 view .LVU214
 773 00a8 FFF7FEFF 		bl	Error_Handler
 774              	.LVL30:
 775 00ac E4E7     		b	.L37
 776              	.L41:
 375:Src/stm32f0xx_hal_msp.c ****     }
 777              		.loc 1 375 7 view .LVU215
 778 00ae FFF7FEFF 		bl	Error_Handler
 779              	.LVL31:
 780 00b2 F5E7     		b	.L38
 781              	.L43:
 782              		.align	2
 783              	.L42:
 784 00b4 00480040 		.word	1073760256
 785 00b8 00100240 		.word	1073876992
 786 00bc 00040048 		.word	1207960576
 787 00c0 00000000 		.word	hdma_usart3_rx
 788 00c4 6C000240 		.word	1073873004
 789 00c8 00000000 		.word	hdma_usart3_tx
 790 00cc 80000240 		.word	1073873024
 791              		.cfi_endproc
 792              	.LFE43:
ARM GAS  /tmp/ccXBTJBR.s 			page 24


 794              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 795              		.align	1
 796              		.global	HAL_UART_MspDeInit
 797              		.syntax unified
 798              		.code	16
 799              		.thumb_func
 800              		.fpu softvfp
 802              	HAL_UART_MspDeInit:
 803              	.LVL32:
 804              	.LFB44:
 386:Src/stm32f0xx_hal_msp.c **** 
 387:Src/stm32f0xx_hal_msp.c **** /**
 388:Src/stm32f0xx_hal_msp.c **** * @brief UART MSP De-Initialization
 389:Src/stm32f0xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 390:Src/stm32f0xx_hal_msp.c **** * @param huart: UART handle pointer
 391:Src/stm32f0xx_hal_msp.c **** * @retval None
 392:Src/stm32f0xx_hal_msp.c **** */
 393:Src/stm32f0xx_hal_msp.c **** 
 394:Src/stm32f0xx_hal_msp.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* huart)
 395:Src/stm32f0xx_hal_msp.c **** {
 805              		.loc 1 395 1 view -0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 0
 808              		@ frame_needed = 0, uses_anonymous_args = 0
 809              		.loc 1 395 1 is_stmt 0 view .LVU217
 810 0000 10B5     		push	{r4, lr}
 811              	.LCFI9:
 812              		.cfi_def_cfa_offset 8
 813              		.cfi_offset 4, -8
 814              		.cfi_offset 14, -4
 815 0002 0400     		movs	r4, r0
 396:Src/stm32f0xx_hal_msp.c **** 
 397:Src/stm32f0xx_hal_msp.c ****   if(huart->Instance==USART3)
 816              		.loc 1 397 3 is_stmt 1 view .LVU218
 817              		.loc 1 397 5 is_stmt 0 view .LVU219
 818 0004 0A4B     		ldr	r3, .L47
 819 0006 0268     		ldr	r2, [r0]
 820 0008 9A42     		cmp	r2, r3
 821 000a 00D0     		beq	.L46
 822              	.LVL33:
 823              	.L44:
 398:Src/stm32f0xx_hal_msp.c ****   {
 399:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspDeInit 0 */
 400:Src/stm32f0xx_hal_msp.c **** 
 401:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USART3_MspDeInit 0 */
 402:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 403:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_USART3_CLK_DISABLE();
 404:Src/stm32f0xx_hal_msp.c ****   
 405:Src/stm32f0xx_hal_msp.c ****     /**USART3 GPIO Configuration    
 406:Src/stm32f0xx_hal_msp.c ****     PB10     ------> USART3_TX
 407:Src/stm32f0xx_hal_msp.c ****     PB11     ------> USART3_RX 
 408:Src/stm32f0xx_hal_msp.c ****     */
 409:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOB, IN_TX_Pin|IN_RX_Pin);
 410:Src/stm32f0xx_hal_msp.c **** 
 411:Src/stm32f0xx_hal_msp.c ****     /* USART3 DMA DeInit */
 412:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(huart->hdmarx);
 413:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(huart->hdmatx);
ARM GAS  /tmp/ccXBTJBR.s 			page 25


 414:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspDeInit 1 */
 415:Src/stm32f0xx_hal_msp.c **** 
 416:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USART3_MspDeInit 1 */
 417:Src/stm32f0xx_hal_msp.c ****   }
 418:Src/stm32f0xx_hal_msp.c **** 
 419:Src/stm32f0xx_hal_msp.c **** }
 824              		.loc 1 419 1 view .LVU220
 825              		@ sp needed
 826              	.LVL34:
 827              		.loc 1 419 1 view .LVU221
 828 000c 10BD     		pop	{r4, pc}
 829              	.LVL35:
 830              	.L46:
 403:Src/stm32f0xx_hal_msp.c ****   
 831              		.loc 1 403 5 is_stmt 1 view .LVU222
 832 000e 094A     		ldr	r2, .L47+4
 833 0010 D369     		ldr	r3, [r2, #28]
 834 0012 0949     		ldr	r1, .L47+8
 835 0014 0B40     		ands	r3, r1
 836 0016 D361     		str	r3, [r2, #28]
 409:Src/stm32f0xx_hal_msp.c **** 
 837              		.loc 1 409 5 view .LVU223
 838 0018 C021     		movs	r1, #192
 839 001a 0901     		lsls	r1, r1, #4
 840 001c 0748     		ldr	r0, .L47+12
 841              	.LVL36:
 409:Src/stm32f0xx_hal_msp.c **** 
 842              		.loc 1 409 5 is_stmt 0 view .LVU224
 843 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 844              	.LVL37:
 412:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(huart->hdmatx);
 845              		.loc 1 412 5 is_stmt 1 view .LVU225
 846 0022 606E     		ldr	r0, [r4, #100]
 847 0024 FFF7FEFF 		bl	HAL_DMA_DeInit
 848              	.LVL38:
 413:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspDeInit 1 */
 849              		.loc 1 413 5 view .LVU226
 850 0028 206E     		ldr	r0, [r4, #96]
 851 002a FFF7FEFF 		bl	HAL_DMA_DeInit
 852              	.LVL39:
 853              		.loc 1 419 1 is_stmt 0 view .LVU227
 854 002e EDE7     		b	.L44
 855              	.L48:
 856              		.align	2
 857              	.L47:
 858 0030 00480040 		.word	1073760256
 859 0034 00100240 		.word	1073876992
 860 0038 FFFFFBFF 		.word	-262145
 861 003c 00040048 		.word	1207960576
 862              		.cfi_endproc
 863              	.LFE44:
 865              		.text
 866              	.Letext0:
 867              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 868              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 869              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 870              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
ARM GAS  /tmp/ccXBTJBR.s 			page 26


 871              		.file 6 "/usr/arm-none-eabi/include/sys/lock.h"
 872              		.file 7 "/usr/arm-none-eabi/include/sys/_types.h"
 873              		.file 8 "/usr/lib/gcc/arm-none-eabi/8.3.0/include/stddef.h"
 874              		.file 9 "/usr/arm-none-eabi/include/sys/reent.h"
 875              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 876              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 877              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 878              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 879              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 880              		.file 15 "Inc/main.h"
 881              		.file 16 "<built-in>"
ARM GAS  /tmp/ccXBTJBR.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_msp.c
     /tmp/ccXBTJBR.s:16     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccXBTJBR.s:24     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccXBTJBR.s:74     .text.HAL_MspInit:000000000000002c $d
     /tmp/ccXBTJBR.s:79     .text.HAL_TIM_Encoder_MspInit:0000000000000000 $t
     /tmp/ccXBTJBR.s:86     .text.HAL_TIM_Encoder_MspInit:0000000000000000 HAL_TIM_Encoder_MspInit
     /tmp/ccXBTJBR.s:186    .text.HAL_TIM_Encoder_MspInit:000000000000005c $d
     /tmp/ccXBTJBR.s:192    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccXBTJBR.s:199    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccXBTJBR.s:269    .text.HAL_TIM_Base_MspInit:0000000000000040 $d
     /tmp/ccXBTJBR.s:275    .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccXBTJBR.s:282    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccXBTJBR.s:456    .text.HAL_TIM_MspPostInit:00000000000000a8 $d
     /tmp/ccXBTJBR.s:463    .text.HAL_TIM_Encoder_MspDeInit:0000000000000000 $t
     /tmp/ccXBTJBR.s:470    .text.HAL_TIM_Encoder_MspDeInit:0000000000000000 HAL_TIM_Encoder_MspDeInit
     /tmp/ccXBTJBR.s:517    .text.HAL_TIM_Encoder_MspDeInit:0000000000000024 $d
     /tmp/ccXBTJBR.s:524    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccXBTJBR.s:531    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccXBTJBR.s:576    .text.HAL_TIM_Base_MspDeInit:000000000000002c $d
     /tmp/ccXBTJBR.s:582    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccXBTJBR.s:589    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccXBTJBR.s:784    .text.HAL_UART_MspInit:00000000000000b4 $d
     /tmp/ccXBTJBR.s:795    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccXBTJBR.s:802    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccXBTJBR.s:858    .text.HAL_UART_MspDeInit:0000000000000030 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_Init
HAL_GPIO_DeInit
HAL_DMA_Init
Error_Handler
hdma_usart3_rx
hdma_usart3_tx
HAL_DMA_DeInit
