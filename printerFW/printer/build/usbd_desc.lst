ARM GAS  /tmp/cc3i6xww.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"usbd_desc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.USBD_FS_DeviceDescriptor,"ax",%progbits
  16              		.align	1
  17              		.global	USBD_FS_DeviceDescriptor
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	USBD_FS_DeviceDescriptor:
  25              	.LVL0:
  26              	.LFB37:
  27              		.file 1 "Src/usbd_desc.c"
   1:Src/usbd_desc.c **** /**
   2:Src/usbd_desc.c ****   ******************************************************************************
   3:Src/usbd_desc.c ****   * @file           : usbd_desc.c
   4:Src/usbd_desc.c ****   * @version        : v2.0_Cube
   5:Src/usbd_desc.c ****   * @brief          : This file implements the USB device descriptors.
   6:Src/usbd_desc.c ****   ******************************************************************************
   7:Src/usbd_desc.c ****   * This notice applies to any and all portions of this file
   8:Src/usbd_desc.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usbd_desc.c ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usbd_desc.c ****   * inserted by the user or by software development tools
  11:Src/usbd_desc.c ****   * are owned by their respective copyright owners.
  12:Src/usbd_desc.c ****   *
  13:Src/usbd_desc.c ****   * Copyright (c) 2019 STMicroelectronics International N.V. 
  14:Src/usbd_desc.c ****   * All rights reserved.
  15:Src/usbd_desc.c ****   *
  16:Src/usbd_desc.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/usbd_desc.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/usbd_desc.c ****   *
  19:Src/usbd_desc.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/usbd_desc.c ****   *    this list of conditions and the following disclaimer.
  21:Src/usbd_desc.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/usbd_desc.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/usbd_desc.c ****   *    and/or other materials provided with the distribution.
  24:Src/usbd_desc.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/usbd_desc.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/usbd_desc.c ****   *    derived from this software without specific written permission.
  27:Src/usbd_desc.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/usbd_desc.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/usbd_desc.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/usbd_desc.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/usbd_desc.c ****   *    this license is void and will automatically terminate your rights under 
ARM GAS  /tmp/cc3i6xww.s 			page 2


  32:Src/usbd_desc.c ****   *    this license. 
  33:Src/usbd_desc.c ****   *
  34:Src/usbd_desc.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/usbd_desc.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/usbd_desc.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/usbd_desc.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/usbd_desc.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/usbd_desc.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/usbd_desc.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/usbd_desc.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/usbd_desc.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/usbd_desc.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/usbd_desc.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/usbd_desc.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/usbd_desc.c ****   *
  47:Src/usbd_desc.c ****   ******************************************************************************
  48:Src/usbd_desc.c ****   */
  49:Src/usbd_desc.c **** 
  50:Src/usbd_desc.c **** /* Includes ------------------------------------------------------------------*/
  51:Src/usbd_desc.c **** #include "usbd_core.h"
  52:Src/usbd_desc.c **** #include "usbd_desc.h"
  53:Src/usbd_desc.c **** #include "usbd_conf.h"
  54:Src/usbd_desc.c **** 
  55:Src/usbd_desc.c **** /* USER CODE BEGIN INCLUDE */
  56:Src/usbd_desc.c **** 
  57:Src/usbd_desc.c **** /* USER CODE END INCLUDE */
  58:Src/usbd_desc.c **** 
  59:Src/usbd_desc.c **** /* Private typedef -----------------------------------------------------------*/
  60:Src/usbd_desc.c **** /* Private define ------------------------------------------------------------*/
  61:Src/usbd_desc.c **** /* Private macro -------------------------------------------------------------*/
  62:Src/usbd_desc.c **** 
  63:Src/usbd_desc.c **** /* USER CODE BEGIN PV */
  64:Src/usbd_desc.c **** /* Private variables ---------------------------------------------------------*/
  65:Src/usbd_desc.c **** 
  66:Src/usbd_desc.c **** /* USER CODE END PV */
  67:Src/usbd_desc.c **** 
  68:Src/usbd_desc.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  69:Src/usbd_desc.c ****   * @{
  70:Src/usbd_desc.c ****   */
  71:Src/usbd_desc.c **** 
  72:Src/usbd_desc.c **** /** @addtogroup USBD_DESC
  73:Src/usbd_desc.c ****   * @{
  74:Src/usbd_desc.c ****   */
  75:Src/usbd_desc.c **** 
  76:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_TypesDefinitions USBD_DESC_Private_TypesDefinitions
  77:Src/usbd_desc.c ****   * @brief Private types.
  78:Src/usbd_desc.c ****   * @{
  79:Src/usbd_desc.c ****   */
  80:Src/usbd_desc.c **** 
  81:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  82:Src/usbd_desc.c **** 
  83:Src/usbd_desc.c **** /* USER CODE END PRIVATE_TYPES */
  84:Src/usbd_desc.c **** 
  85:Src/usbd_desc.c **** /**
  86:Src/usbd_desc.c ****   * @}
  87:Src/usbd_desc.c ****   */
  88:Src/usbd_desc.c **** 
ARM GAS  /tmp/cc3i6xww.s 			page 3


  89:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Defines USBD_DESC_Private_Defines
  90:Src/usbd_desc.c ****   * @brief Private defines.
  91:Src/usbd_desc.c ****   * @{
  92:Src/usbd_desc.c ****   */
  93:Src/usbd_desc.c **** 
  94:Src/usbd_desc.c **** #define USBD_VID     1155
  95:Src/usbd_desc.c **** #define USBD_LANGID_STRING     1033
  96:Src/usbd_desc.c **** #define USBD_MANUFACTURER_STRING     "STMicroelectronics"
  97:Src/usbd_desc.c **** #define USBD_PID_FS     22336
  98:Src/usbd_desc.c **** #define USBD_PRODUCT_STRING_FS     "STM32 Virtual ComPort"
  99:Src/usbd_desc.c **** #define USBD_SERIALNUMBER_STRING_FS     "00000000001A"
 100:Src/usbd_desc.c **** #define USBD_CONFIGURATION_STRING_FS     "CDC Config"
 101:Src/usbd_desc.c **** #define USBD_INTERFACE_STRING_FS     "CDC Interface"
 102:Src/usbd_desc.c **** 
 103:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
 104:Src/usbd_desc.c **** 
 105:Src/usbd_desc.c **** /* USER CODE END PRIVATE_DEFINES */
 106:Src/usbd_desc.c **** 
 107:Src/usbd_desc.c **** /**
 108:Src/usbd_desc.c ****   * @}
 109:Src/usbd_desc.c ****   */
 110:Src/usbd_desc.c **** 
 111:Src/usbd_desc.c **** /* USER CODE BEGIN 0 */
 112:Src/usbd_desc.c **** 
 113:Src/usbd_desc.c **** /* USER CODE END 0 */
 114:Src/usbd_desc.c **** 
 115:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Macros USBD_DESC_Private_Macros
 116:Src/usbd_desc.c ****   * @brief Private macros.
 117:Src/usbd_desc.c ****   * @{
 118:Src/usbd_desc.c ****   */
 119:Src/usbd_desc.c **** 
 120:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_MACRO */
 121:Src/usbd_desc.c **** 
 122:Src/usbd_desc.c **** /* USER CODE END PRIVATE_MACRO */
 123:Src/usbd_desc.c **** 
 124:Src/usbd_desc.c **** /**
 125:Src/usbd_desc.c ****   * @}
 126:Src/usbd_desc.c ****   */
 127:Src/usbd_desc.c **** 
 128:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
 129:Src/usbd_desc.c ****   * @brief Private functions declaration.
 130:Src/usbd_desc.c ****   * @{
 131:Src/usbd_desc.c ****   */
 132:Src/usbd_desc.c **** 
 133:Src/usbd_desc.c **** uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 134:Src/usbd_desc.c **** uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 135:Src/usbd_desc.c **** uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 136:Src/usbd_desc.c **** uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 137:Src/usbd_desc.c **** uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 138:Src/usbd_desc.c **** uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 139:Src/usbd_desc.c **** uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 140:Src/usbd_desc.c **** 
 141:Src/usbd_desc.c **** #ifdef USB_SUPPORT_USER_STRING_DESC
 142:Src/usbd_desc.c **** uint8_t * USBD_FS_USRStringDesc(USBD_SpeedTypeDef speed, uint8_t idx, uint16_t *length);
 143:Src/usbd_desc.c **** #endif /* USB_SUPPORT_USER_STRING_DESC */
 144:Src/usbd_desc.c **** 
 145:Src/usbd_desc.c **** /**
ARM GAS  /tmp/cc3i6xww.s 			page 4


 146:Src/usbd_desc.c ****   * @}
 147:Src/usbd_desc.c ****   */
 148:Src/usbd_desc.c **** 
 149:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 150:Src/usbd_desc.c ****   * @brief Private variables.
 151:Src/usbd_desc.c ****   * @{
 152:Src/usbd_desc.c ****   */
 153:Src/usbd_desc.c **** 
 154:Src/usbd_desc.c **** USBD_DescriptorsTypeDef FS_Desc =
 155:Src/usbd_desc.c **** {
 156:Src/usbd_desc.c ****   USBD_FS_DeviceDescriptor
 157:Src/usbd_desc.c **** , USBD_FS_LangIDStrDescriptor
 158:Src/usbd_desc.c **** , USBD_FS_ManufacturerStrDescriptor
 159:Src/usbd_desc.c **** , USBD_FS_ProductStrDescriptor
 160:Src/usbd_desc.c **** , USBD_FS_SerialStrDescriptor
 161:Src/usbd_desc.c **** , USBD_FS_ConfigStrDescriptor
 162:Src/usbd_desc.c **** , USBD_FS_InterfaceStrDescriptor
 163:Src/usbd_desc.c **** };
 164:Src/usbd_desc.c **** 
 165:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 166:Src/usbd_desc.c ****   #pragma data_alignment=4
 167:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 168:Src/usbd_desc.c **** /** USB standard device descriptor. */
 169:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_FS_DeviceDesc[USB_LEN_DEV_DESC] __ALIGN_END =
 170:Src/usbd_desc.c **** {
 171:Src/usbd_desc.c ****   0x12,                       /*bLength */
 172:Src/usbd_desc.c ****   USB_DESC_TYPE_DEVICE,       /*bDescriptorType*/
 173:Src/usbd_desc.c ****   0x00,                       /*bcdUSB */
 174:Src/usbd_desc.c ****   0x02,
 175:Src/usbd_desc.c ****   0x02,                       /*bDeviceClass*/
 176:Src/usbd_desc.c ****   0x02,                       /*bDeviceSubClass*/
 177:Src/usbd_desc.c ****   0x00,                       /*bDeviceProtocol*/
 178:Src/usbd_desc.c ****   USB_MAX_EP0_SIZE,           /*bMaxPacketSize*/
 179:Src/usbd_desc.c ****   LOBYTE(USBD_VID),           /*idVendor*/
 180:Src/usbd_desc.c ****   HIBYTE(USBD_VID),           /*idVendor*/
 181:Src/usbd_desc.c ****   LOBYTE(USBD_PID_FS),        /*idProduct*/
 182:Src/usbd_desc.c ****   HIBYTE(USBD_PID_FS),        /*idProduct*/
 183:Src/usbd_desc.c ****   0x00,                       /*bcdDevice rel. 2.00*/
 184:Src/usbd_desc.c ****   0x02,
 185:Src/usbd_desc.c ****   USBD_IDX_MFC_STR,           /*Index of manufacturer  string*/
 186:Src/usbd_desc.c ****   USBD_IDX_PRODUCT_STR,       /*Index of product string*/
 187:Src/usbd_desc.c ****   USBD_IDX_SERIAL_STR,        /*Index of serial number string*/
 188:Src/usbd_desc.c ****   USBD_MAX_NUM_CONFIGURATION  /*bNumConfigurations*/
 189:Src/usbd_desc.c **** };
 190:Src/usbd_desc.c **** 
 191:Src/usbd_desc.c **** /* USB_DeviceDescriptor */
 192:Src/usbd_desc.c **** 
 193:Src/usbd_desc.c **** /**
 194:Src/usbd_desc.c ****   * @}
 195:Src/usbd_desc.c ****   */
 196:Src/usbd_desc.c **** 
 197:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 198:Src/usbd_desc.c ****   * @brief Private variables.
 199:Src/usbd_desc.c ****   * @{
 200:Src/usbd_desc.c ****   */
 201:Src/usbd_desc.c **** 
 202:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
ARM GAS  /tmp/cc3i6xww.s 			page 5


 203:Src/usbd_desc.c ****   #pragma data_alignment=4
 204:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 205:Src/usbd_desc.c **** 
 206:Src/usbd_desc.c **** /** USB lang indentifier descriptor. */
 207:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_LangIDDesc[USB_LEN_LANGID_STR_DESC] __ALIGN_END =
 208:Src/usbd_desc.c **** {
 209:Src/usbd_desc.c ****      USB_LEN_LANGID_STR_DESC,
 210:Src/usbd_desc.c ****      USB_DESC_TYPE_STRING,
 211:Src/usbd_desc.c ****      LOBYTE(USBD_LANGID_STRING),
 212:Src/usbd_desc.c ****      HIBYTE(USBD_LANGID_STRING)
 213:Src/usbd_desc.c **** };
 214:Src/usbd_desc.c **** 
 215:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 216:Src/usbd_desc.c ****   #pragma data_alignment=4
 217:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 218:Src/usbd_desc.c **** /* Internal string descriptor. */
 219:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StrDesc[USBD_MAX_STR_DESC_SIZ] __ALIGN_END;
 220:Src/usbd_desc.c **** 
 221:Src/usbd_desc.c **** /**
 222:Src/usbd_desc.c ****   * @}
 223:Src/usbd_desc.c ****   */
 224:Src/usbd_desc.c **** 
 225:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Functions USBD_DESC_Private_Functions
 226:Src/usbd_desc.c ****   * @brief Private functions.
 227:Src/usbd_desc.c ****   * @{
 228:Src/usbd_desc.c ****   */
 229:Src/usbd_desc.c **** 
 230:Src/usbd_desc.c **** /**
 231:Src/usbd_desc.c ****   * @brief  Return the device descriptor
 232:Src/usbd_desc.c ****   * @param  speed : Current device speed
 233:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 234:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 235:Src/usbd_desc.c ****   */
 236:Src/usbd_desc.c **** uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 237:Src/usbd_desc.c **** {
  28              		.loc 1 237 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 238:Src/usbd_desc.c ****   *length = sizeof(USBD_FS_DeviceDesc);
  33              		.loc 1 238 3 view .LVU1
  34              		.loc 1 238 11 is_stmt 0 view .LVU2
  35 0000 1223     		movs	r3, #18
  36 0002 0B80     		strh	r3, [r1]
 239:Src/usbd_desc.c ****   return USBD_FS_DeviceDesc;
  37              		.loc 1 239 3 is_stmt 1 view .LVU3
 240:Src/usbd_desc.c **** }
  38              		.loc 1 240 1 is_stmt 0 view .LVU4
  39 0004 0048     		ldr	r0, .L2
  40              	.LVL1:
  41              		.loc 1 240 1 view .LVU5
  42              		@ sp needed
  43 0006 7047     		bx	lr
  44              	.L3:
  45              		.align	2
  46              	.L2:
ARM GAS  /tmp/cc3i6xww.s 			page 6


  47 0008 00000000 		.word	.LANCHOR0
  48              		.cfi_endproc
  49              	.LFE37:
  51              		.section	.text.USBD_FS_LangIDStrDescriptor,"ax",%progbits
  52              		.align	1
  53              		.global	USBD_FS_LangIDStrDescriptor
  54              		.syntax unified
  55              		.code	16
  56              		.thumb_func
  57              		.fpu softvfp
  59              	USBD_FS_LangIDStrDescriptor:
  60              	.LVL2:
  61              	.LFB38:
 241:Src/usbd_desc.c **** 
 242:Src/usbd_desc.c **** /**
 243:Src/usbd_desc.c ****   * @brief  Return the LangID string descriptor
 244:Src/usbd_desc.c ****   * @param  speed : Current device speed
 245:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 246:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 247:Src/usbd_desc.c ****   */
 248:Src/usbd_desc.c **** uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 249:Src/usbd_desc.c **** {
  62              		.loc 1 249 1 is_stmt 1 view -0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
 250:Src/usbd_desc.c ****   *length = sizeof(USBD_LangIDDesc);
  67              		.loc 1 250 3 view .LVU7
  68              		.loc 1 250 11 is_stmt 0 view .LVU8
  69 0000 0423     		movs	r3, #4
  70 0002 0B80     		strh	r3, [r1]
 251:Src/usbd_desc.c ****   return USBD_LangIDDesc;
  71              		.loc 1 251 3 is_stmt 1 view .LVU9
 252:Src/usbd_desc.c **** }
  72              		.loc 1 252 1 is_stmt 0 view .LVU10
  73 0004 0048     		ldr	r0, .L5
  74              	.LVL3:
  75              		.loc 1 252 1 view .LVU11
  76              		@ sp needed
  77 0006 7047     		bx	lr
  78              	.L6:
  79              		.align	2
  80              	.L5:
  81 0008 00000000 		.word	.LANCHOR1
  82              		.cfi_endproc
  83              	.LFE38:
  85              		.section	.text.USBD_FS_ProductStrDescriptor,"ax",%progbits
  86              		.align	1
  87              		.global	USBD_FS_ProductStrDescriptor
  88              		.syntax unified
  89              		.code	16
  90              		.thumb_func
  91              		.fpu softvfp
  93              	USBD_FS_ProductStrDescriptor:
  94              	.LVL4:
  95              	.LFB39:
ARM GAS  /tmp/cc3i6xww.s 			page 7


 253:Src/usbd_desc.c **** 
 254:Src/usbd_desc.c **** /**
 255:Src/usbd_desc.c ****   * @brief  Return the product string descriptor
 256:Src/usbd_desc.c ****   * @param  speed : Current device speed
 257:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 258:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 259:Src/usbd_desc.c ****   */
 260:Src/usbd_desc.c **** uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 261:Src/usbd_desc.c **** {
  96              		.loc 1 261 1 is_stmt 1 view -0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		.loc 1 261 1 is_stmt 0 view .LVU13
 101 0000 10B5     		push	{r4, lr}
 102              	.LCFI0:
 103              		.cfi_def_cfa_offset 8
 104              		.cfi_offset 4, -8
 105              		.cfi_offset 14, -4
 106 0002 0A00     		movs	r2, r1
 262:Src/usbd_desc.c ****   if(speed == 0)
 107              		.loc 1 262 3 is_stmt 1 view .LVU14
 108              		.loc 1 262 5 is_stmt 0 view .LVU15
 109 0004 0028     		cmp	r0, #0
 110 0006 05D1     		bne	.L8
 263:Src/usbd_desc.c ****   {
 264:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 111              		.loc 1 264 5 is_stmt 1 view .LVU16
 112 0008 0549     		ldr	r1, .L10
 113              	.LVL5:
 114              		.loc 1 264 5 is_stmt 0 view .LVU17
 115 000a 0648     		ldr	r0, .L10+4
 116              	.LVL6:
 117              		.loc 1 264 5 view .LVU18
 118 000c FFF7FEFF 		bl	USBD_GetString
 119              	.LVL7:
 120              	.L9:
 265:Src/usbd_desc.c ****   }
 266:Src/usbd_desc.c ****   else
 267:Src/usbd_desc.c ****   {
 268:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 269:Src/usbd_desc.c ****   }
 270:Src/usbd_desc.c ****   return USBD_StrDesc;
 121              		.loc 1 270 3 is_stmt 1 view .LVU19
 271:Src/usbd_desc.c **** }
 122              		.loc 1 271 1 is_stmt 0 view .LVU20
 123 0010 0348     		ldr	r0, .L10
 124              		@ sp needed
 125 0012 10BD     		pop	{r4, pc}
 126              	.LVL8:
 127              	.L8:
 268:Src/usbd_desc.c ****   }
 128              		.loc 1 268 5 is_stmt 1 view .LVU21
 129 0014 0249     		ldr	r1, .L10
 130              	.LVL9:
 268:Src/usbd_desc.c ****   }
 131              		.loc 1 268 5 is_stmt 0 view .LVU22
ARM GAS  /tmp/cc3i6xww.s 			page 8


 132 0016 0348     		ldr	r0, .L10+4
 133              	.LVL10:
 268:Src/usbd_desc.c ****   }
 134              		.loc 1 268 5 view .LVU23
 135 0018 FFF7FEFF 		bl	USBD_GetString
 136              	.LVL11:
 268:Src/usbd_desc.c ****   }
 137              		.loc 1 268 5 view .LVU24
 138 001c F8E7     		b	.L9
 139              	.L11:
 140 001e C046     		.align	2
 141              	.L10:
 142 0020 00000000 		.word	USBD_StrDesc
 143 0024 00000000 		.word	.LC3
 144              		.cfi_endproc
 145              	.LFE39:
 147              		.section	.text.USBD_FS_ManufacturerStrDescriptor,"ax",%progbits
 148              		.align	1
 149              		.global	USBD_FS_ManufacturerStrDescriptor
 150              		.syntax unified
 151              		.code	16
 152              		.thumb_func
 153              		.fpu softvfp
 155              	USBD_FS_ManufacturerStrDescriptor:
 156              	.LVL12:
 157              	.LFB40:
 272:Src/usbd_desc.c **** 
 273:Src/usbd_desc.c **** /**
 274:Src/usbd_desc.c ****   * @brief  Return the manufacturer string descriptor
 275:Src/usbd_desc.c ****   * @param  speed : Current device speed
 276:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 277:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 278:Src/usbd_desc.c ****   */
 279:Src/usbd_desc.c **** uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 280:Src/usbd_desc.c **** {
 158              		.loc 1 280 1 is_stmt 1 view -0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		.loc 1 280 1 is_stmt 0 view .LVU26
 163 0000 10B5     		push	{r4, lr}
 164              	.LCFI1:
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 4, -8
 167              		.cfi_offset 14, -4
 168 0002 0A00     		movs	r2, r1
 281:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 169              		.loc 1 281 3 is_stmt 1 view .LVU27
 170 0004 034C     		ldr	r4, .L13
 171 0006 2100     		movs	r1, r4
 172              	.LVL13:
 173              		.loc 1 281 3 is_stmt 0 view .LVU28
 174 0008 0348     		ldr	r0, .L13+4
 175              	.LVL14:
 176              		.loc 1 281 3 view .LVU29
 177 000a FFF7FEFF 		bl	USBD_GetString
 178              	.LVL15:
ARM GAS  /tmp/cc3i6xww.s 			page 9


 282:Src/usbd_desc.c ****   return USBD_StrDesc;
 179              		.loc 1 282 3 is_stmt 1 view .LVU30
 283:Src/usbd_desc.c **** }
 180              		.loc 1 283 1 is_stmt 0 view .LVU31
 181 000e 2000     		movs	r0, r4
 182              		@ sp needed
 183 0010 10BD     		pop	{r4, pc}
 184              	.L14:
 185 0012 C046     		.align	2
 186              	.L13:
 187 0014 00000000 		.word	USBD_StrDesc
 188 0018 00000000 		.word	.LC6
 189              		.cfi_endproc
 190              	.LFE40:
 192              		.section	.text.USBD_FS_SerialStrDescriptor,"ax",%progbits
 193              		.align	1
 194              		.global	USBD_FS_SerialStrDescriptor
 195              		.syntax unified
 196              		.code	16
 197              		.thumb_func
 198              		.fpu softvfp
 200              	USBD_FS_SerialStrDescriptor:
 201              	.LVL16:
 202              	.LFB41:
 284:Src/usbd_desc.c **** 
 285:Src/usbd_desc.c **** /**
 286:Src/usbd_desc.c ****   * @brief  Return the serial number string descriptor
 287:Src/usbd_desc.c ****   * @param  speed : Current device speed
 288:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 289:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 290:Src/usbd_desc.c ****   */
 291:Src/usbd_desc.c **** uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 292:Src/usbd_desc.c **** {
 203              		.loc 1 292 1 is_stmt 1 view -0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		.loc 1 292 1 is_stmt 0 view .LVU33
 208 0000 10B5     		push	{r4, lr}
 209              	.LCFI2:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 4, -8
 212              		.cfi_offset 14, -4
 213 0002 0A00     		movs	r2, r1
 293:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 214              		.loc 1 293 3 is_stmt 1 view .LVU34
 215              		.loc 1 293 5 is_stmt 0 view .LVU35
 216 0004 0028     		cmp	r0, #0
 217 0006 05D1     		bne	.L16
 294:Src/usbd_desc.c ****   {
 295:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_SERIALNUMBER_STRING_FS, USBD_StrDesc, length);
 218              		.loc 1 295 5 is_stmt 1 view .LVU36
 219 0008 0549     		ldr	r1, .L18
 220              	.LVL17:
 221              		.loc 1 295 5 is_stmt 0 view .LVU37
 222 000a 0648     		ldr	r0, .L18+4
 223              	.LVL18:
ARM GAS  /tmp/cc3i6xww.s 			page 10


 224              		.loc 1 295 5 view .LVU38
 225 000c FFF7FEFF 		bl	USBD_GetString
 226              	.LVL19:
 227              	.L17:
 296:Src/usbd_desc.c ****   }
 297:Src/usbd_desc.c ****   else
 298:Src/usbd_desc.c ****   {
 299:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_SERIALNUMBER_STRING_FS, USBD_StrDesc, length);
 300:Src/usbd_desc.c ****   }
 301:Src/usbd_desc.c ****   return USBD_StrDesc;
 228              		.loc 1 301 3 is_stmt 1 view .LVU39
 302:Src/usbd_desc.c **** }
 229              		.loc 1 302 1 is_stmt 0 view .LVU40
 230 0010 0348     		ldr	r0, .L18
 231              		@ sp needed
 232 0012 10BD     		pop	{r4, pc}
 233              	.LVL20:
 234              	.L16:
 299:Src/usbd_desc.c ****   }
 235              		.loc 1 299 5 is_stmt 1 view .LVU41
 236 0014 0249     		ldr	r1, .L18
 237              	.LVL21:
 299:Src/usbd_desc.c ****   }
 238              		.loc 1 299 5 is_stmt 0 view .LVU42
 239 0016 0348     		ldr	r0, .L18+4
 240              	.LVL22:
 299:Src/usbd_desc.c ****   }
 241              		.loc 1 299 5 view .LVU43
 242 0018 FFF7FEFF 		bl	USBD_GetString
 243              	.LVL23:
 299:Src/usbd_desc.c ****   }
 244              		.loc 1 299 5 view .LVU44
 245 001c F8E7     		b	.L17
 246              	.L19:
 247 001e C046     		.align	2
 248              	.L18:
 249 0020 00000000 		.word	USBD_StrDesc
 250 0024 00000000 		.word	.LC9
 251              		.cfi_endproc
 252              	.LFE41:
 254              		.section	.text.USBD_FS_ConfigStrDescriptor,"ax",%progbits
 255              		.align	1
 256              		.global	USBD_FS_ConfigStrDescriptor
 257              		.syntax unified
 258              		.code	16
 259              		.thumb_func
 260              		.fpu softvfp
 262              	USBD_FS_ConfigStrDescriptor:
 263              	.LVL24:
 264              	.LFB42:
 303:Src/usbd_desc.c **** 
 304:Src/usbd_desc.c **** /**
 305:Src/usbd_desc.c ****   * @brief  Return the configuration string descriptor
 306:Src/usbd_desc.c ****   * @param  speed : Current device speed
 307:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 308:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 309:Src/usbd_desc.c ****   */
ARM GAS  /tmp/cc3i6xww.s 			page 11


 310:Src/usbd_desc.c **** uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 311:Src/usbd_desc.c **** {
 265              		.loc 1 311 1 is_stmt 1 view -0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		.loc 1 311 1 is_stmt 0 view .LVU46
 270 0000 10B5     		push	{r4, lr}
 271              	.LCFI3:
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 4, -8
 274              		.cfi_offset 14, -4
 275 0002 0A00     		movs	r2, r1
 312:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 276              		.loc 1 312 3 is_stmt 1 view .LVU47
 277              		.loc 1 312 5 is_stmt 0 view .LVU48
 278 0004 0028     		cmp	r0, #0
 279 0006 05D1     		bne	.L21
 313:Src/usbd_desc.c ****   {
 314:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 280              		.loc 1 314 5 is_stmt 1 view .LVU49
 281 0008 0549     		ldr	r1, .L23
 282              	.LVL25:
 283              		.loc 1 314 5 is_stmt 0 view .LVU50
 284 000a 0648     		ldr	r0, .L23+4
 285              	.LVL26:
 286              		.loc 1 314 5 view .LVU51
 287 000c FFF7FEFF 		bl	USBD_GetString
 288              	.LVL27:
 289              	.L22:
 315:Src/usbd_desc.c ****   }
 316:Src/usbd_desc.c ****   else
 317:Src/usbd_desc.c ****   {
 318:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 319:Src/usbd_desc.c ****   }
 320:Src/usbd_desc.c ****   return USBD_StrDesc;
 290              		.loc 1 320 3 is_stmt 1 view .LVU52
 321:Src/usbd_desc.c **** }
 291              		.loc 1 321 1 is_stmt 0 view .LVU53
 292 0010 0348     		ldr	r0, .L23
 293              		@ sp needed
 294 0012 10BD     		pop	{r4, pc}
 295              	.LVL28:
 296              	.L21:
 318:Src/usbd_desc.c ****   }
 297              		.loc 1 318 5 is_stmt 1 view .LVU54
 298 0014 0249     		ldr	r1, .L23
 299              	.LVL29:
 318:Src/usbd_desc.c ****   }
 300              		.loc 1 318 5 is_stmt 0 view .LVU55
 301 0016 0348     		ldr	r0, .L23+4
 302              	.LVL30:
 318:Src/usbd_desc.c ****   }
 303              		.loc 1 318 5 view .LVU56
 304 0018 FFF7FEFF 		bl	USBD_GetString
 305              	.LVL31:
 318:Src/usbd_desc.c ****   }
ARM GAS  /tmp/cc3i6xww.s 			page 12


 306              		.loc 1 318 5 view .LVU57
 307 001c F8E7     		b	.L22
 308              	.L24:
 309 001e C046     		.align	2
 310              	.L23:
 311 0020 00000000 		.word	USBD_StrDesc
 312 0024 00000000 		.word	.LC12
 313              		.cfi_endproc
 314              	.LFE42:
 316              		.section	.text.USBD_FS_InterfaceStrDescriptor,"ax",%progbits
 317              		.align	1
 318              		.global	USBD_FS_InterfaceStrDescriptor
 319              		.syntax unified
 320              		.code	16
 321              		.thumb_func
 322              		.fpu softvfp
 324              	USBD_FS_InterfaceStrDescriptor:
 325              	.LVL32:
 326              	.LFB43:
 322:Src/usbd_desc.c **** 
 323:Src/usbd_desc.c **** /**
 324:Src/usbd_desc.c ****   * @brief  Return the interface string descriptor
 325:Src/usbd_desc.c ****   * @param  speed : Current device speed
 326:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 327:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 328:Src/usbd_desc.c ****   */
 329:Src/usbd_desc.c **** uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 330:Src/usbd_desc.c **** {
 327              		.loc 1 330 1 is_stmt 1 view -0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331              		.loc 1 330 1 is_stmt 0 view .LVU59
 332 0000 10B5     		push	{r4, lr}
 333              	.LCFI4:
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 4, -8
 336              		.cfi_offset 14, -4
 337 0002 0A00     		movs	r2, r1
 331:Src/usbd_desc.c ****   if(speed == 0)
 338              		.loc 1 331 3 is_stmt 1 view .LVU60
 339              		.loc 1 331 5 is_stmt 0 view .LVU61
 340 0004 0028     		cmp	r0, #0
 341 0006 05D1     		bne	.L26
 332:Src/usbd_desc.c ****   {
 333:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 342              		.loc 1 333 5 is_stmt 1 view .LVU62
 343 0008 0549     		ldr	r1, .L28
 344              	.LVL33:
 345              		.loc 1 333 5 is_stmt 0 view .LVU63
 346 000a 0648     		ldr	r0, .L28+4
 347              	.LVL34:
 348              		.loc 1 333 5 view .LVU64
 349 000c FFF7FEFF 		bl	USBD_GetString
 350              	.LVL35:
 351              	.L27:
 334:Src/usbd_desc.c ****   }
ARM GAS  /tmp/cc3i6xww.s 			page 13


 335:Src/usbd_desc.c ****   else
 336:Src/usbd_desc.c ****   {
 337:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 338:Src/usbd_desc.c ****   }
 339:Src/usbd_desc.c ****   return USBD_StrDesc;
 352              		.loc 1 339 3 is_stmt 1 view .LVU65
 340:Src/usbd_desc.c **** }
 353              		.loc 1 340 1 is_stmt 0 view .LVU66
 354 0010 0348     		ldr	r0, .L28
 355              		@ sp needed
 356 0012 10BD     		pop	{r4, pc}
 357              	.LVL36:
 358              	.L26:
 337:Src/usbd_desc.c ****   }
 359              		.loc 1 337 5 is_stmt 1 view .LVU67
 360 0014 0249     		ldr	r1, .L28
 361              	.LVL37:
 337:Src/usbd_desc.c ****   }
 362              		.loc 1 337 5 is_stmt 0 view .LVU68
 363 0016 0348     		ldr	r0, .L28+4
 364              	.LVL38:
 337:Src/usbd_desc.c ****   }
 365              		.loc 1 337 5 view .LVU69
 366 0018 FFF7FEFF 		bl	USBD_GetString
 367              	.LVL39:
 337:Src/usbd_desc.c ****   }
 368              		.loc 1 337 5 view .LVU70
 369 001c F8E7     		b	.L27
 370              	.L29:
 371 001e C046     		.align	2
 372              	.L28:
 373 0020 00000000 		.word	USBD_StrDesc
 374 0024 00000000 		.word	.LC15
 375              		.cfi_endproc
 376              	.LFE43:
 378              		.comm	USBD_StrDesc,512,4
 379              		.global	USBD_LangIDDesc
 380              		.global	USBD_FS_DeviceDesc
 381              		.global	FS_Desc
 382              		.section	.data.FS_Desc,"aw"
 383              		.align	2
 386              	FS_Desc:
 387 0000 00000000 		.word	USBD_FS_DeviceDescriptor
 388 0004 00000000 		.word	USBD_FS_LangIDStrDescriptor
 389 0008 00000000 		.word	USBD_FS_ManufacturerStrDescriptor
 390 000c 00000000 		.word	USBD_FS_ProductStrDescriptor
 391 0010 00000000 		.word	USBD_FS_SerialStrDescriptor
 392 0014 00000000 		.word	USBD_FS_ConfigStrDescriptor
 393 0018 00000000 		.word	USBD_FS_InterfaceStrDescriptor
 394              		.section	.data.USBD_FS_DeviceDesc,"aw"
 395              		.align	2
 396              		.set	.LANCHOR0,. + 0
 399              	USBD_FS_DeviceDesc:
 400 0000 12       		.byte	18
 401 0001 01       		.byte	1
 402 0002 00       		.byte	0
 403 0003 02       		.byte	2
ARM GAS  /tmp/cc3i6xww.s 			page 14


 404 0004 02       		.byte	2
 405 0005 02       		.byte	2
 406 0006 00       		.byte	0
 407 0007 40       		.byte	64
 408 0008 83       		.byte	-125
 409 0009 04       		.byte	4
 410 000a 40       		.byte	64
 411 000b 57       		.byte	87
 412 000c 00       		.byte	0
 413 000d 02       		.byte	2
 414 000e 01       		.byte	1
 415 000f 02       		.byte	2
 416 0010 03       		.byte	3
 417 0011 01       		.byte	1
 418              		.section	.data.USBD_LangIDDesc,"aw"
 419              		.align	2
 420              		.set	.LANCHOR1,. + 0
 423              	USBD_LangIDDesc:
 424 0000 04       		.byte	4
 425 0001 03       		.byte	3
 426 0002 09       		.byte	9
 427 0003 04       		.byte	4
 428              		.section	.rodata.USBD_FS_ConfigStrDescriptor.str1.4,"aMS",%progbits,1
 429              		.align	2
 430              	.LC12:
 431 0000 43444320 		.ascii	"CDC Config\000"
 431      436F6E66 
 431      696700
 432              		.section	.rodata.USBD_FS_InterfaceStrDescriptor.str1.4,"aMS",%progbits,1
 433              		.align	2
 434              	.LC15:
 435 0000 43444320 		.ascii	"CDC Interface\000"
 435      496E7465 
 435      72666163 
 435      6500
 436              		.section	.rodata.USBD_FS_ManufacturerStrDescriptor.str1.4,"aMS",%progbits,1
 437              		.align	2
 438              	.LC6:
 439 0000 53544D69 		.ascii	"STMicroelectronics\000"
 439      63726F65 
 439      6C656374 
 439      726F6E69 
 439      637300
 440              		.section	.rodata.USBD_FS_ProductStrDescriptor.str1.4,"aMS",%progbits,1
 441              		.align	2
 442              	.LC3:
 443 0000 53544D33 		.ascii	"STM32 Virtual ComPort\000"
 443      32205669 
 443      72747561 
 443      6C20436F 
 443      6D506F72 
 444              		.section	.rodata.USBD_FS_SerialStrDescriptor.str1.4,"aMS",%progbits,1
 445              		.align	2
 446              	.LC9:
 447 0000 30303030 		.ascii	"00000000001A\000"
 447      30303030 
 447      30303141 
ARM GAS  /tmp/cc3i6xww.s 			page 15


 447      00
 448              		.text
 449              	.Letext0:
 450              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 451              		.file 3 "/usr/arm-none-eabi/include/sys/lock.h"
 452              		.file 4 "/usr/arm-none-eabi/include/sys/_types.h"
 453              		.file 5 "/usr/lib/gcc/arm-none-eabi/8.2.0/include/stddef.h"
 454              		.file 6 "/usr/arm-none-eabi/include/sys/reent.h"
 455              		.file 7 "/usr/arm-none-eabi/include/sys/_stdint.h"
 456              		.file 8 "/usr/arm-none-eabi/include/stdlib.h"
 457              		.file 9 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 458              		.file 10 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 459              		.file 11 "Inc/usbd_desc.h"
 460              		.file 12 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_ctlreq.h"
ARM GAS  /tmp/cc3i6xww.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_desc.c
     /tmp/cc3i6xww.s:16     .text.USBD_FS_DeviceDescriptor:0000000000000000 $t
     /tmp/cc3i6xww.s:24     .text.USBD_FS_DeviceDescriptor:0000000000000000 USBD_FS_DeviceDescriptor
     /tmp/cc3i6xww.s:47     .text.USBD_FS_DeviceDescriptor:0000000000000008 $d
     /tmp/cc3i6xww.s:52     .text.USBD_FS_LangIDStrDescriptor:0000000000000000 $t
     /tmp/cc3i6xww.s:59     .text.USBD_FS_LangIDStrDescriptor:0000000000000000 USBD_FS_LangIDStrDescriptor
     /tmp/cc3i6xww.s:81     .text.USBD_FS_LangIDStrDescriptor:0000000000000008 $d
     /tmp/cc3i6xww.s:86     .text.USBD_FS_ProductStrDescriptor:0000000000000000 $t
     /tmp/cc3i6xww.s:93     .text.USBD_FS_ProductStrDescriptor:0000000000000000 USBD_FS_ProductStrDescriptor
     /tmp/cc3i6xww.s:142    .text.USBD_FS_ProductStrDescriptor:0000000000000020 $d
                            *COM*:0000000000000200 USBD_StrDesc
     /tmp/cc3i6xww.s:148    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000000 $t
     /tmp/cc3i6xww.s:155    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000000 USBD_FS_ManufacturerStrDescriptor
     /tmp/cc3i6xww.s:187    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000014 $d
     /tmp/cc3i6xww.s:193    .text.USBD_FS_SerialStrDescriptor:0000000000000000 $t
     /tmp/cc3i6xww.s:200    .text.USBD_FS_SerialStrDescriptor:0000000000000000 USBD_FS_SerialStrDescriptor
     /tmp/cc3i6xww.s:249    .text.USBD_FS_SerialStrDescriptor:0000000000000020 $d
     /tmp/cc3i6xww.s:255    .text.USBD_FS_ConfigStrDescriptor:0000000000000000 $t
     /tmp/cc3i6xww.s:262    .text.USBD_FS_ConfigStrDescriptor:0000000000000000 USBD_FS_ConfigStrDescriptor
     /tmp/cc3i6xww.s:311    .text.USBD_FS_ConfigStrDescriptor:0000000000000020 $d
     /tmp/cc3i6xww.s:317    .text.USBD_FS_InterfaceStrDescriptor:0000000000000000 $t
     /tmp/cc3i6xww.s:324    .text.USBD_FS_InterfaceStrDescriptor:0000000000000000 USBD_FS_InterfaceStrDescriptor
     /tmp/cc3i6xww.s:373    .text.USBD_FS_InterfaceStrDescriptor:0000000000000020 $d
     /tmp/cc3i6xww.s:423    .data.USBD_LangIDDesc:0000000000000000 USBD_LangIDDesc
     /tmp/cc3i6xww.s:399    .data.USBD_FS_DeviceDesc:0000000000000000 USBD_FS_DeviceDesc
     /tmp/cc3i6xww.s:386    .data.FS_Desc:0000000000000000 FS_Desc
     /tmp/cc3i6xww.s:383    .data.FS_Desc:0000000000000000 $d
     /tmp/cc3i6xww.s:395    .data.USBD_FS_DeviceDesc:0000000000000000 $d
     /tmp/cc3i6xww.s:419    .data.USBD_LangIDDesc:0000000000000000 $d
     /tmp/cc3i6xww.s:429    .rodata.USBD_FS_ConfigStrDescriptor.str1.4:0000000000000000 $d
     /tmp/cc3i6xww.s:433    .rodata.USBD_FS_InterfaceStrDescriptor.str1.4:0000000000000000 $d
     /tmp/cc3i6xww.s:437    .rodata.USBD_FS_ManufacturerStrDescriptor.str1.4:0000000000000000 $d
     /tmp/cc3i6xww.s:441    .rodata.USBD_FS_ProductStrDescriptor.str1.4:0000000000000000 $d
     /tmp/cc3i6xww.s:445    .rodata.USBD_FS_SerialStrDescriptor.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
USBD_GetString
