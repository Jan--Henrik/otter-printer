ARM GAS  /tmp/ccYFxM84.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_msp.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_MspInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_MspInit:
  24              	.LFB37:
  25              		.file 1 "Src/stm32f0xx_hal_msp.c"
   1:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f0xx_hal_msp.c **** /**
   3:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
   4:Src/stm32f0xx_hal_msp.c ****   * File Name          : stm32f0xx_hal_msp.c
   5:Src/stm32f0xx_hal_msp.c ****   * Description        : This file provides code for the MSP Initialization 
   6:Src/stm32f0xx_hal_msp.c ****   *                      and de-Initialization codes.
   7:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
   8:Src/stm32f0xx_hal_msp.c ****   * This notice applies to any and all portions of this file
   9:Src/stm32f0xx_hal_msp.c ****   * that are not between comment pairs USER CODE BEGIN and
  10:Src/stm32f0xx_hal_msp.c ****   * USER CODE END. Other portions of this file, whether 
  11:Src/stm32f0xx_hal_msp.c ****   * inserted by the user or by software development tools
  12:Src/stm32f0xx_hal_msp.c ****   * are owned by their respective copyright owners.
  13:Src/stm32f0xx_hal_msp.c ****   *
  14:Src/stm32f0xx_hal_msp.c ****   * Copyright (c) 2019 STMicroelectronics International N.V. 
  15:Src/stm32f0xx_hal_msp.c ****   * All rights reserved.
  16:Src/stm32f0xx_hal_msp.c ****   *
  17:Src/stm32f0xx_hal_msp.c ****   * Redistribution and use in source and binary forms, with or without 
  18:Src/stm32f0xx_hal_msp.c ****   * modification, are permitted, provided that the following conditions are met:
  19:Src/stm32f0xx_hal_msp.c ****   *
  20:Src/stm32f0xx_hal_msp.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  21:Src/stm32f0xx_hal_msp.c ****   *    this list of conditions and the following disclaimer.
  22:Src/stm32f0xx_hal_msp.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  23:Src/stm32f0xx_hal_msp.c ****   *    this list of conditions and the following disclaimer in the documentation
  24:Src/stm32f0xx_hal_msp.c ****   *    and/or other materials provided with the distribution.
  25:Src/stm32f0xx_hal_msp.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  26:Src/stm32f0xx_hal_msp.c ****   *    contributors to this software may be used to endorse or promote products 
  27:Src/stm32f0xx_hal_msp.c ****   *    derived from this software without specific written permission.
  28:Src/stm32f0xx_hal_msp.c ****   * 4. This software, including modifications and/or derivative works of this 
  29:Src/stm32f0xx_hal_msp.c ****   *    software, must execute solely and exclusively on microcontroller or
  30:Src/stm32f0xx_hal_msp.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  31:Src/stm32f0xx_hal_msp.c ****   * 5. Redistribution and use of this software other than as permitted under 
  32:Src/stm32f0xx_hal_msp.c ****   *    this license is void and will automatically terminate your rights under 
  33:Src/stm32f0xx_hal_msp.c ****   *    this license. 
ARM GAS  /tmp/ccYFxM84.s 			page 2


  34:Src/stm32f0xx_hal_msp.c ****   *
  35:Src/stm32f0xx_hal_msp.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  36:Src/stm32f0xx_hal_msp.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  37:Src/stm32f0xx_hal_msp.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  38:Src/stm32f0xx_hal_msp.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  39:Src/stm32f0xx_hal_msp.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  40:Src/stm32f0xx_hal_msp.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  41:Src/stm32f0xx_hal_msp.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  42:Src/stm32f0xx_hal_msp.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  43:Src/stm32f0xx_hal_msp.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  44:Src/stm32f0xx_hal_msp.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  45:Src/stm32f0xx_hal_msp.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  46:Src/stm32f0xx_hal_msp.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Src/stm32f0xx_hal_msp.c ****   *
  48:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
  49:Src/stm32f0xx_hal_msp.c ****   */
  50:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Header */
  51:Src/stm32f0xx_hal_msp.c **** 
  52:Src/stm32f0xx_hal_msp.c **** /* Includes ------------------------------------------------------------------*/
  53:Src/stm32f0xx_hal_msp.c **** #include "main.h"
  54:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Includes */
  55:Src/stm32f0xx_hal_msp.c **** 
  56:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Includes */
  57:Src/stm32f0xx_hal_msp.c **** 
  58:Src/stm32f0xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_tim2_ch1;
  59:Src/stm32f0xx_hal_msp.c **** 
  60:Src/stm32f0xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_tim2_ch3;
  61:Src/stm32f0xx_hal_msp.c **** 
  62:Src/stm32f0xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_tim2_ch4;
  63:Src/stm32f0xx_hal_msp.c **** 
  64:Src/stm32f0xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_usart3_rx;
  65:Src/stm32f0xx_hal_msp.c **** 
  66:Src/stm32f0xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_usart3_tx;
  67:Src/stm32f0xx_hal_msp.c **** 
  68:Src/stm32f0xx_hal_msp.c **** /* Private typedef -----------------------------------------------------------*/
  69:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN TD */
  70:Src/stm32f0xx_hal_msp.c **** 
  71:Src/stm32f0xx_hal_msp.c **** /* USER CODE END TD */
  72:Src/stm32f0xx_hal_msp.c **** 
  73:Src/stm32f0xx_hal_msp.c **** /* Private define ------------------------------------------------------------*/
  74:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Define */
  75:Src/stm32f0xx_hal_msp.c ****  
  76:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Define */
  77:Src/stm32f0xx_hal_msp.c **** 
  78:Src/stm32f0xx_hal_msp.c **** /* Private macro -------------------------------------------------------------*/
  79:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Macro */
  80:Src/stm32f0xx_hal_msp.c **** 
  81:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Macro */
  82:Src/stm32f0xx_hal_msp.c **** 
  83:Src/stm32f0xx_hal_msp.c **** /* Private variables ---------------------------------------------------------*/
  84:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN PV */
  85:Src/stm32f0xx_hal_msp.c **** 
  86:Src/stm32f0xx_hal_msp.c **** /* USER CODE END PV */
  87:Src/stm32f0xx_hal_msp.c **** 
  88:Src/stm32f0xx_hal_msp.c **** /* Private function prototypes -----------------------------------------------*/
  89:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN PFP */
  90:Src/stm32f0xx_hal_msp.c **** 
ARM GAS  /tmp/ccYFxM84.s 			page 3


  91:Src/stm32f0xx_hal_msp.c **** /* USER CODE END PFP */
  92:Src/stm32f0xx_hal_msp.c **** 
  93:Src/stm32f0xx_hal_msp.c **** /* External functions --------------------------------------------------------*/
  94:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN ExternalFunctions */
  95:Src/stm32f0xx_hal_msp.c **** 
  96:Src/stm32f0xx_hal_msp.c **** /* USER CODE END ExternalFunctions */
  97:Src/stm32f0xx_hal_msp.c **** 
  98:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN 0 */
  99:Src/stm32f0xx_hal_msp.c **** 
 100:Src/stm32f0xx_hal_msp.c **** /* USER CODE END 0 */
 101:Src/stm32f0xx_hal_msp.c ****                         
 102:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
 103:Src/stm32f0xx_hal_msp.c ****                     /**
 104:Src/stm32f0xx_hal_msp.c ****   * Initializes the Global MSP.
 105:Src/stm32f0xx_hal_msp.c ****   */
 106:Src/stm32f0xx_hal_msp.c **** void HAL_MspInit(void)
 107:Src/stm32f0xx_hal_msp.c **** {
  26              		.loc 1 107 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              	.LBB2:
 108:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 0 */
 109:Src/stm32f0xx_hal_msp.c **** 
 110:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END MspInit 0 */
 111:Src/stm32f0xx_hal_msp.c **** 
 112:Src/stm32f0xx_hal_msp.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
  35              		.loc 1 112 0
  36 0002 0A4B     		ldr	r3, .L2
  37 0004 9969     		ldr	r1, [r3, #24]
  38 0006 0122     		movs	r2, #1
  39 0008 1143     		orrs	r1, r2
  40 000a 9961     		str	r1, [r3, #24]
  41 000c 9969     		ldr	r1, [r3, #24]
  42 000e 0A40     		ands	r2, r1
  43 0010 0092     		str	r2, [sp]
  44 0012 009A     		ldr	r2, [sp]
  45              	.LBE2:
  46              	.LBB3:
 113:Src/stm32f0xx_hal_msp.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  47              		.loc 1 113 0
  48 0014 DA69     		ldr	r2, [r3, #28]
  49 0016 8021     		movs	r1, #128
  50 0018 4905     		lsls	r1, r1, #21
  51 001a 0A43     		orrs	r2, r1
  52 001c DA61     		str	r2, [r3, #28]
  53 001e DB69     		ldr	r3, [r3, #28]
  54 0020 0B40     		ands	r3, r1
  55 0022 0193     		str	r3, [sp, #4]
  56 0024 019B     		ldr	r3, [sp, #4]
  57              	.LBE3:
 114:Src/stm32f0xx_hal_msp.c **** 
 115:Src/stm32f0xx_hal_msp.c ****   /* System interrupt init*/
ARM GAS  /tmp/ccYFxM84.s 			page 4


 116:Src/stm32f0xx_hal_msp.c **** 
 117:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 1 */
 118:Src/stm32f0xx_hal_msp.c **** 
 119:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END MspInit 1 */
 120:Src/stm32f0xx_hal_msp.c **** }
  58              		.loc 1 120 0
  59 0026 02B0     		add	sp, sp, #8
  60              		@ sp needed
  61 0028 7047     		bx	lr
  62              	.L3:
  63 002a C046     		.align	2
  64              	.L2:
  65 002c 00100240 		.word	1073876992
  66              		.cfi_endproc
  67              	.LFE37:
  69              		.section	.text.HAL_TIM_Encoder_MspInit,"ax",%progbits
  70              		.align	1
  71              		.global	HAL_TIM_Encoder_MspInit
  72              		.syntax unified
  73              		.code	16
  74              		.thumb_func
  75              		.fpu softvfp
  77              	HAL_TIM_Encoder_MspInit:
  78              	.LFB38:
 121:Src/stm32f0xx_hal_msp.c **** 
 122:Src/stm32f0xx_hal_msp.c **** 
 123:Src/stm32f0xx_hal_msp.c **** /**
 124:Src/stm32f0xx_hal_msp.c **** * @brief I2C MSP De-Initialization
 125:Src/stm32f0xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 126:Src/stm32f0xx_hal_msp.c **** * @param hi2c: I2C handle pointer
 127:Src/stm32f0xx_hal_msp.c **** * @retval None
 128:Src/stm32f0xx_hal_msp.c **** */
 129:Src/stm32f0xx_hal_msp.c **** 
 130:Src/stm32f0xx_hal_msp.c **** 
 131:Src/stm32f0xx_hal_msp.c **** /**
 132:Src/stm32f0xx_hal_msp.c **** * @brief TIM_Encoder MSP Initialization
 133:Src/stm32f0xx_hal_msp.c **** * This function configures the hardware resources used in this example
 134:Src/stm32f0xx_hal_msp.c **** * @param htim_encoder: TIM_Encoder handle pointer
 135:Src/stm32f0xx_hal_msp.c **** * @retval None
 136:Src/stm32f0xx_hal_msp.c **** */
 137:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* htim_encoder)
 138:Src/stm32f0xx_hal_msp.c **** {
  79              		.loc 1 138 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 32
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              	.LVL0:
  84 0000 10B5     		push	{r4, lr}
  85              	.LCFI1:
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 4, -8
  88              		.cfi_offset 14, -4
  89 0002 88B0     		sub	sp, sp, #32
  90              	.LCFI2:
  91              		.cfi_def_cfa_offset 40
  92 0004 0400     		movs	r4, r0
 139:Src/stm32f0xx_hal_msp.c **** 
ARM GAS  /tmp/ccYFxM84.s 			page 5


 140:Src/stm32f0xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  93              		.loc 1 140 0
  94 0006 1422     		movs	r2, #20
  95 0008 0021     		movs	r1, #0
  96 000a 03A8     		add	r0, sp, #12
  97              	.LVL1:
  98 000c FFF7FEFF 		bl	memset
  99              	.LVL2:
 141:Src/stm32f0xx_hal_msp.c ****   if(htim_encoder->Instance==TIM1)
 100              		.loc 1 141 0
 101 0010 2268     		ldr	r2, [r4]
 102 0012 124B     		ldr	r3, .L7
 103 0014 9A42     		cmp	r2, r3
 104 0016 01D0     		beq	.L6
 105              	.L4:
 142:Src/stm32f0xx_hal_msp.c ****   {
 143:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 144:Src/stm32f0xx_hal_msp.c **** 
 145:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM1_MspInit 0 */
 146:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 147:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM1_CLK_ENABLE();
 148:Src/stm32f0xx_hal_msp.c ****   
 149:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 150:Src/stm32f0xx_hal_msp.c ****     /**TIM1 GPIO Configuration    
 151:Src/stm32f0xx_hal_msp.c ****     PA8     ------> TIM1_CH1
 152:Src/stm32f0xx_hal_msp.c ****     PA9     ------> TIM1_CH2 
 153:Src/stm32f0xx_hal_msp.c ****     */
 154:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = ENCODER_B_Pin|ENCODER_A_Pin;
 155:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 156:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 157:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 158:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM1;
 159:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 160:Src/stm32f0xx_hal_msp.c **** 
 161:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 162:Src/stm32f0xx_hal_msp.c **** 
 163:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM1_MspInit 1 */
 164:Src/stm32f0xx_hal_msp.c ****   }
 165:Src/stm32f0xx_hal_msp.c **** 
 166:Src/stm32f0xx_hal_msp.c **** }
 106              		.loc 1 166 0
 107 0018 08B0     		add	sp, sp, #32
 108              		@ sp needed
 109              	.LVL3:
 110 001a 10BD     		pop	{r4, pc}
 111              	.LVL4:
 112              	.L6:
 113              	.LBB4:
 147:Src/stm32f0xx_hal_msp.c ****   
 114              		.loc 1 147 0
 115 001c 104B     		ldr	r3, .L7+4
 116 001e 9969     		ldr	r1, [r3, #24]
 117 0020 8020     		movs	r0, #128
 118 0022 0001     		lsls	r0, r0, #4
 119 0024 0143     		orrs	r1, r0
 120 0026 9961     		str	r1, [r3, #24]
 121 0028 9A69     		ldr	r2, [r3, #24]
ARM GAS  /tmp/ccYFxM84.s 			page 6


 122 002a 0240     		ands	r2, r0
 123 002c 0192     		str	r2, [sp, #4]
 124 002e 019A     		ldr	r2, [sp, #4]
 125              	.LBE4:
 126              	.LBB5:
 149:Src/stm32f0xx_hal_msp.c ****     /**TIM1 GPIO Configuration    
 127              		.loc 1 149 0
 128 0030 5A69     		ldr	r2, [r3, #20]
 129 0032 8021     		movs	r1, #128
 130 0034 8902     		lsls	r1, r1, #10
 131 0036 0A43     		orrs	r2, r1
 132 0038 5A61     		str	r2, [r3, #20]
 133 003a 5B69     		ldr	r3, [r3, #20]
 134 003c 0B40     		ands	r3, r1
 135 003e 0293     		str	r3, [sp, #8]
 136 0040 029B     		ldr	r3, [sp, #8]
 137              	.LBE5:
 154:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 138              		.loc 1 154 0
 139 0042 C023     		movs	r3, #192
 140 0044 9B00     		lsls	r3, r3, #2
 141 0046 0393     		str	r3, [sp, #12]
 155:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 142              		.loc 1 155 0
 143 0048 0223     		movs	r3, #2
 144 004a 0493     		str	r3, [sp, #16]
 158:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 145              		.loc 1 158 0
 146 004c 0793     		str	r3, [sp, #28]
 159:Src/stm32f0xx_hal_msp.c **** 
 147              		.loc 1 159 0
 148 004e 9020     		movs	r0, #144
 149 0050 03A9     		add	r1, sp, #12
 150 0052 C005     		lsls	r0, r0, #23
 151 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 152              	.LVL5:
 153              		.loc 1 166 0
 154 0058 DEE7     		b	.L4
 155              	.L8:
 156 005a C046     		.align	2
 157              	.L7:
 158 005c 002C0140 		.word	1073818624
 159 0060 00100240 		.word	1073876992
 160              		.cfi_endproc
 161              	.LFE38:
 163              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 164              		.align	1
 165              		.global	HAL_TIM_Base_MspInit
 166              		.syntax unified
 167              		.code	16
 168              		.thumb_func
 169              		.fpu softvfp
 171              	HAL_TIM_Base_MspInit:
 172              	.LFB39:
 167:Src/stm32f0xx_hal_msp.c **** 
 168:Src/stm32f0xx_hal_msp.c **** /**
 169:Src/stm32f0xx_hal_msp.c **** * @brief TIM_Base MSP Initialization
ARM GAS  /tmp/ccYFxM84.s 			page 7


 170:Src/stm32f0xx_hal_msp.c **** * This function configures the hardware resources used in this example
 171:Src/stm32f0xx_hal_msp.c **** * @param htim_base: TIM_Base handle pointer
 172:Src/stm32f0xx_hal_msp.c **** * @retval None
 173:Src/stm32f0xx_hal_msp.c **** */
 174:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
 175:Src/stm32f0xx_hal_msp.c **** {
 173              		.loc 1 175 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 8
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              	.LVL6:
 178 0000 10B5     		push	{r4, lr}
 179              	.LCFI3:
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 4, -8
 182              		.cfi_offset 14, -4
 183 0002 82B0     		sub	sp, sp, #8
 184              	.LCFI4:
 185              		.cfi_def_cfa_offset 16
 186 0004 0400     		movs	r4, r0
 176:Src/stm32f0xx_hal_msp.c **** 
 177:Src/stm32f0xx_hal_msp.c ****   if(htim_base->Instance==TIM2)
 187              		.loc 1 177 0
 188 0006 0368     		ldr	r3, [r0]
 189 0008 8022     		movs	r2, #128
 190 000a D205     		lsls	r2, r2, #23
 191 000c 9342     		cmp	r3, r2
 192 000e 04D0     		beq	.L15
 178:Src/stm32f0xx_hal_msp.c ****   {
 179:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 180:Src/stm32f0xx_hal_msp.c **** 
 181:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM2_MspInit 0 */
 182:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 183:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM2_CLK_ENABLE();
 184:Src/stm32f0xx_hal_msp.c ****   
 185:Src/stm32f0xx_hal_msp.c ****     /* TIM2 DMA Init */
 186:Src/stm32f0xx_hal_msp.c ****     /* TIM2_CH1 Init */
 187:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch1.Instance = DMA1_Channel5;
 188:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 189:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 190:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;
 191:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 192:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 193:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch1.Init.Mode = DMA_NORMAL;
 194:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 195:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_tim2_ch1) != HAL_OK)
 196:Src/stm32f0xx_hal_msp.c ****     {
 197:Src/stm32f0xx_hal_msp.c ****       Error_Handler();
 198:Src/stm32f0xx_hal_msp.c ****     }
 199:Src/stm32f0xx_hal_msp.c **** 
 200:Src/stm32f0xx_hal_msp.c ****     __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC1],hdma_tim2_ch1);
 201:Src/stm32f0xx_hal_msp.c **** 
 202:Src/stm32f0xx_hal_msp.c ****     /* TIM2_CH4 Init */
 203:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch4.Instance = DMA1_Channel4;
 204:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch4.Init.Direction = DMA_MEMORY_TO_PERIPH;
 205:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch4.Init.PeriphInc = DMA_PINC_DISABLE;
 206:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch4.Init.MemInc = DMA_MINC_ENABLE;
ARM GAS  /tmp/ccYFxM84.s 			page 8


 207:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch4.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 208:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch4.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 209:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch4.Init.Mode = DMA_NORMAL;
 210:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch4.Init.Priority = DMA_PRIORITY_HIGH;
 211:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_tim2_ch4) != HAL_OK)
 212:Src/stm32f0xx_hal_msp.c ****     {
 213:Src/stm32f0xx_hal_msp.c ****       Error_Handler();
 214:Src/stm32f0xx_hal_msp.c ****     }
 215:Src/stm32f0xx_hal_msp.c **** 
 216:Src/stm32f0xx_hal_msp.c ****     __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC4],hdma_tim2_ch4);
 217:Src/stm32f0xx_hal_msp.c **** 
 218:Src/stm32f0xx_hal_msp.c ****         /* TIM2_CH4 Init */
 219:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch3.Instance = DMA1_Channel1;
 220:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch3.Init.Direction = DMA_MEMORY_TO_PERIPH;
 221:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch3.Init.PeriphInc = DMA_PINC_DISABLE;
 222:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch3.Init.MemInc = DMA_MINC_ENABLE;
 223:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch3.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 224:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch3.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 225:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch3.Init.Mode = DMA_CIRCULAR;
 226:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch3.Init.Priority = DMA_PRIORITY_HIGH;
 227:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_tim2_ch3) != HAL_OK)
 228:Src/stm32f0xx_hal_msp.c ****     {
 229:Src/stm32f0xx_hal_msp.c ****       Error_Handler();
 230:Src/stm32f0xx_hal_msp.c ****     }
 231:Src/stm32f0xx_hal_msp.c **** 
 232:Src/stm32f0xx_hal_msp.c ****     __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC3],hdma_tim2_ch3);
 233:Src/stm32f0xx_hal_msp.c **** 
 234:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 235:Src/stm32f0xx_hal_msp.c **** 
 236:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM2_MspInit 1 */
 237:Src/stm32f0xx_hal_msp.c ****   }
 238:Src/stm32f0xx_hal_msp.c ****   else if(htim_base->Instance==TIM3)
 193              		.loc 1 238 0
 194 0010 354A     		ldr	r2, .L20
 195 0012 9342     		cmp	r3, r2
 196 0014 5ED0     		beq	.L16
 197              	.LVL7:
 198              	.L9:
 239:Src/stm32f0xx_hal_msp.c ****   {
 240:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 241:Src/stm32f0xx_hal_msp.c **** 
 242:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM3_MspInit 0 */
 243:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 244:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM3_CLK_ENABLE();
 245:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 246:Src/stm32f0xx_hal_msp.c **** 
 247:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM3_MspInit 1 */
 248:Src/stm32f0xx_hal_msp.c ****   }
 249:Src/stm32f0xx_hal_msp.c **** 
 250:Src/stm32f0xx_hal_msp.c **** }
 199              		.loc 1 250 0
 200 0016 02B0     		add	sp, sp, #8
 201              		@ sp needed
 202              	.LVL8:
 203 0018 10BD     		pop	{r4, pc}
 204              	.LVL9:
 205              	.L15:
ARM GAS  /tmp/ccYFxM84.s 			page 9


 206              	.LBB6:
 183:Src/stm32f0xx_hal_msp.c ****   
 207              		.loc 1 183 0
 208 001a 344A     		ldr	r2, .L20+4
 209 001c D169     		ldr	r1, [r2, #28]
 210 001e 0123     		movs	r3, #1
 211 0020 1943     		orrs	r1, r3
 212 0022 D161     		str	r1, [r2, #28]
 213 0024 D269     		ldr	r2, [r2, #28]
 214 0026 1340     		ands	r3, r2
 215 0028 0093     		str	r3, [sp]
 216 002a 009B     		ldr	r3, [sp]
 217              	.LBE6:
 187:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 218              		.loc 1 187 0
 219 002c 3048     		ldr	r0, .L20+8
 220              	.LVL10:
 221 002e 314B     		ldr	r3, .L20+12
 222 0030 0360     		str	r3, [r0]
 188:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 223              		.loc 1 188 0
 224 0032 1023     		movs	r3, #16
 225 0034 4360     		str	r3, [r0, #4]
 189:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;
 226              		.loc 1 189 0
 227 0036 0023     		movs	r3, #0
 228 0038 8360     		str	r3, [r0, #8]
 190:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 229              		.loc 1 190 0
 230 003a 8022     		movs	r2, #128
 231 003c C260     		str	r2, [r0, #12]
 191:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 232              		.loc 1 191 0
 233 003e 0361     		str	r3, [r0, #16]
 192:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch1.Init.Mode = DMA_NORMAL;
 234              		.loc 1 192 0
 235 0040 8022     		movs	r2, #128
 236 0042 D200     		lsls	r2, r2, #3
 237 0044 4261     		str	r2, [r0, #20]
 193:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 238              		.loc 1 193 0
 239 0046 8361     		str	r3, [r0, #24]
 194:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_tim2_ch1) != HAL_OK)
 240              		.loc 1 194 0
 241 0048 8023     		movs	r3, #128
 242 004a 9B01     		lsls	r3, r3, #6
 243 004c C361     		str	r3, [r0, #28]
 195:Src/stm32f0xx_hal_msp.c ****     {
 244              		.loc 1 195 0
 245 004e FFF7FEFF 		bl	HAL_DMA_Init
 246              	.LVL11:
 247 0052 0028     		cmp	r0, #0
 248 0054 35D1     		bne	.L17
 249              	.L11:
 200:Src/stm32f0xx_hal_msp.c **** 
 250              		.loc 1 200 0
 251 0056 264B     		ldr	r3, .L20+8
ARM GAS  /tmp/ccYFxM84.s 			page 10


 252 0058 6362     		str	r3, [r4, #36]
 253 005a 5C62     		str	r4, [r3, #36]
 203:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch4.Init.Direction = DMA_MEMORY_TO_PERIPH;
 254              		.loc 1 203 0
 255 005c 2648     		ldr	r0, .L20+16
 256 005e 274B     		ldr	r3, .L20+20
 257 0060 0360     		str	r3, [r0]
 204:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch4.Init.PeriphInc = DMA_PINC_DISABLE;
 258              		.loc 1 204 0
 259 0062 1023     		movs	r3, #16
 260 0064 4360     		str	r3, [r0, #4]
 205:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch4.Init.MemInc = DMA_MINC_ENABLE;
 261              		.loc 1 205 0
 262 0066 0023     		movs	r3, #0
 263 0068 8360     		str	r3, [r0, #8]
 206:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch4.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 264              		.loc 1 206 0
 265 006a 8022     		movs	r2, #128
 266 006c C260     		str	r2, [r0, #12]
 207:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch4.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 267              		.loc 1 207 0
 268 006e 8032     		adds	r2, r2, #128
 269 0070 0261     		str	r2, [r0, #16]
 208:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch4.Init.Mode = DMA_NORMAL;
 270              		.loc 1 208 0
 271 0072 8022     		movs	r2, #128
 272 0074 D200     		lsls	r2, r2, #3
 273 0076 4261     		str	r2, [r0, #20]
 209:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch4.Init.Priority = DMA_PRIORITY_HIGH;
 274              		.loc 1 209 0
 275 0078 8361     		str	r3, [r0, #24]
 210:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_tim2_ch4) != HAL_OK)
 276              		.loc 1 210 0
 277 007a 8023     		movs	r3, #128
 278 007c 9B01     		lsls	r3, r3, #6
 279 007e C361     		str	r3, [r0, #28]
 211:Src/stm32f0xx_hal_msp.c ****     {
 280              		.loc 1 211 0
 281 0080 FFF7FEFF 		bl	HAL_DMA_Init
 282              	.LVL12:
 283 0084 0028     		cmp	r0, #0
 284 0086 1FD1     		bne	.L18
 285              	.L12:
 216:Src/stm32f0xx_hal_msp.c **** 
 286              		.loc 1 216 0
 287 0088 1B4B     		ldr	r3, .L20+16
 288 008a 2363     		str	r3, [r4, #48]
 289 008c 5C62     		str	r4, [r3, #36]
 219:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch3.Init.Direction = DMA_MEMORY_TO_PERIPH;
 290              		.loc 1 219 0
 291 008e 1C48     		ldr	r0, .L20+24
 292 0090 1C4B     		ldr	r3, .L20+28
 293 0092 0360     		str	r3, [r0]
 220:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch3.Init.PeriphInc = DMA_PINC_DISABLE;
 294              		.loc 1 220 0
 295 0094 1023     		movs	r3, #16
 296 0096 4360     		str	r3, [r0, #4]
ARM GAS  /tmp/ccYFxM84.s 			page 11


 221:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch3.Init.MemInc = DMA_MINC_ENABLE;
 297              		.loc 1 221 0
 298 0098 0023     		movs	r3, #0
 299 009a 8360     		str	r3, [r0, #8]
 222:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch3.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 300              		.loc 1 222 0
 301 009c 8022     		movs	r2, #128
 302 009e C260     		str	r2, [r0, #12]
 223:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch3.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 303              		.loc 1 223 0
 304 00a0 0361     		str	r3, [r0, #16]
 224:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch3.Init.Mode = DMA_CIRCULAR;
 305              		.loc 1 224 0
 306 00a2 8023     		movs	r3, #128
 307 00a4 DB00     		lsls	r3, r3, #3
 308 00a6 4361     		str	r3, [r0, #20]
 225:Src/stm32f0xx_hal_msp.c ****     hdma_tim2_ch3.Init.Priority = DMA_PRIORITY_HIGH;
 309              		.loc 1 225 0
 310 00a8 2023     		movs	r3, #32
 311 00aa 8361     		str	r3, [r0, #24]
 226:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_tim2_ch3) != HAL_OK)
 312              		.loc 1 226 0
 313 00ac 8023     		movs	r3, #128
 314 00ae 9B01     		lsls	r3, r3, #6
 315 00b0 C361     		str	r3, [r0, #28]
 227:Src/stm32f0xx_hal_msp.c ****     {
 316              		.loc 1 227 0
 317 00b2 FFF7FEFF 		bl	HAL_DMA_Init
 318              	.LVL13:
 319 00b6 0028     		cmp	r0, #0
 320 00b8 09D1     		bne	.L19
 321              	.L13:
 232:Src/stm32f0xx_hal_msp.c **** 
 322              		.loc 1 232 0
 323 00ba 114B     		ldr	r3, .L20+24
 324 00bc E362     		str	r3, [r4, #44]
 325 00be 5C62     		str	r4, [r3, #36]
 326 00c0 A9E7     		b	.L9
 327              	.L17:
 197:Src/stm32f0xx_hal_msp.c ****     }
 328              		.loc 1 197 0
 329 00c2 FFF7FEFF 		bl	Error_Handler
 330              	.LVL14:
 331 00c6 C6E7     		b	.L11
 332              	.L18:
 213:Src/stm32f0xx_hal_msp.c ****     }
 333              		.loc 1 213 0
 334 00c8 FFF7FEFF 		bl	Error_Handler
 335              	.LVL15:
 336 00cc DCE7     		b	.L12
 337              	.L19:
 229:Src/stm32f0xx_hal_msp.c ****     }
 338              		.loc 1 229 0
 339 00ce FFF7FEFF 		bl	Error_Handler
 340              	.LVL16:
 341 00d2 F2E7     		b	.L13
 342              	.LVL17:
ARM GAS  /tmp/ccYFxM84.s 			page 12


 343              	.L16:
 344              	.LBB7:
 244:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 345              		.loc 1 244 0
 346 00d4 054A     		ldr	r2, .L20+4
 347 00d6 D169     		ldr	r1, [r2, #28]
 348 00d8 0223     		movs	r3, #2
 349 00da 1943     		orrs	r1, r3
 350 00dc D161     		str	r1, [r2, #28]
 351 00de D269     		ldr	r2, [r2, #28]
 352 00e0 1340     		ands	r3, r2
 353 00e2 0193     		str	r3, [sp, #4]
 354 00e4 019B     		ldr	r3, [sp, #4]
 355              	.LBE7:
 356              		.loc 1 250 0
 357 00e6 96E7     		b	.L9
 358              	.L21:
 359              		.align	2
 360              	.L20:
 361 00e8 00040040 		.word	1073742848
 362 00ec 00100240 		.word	1073876992
 363 00f0 00000000 		.word	hdma_tim2_ch1
 364 00f4 58000240 		.word	1073872984
 365 00f8 00000000 		.word	hdma_tim2_ch4
 366 00fc 44000240 		.word	1073872964
 367 0100 00000000 		.word	hdma_tim2_ch3
 368 0104 08000240 		.word	1073872904
 369              		.cfi_endproc
 370              	.LFE39:
 372              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 373              		.align	1
 374              		.global	HAL_TIM_MspPostInit
 375              		.syntax unified
 376              		.code	16
 377              		.thumb_func
 378              		.fpu softvfp
 380              	HAL_TIM_MspPostInit:
 381              	.LFB40:
 251:Src/stm32f0xx_hal_msp.c **** 
 252:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
 253:Src/stm32f0xx_hal_msp.c **** {
 382              		.loc 1 253 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 24
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              	.LVL18:
 387 0000 10B5     		push	{r4, lr}
 388              	.LCFI5:
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 4, -8
 391              		.cfi_offset 14, -4
 392 0002 86B0     		sub	sp, sp, #24
 393              	.LCFI6:
 394              		.cfi_def_cfa_offset 32
 395 0004 0400     		movs	r4, r0
 254:Src/stm32f0xx_hal_msp.c **** 
 255:Src/stm32f0xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
ARM GAS  /tmp/ccYFxM84.s 			page 13


 396              		.loc 1 255 0
 397 0006 1422     		movs	r2, #20
 398 0008 0021     		movs	r1, #0
 399 000a 01A8     		add	r0, sp, #4
 400              	.LVL19:
 401 000c FFF7FEFF 		bl	memset
 402              	.LVL20:
 256:Src/stm32f0xx_hal_msp.c ****   if(htim->Instance==TIM3)
 403              		.loc 1 256 0
 404 0010 2268     		ldr	r2, [r4]
 405 0012 0D4B     		ldr	r3, .L25
 406 0014 9A42     		cmp	r2, r3
 407 0016 01D0     		beq	.L24
 408              	.L22:
 257:Src/stm32f0xx_hal_msp.c ****   {
 258:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspPostInit 0 */
 259:Src/stm32f0xx_hal_msp.c **** 
 260:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM3_MspPostInit 0 */
 261:Src/stm32f0xx_hal_msp.c ****   
 262:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 263:Src/stm32f0xx_hal_msp.c ****     /**TIM3 GPIO Configuration    
 264:Src/stm32f0xx_hal_msp.c ****     PB0     ------> TIM3_CH3
 265:Src/stm32f0xx_hal_msp.c ****     PB1     ------> TIM3_CH4 
 266:Src/stm32f0xx_hal_msp.c ****     */
 267:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 268:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 269:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 270:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 271:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM3;
 272:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 273:Src/stm32f0xx_hal_msp.c **** 
 274:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspPostInit 1 */
 275:Src/stm32f0xx_hal_msp.c **** 
 276:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM3_MspPostInit 1 */
 277:Src/stm32f0xx_hal_msp.c ****   }
 278:Src/stm32f0xx_hal_msp.c **** 
 279:Src/stm32f0xx_hal_msp.c **** }
 409              		.loc 1 279 0
 410 0018 06B0     		add	sp, sp, #24
 411              		@ sp needed
 412              	.LVL21:
 413 001a 10BD     		pop	{r4, pc}
 414              	.LVL22:
 415              	.L24:
 416              	.LBB8:
 262:Src/stm32f0xx_hal_msp.c ****     /**TIM3 GPIO Configuration    
 417              		.loc 1 262 0
 418 001c 0B4A     		ldr	r2, .L25+4
 419 001e 5169     		ldr	r1, [r2, #20]
 420 0020 8020     		movs	r0, #128
 421 0022 C002     		lsls	r0, r0, #11
 422 0024 0143     		orrs	r1, r0
 423 0026 5161     		str	r1, [r2, #20]
 424 0028 5369     		ldr	r3, [r2, #20]
 425 002a 0340     		ands	r3, r0
 426 002c 0093     		str	r3, [sp]
 427 002e 009B     		ldr	r3, [sp]
ARM GAS  /tmp/ccYFxM84.s 			page 14


 428              	.LBE8:
 267:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 429              		.loc 1 267 0
 430 0030 0323     		movs	r3, #3
 431 0032 0193     		str	r3, [sp, #4]
 268:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 432              		.loc 1 268 0
 433 0034 013B     		subs	r3, r3, #1
 434 0036 0293     		str	r3, [sp, #8]
 271:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 435              		.loc 1 271 0
 436 0038 013B     		subs	r3, r3, #1
 437 003a 0593     		str	r3, [sp, #20]
 272:Src/stm32f0xx_hal_msp.c **** 
 438              		.loc 1 272 0
 439 003c 01A9     		add	r1, sp, #4
 440 003e 0448     		ldr	r0, .L25+8
 441 0040 FFF7FEFF 		bl	HAL_GPIO_Init
 442              	.LVL23:
 443              		.loc 1 279 0
 444 0044 E8E7     		b	.L22
 445              	.L26:
 446 0046 C046     		.align	2
 447              	.L25:
 448 0048 00040040 		.word	1073742848
 449 004c 00100240 		.word	1073876992
 450 0050 00040048 		.word	1207960576
 451              		.cfi_endproc
 452              	.LFE40:
 454              		.section	.text.HAL_TIM_Encoder_MspDeInit,"ax",%progbits
 455              		.align	1
 456              		.global	HAL_TIM_Encoder_MspDeInit
 457              		.syntax unified
 458              		.code	16
 459              		.thumb_func
 460              		.fpu softvfp
 462              	HAL_TIM_Encoder_MspDeInit:
 463              	.LFB41:
 280:Src/stm32f0xx_hal_msp.c **** /**
 281:Src/stm32f0xx_hal_msp.c **** * @brief TIM_Encoder MSP De-Initialization
 282:Src/stm32f0xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 283:Src/stm32f0xx_hal_msp.c **** * @param htim_encoder: TIM_Encoder handle pointer
 284:Src/stm32f0xx_hal_msp.c **** * @retval None
 285:Src/stm32f0xx_hal_msp.c **** */
 286:Src/stm32f0xx_hal_msp.c **** 
 287:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_Encoder_MspDeInit(TIM_HandleTypeDef* htim_encoder)
 288:Src/stm32f0xx_hal_msp.c **** {
 464              		.loc 1 288 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              	.LVL24:
 469 0000 10B5     		push	{r4, lr}
 470              	.LCFI7:
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 4, -8
 473              		.cfi_offset 14, -4
ARM GAS  /tmp/ccYFxM84.s 			page 15


 289:Src/stm32f0xx_hal_msp.c **** 
 290:Src/stm32f0xx_hal_msp.c ****   if(htim_encoder->Instance==TIM1)
 474              		.loc 1 290 0
 475 0002 0268     		ldr	r2, [r0]
 476 0004 074B     		ldr	r3, .L30
 477 0006 9A42     		cmp	r2, r3
 478 0008 00D0     		beq	.L29
 479              	.LVL25:
 480              	.L27:
 291:Src/stm32f0xx_hal_msp.c ****   {
 292:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 293:Src/stm32f0xx_hal_msp.c **** 
 294:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM1_MspDeInit 0 */
 295:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 296:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM1_CLK_DISABLE();
 297:Src/stm32f0xx_hal_msp.c ****   
 298:Src/stm32f0xx_hal_msp.c ****     /**TIM1 GPIO Configuration    
 299:Src/stm32f0xx_hal_msp.c ****     PA8     ------> TIM1_CH1
 300:Src/stm32f0xx_hal_msp.c ****     PA9     ------> TIM1_CH2 
 301:Src/stm32f0xx_hal_msp.c ****     */
 302:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, ENCODER_B_Pin|ENCODER_A_Pin);
 303:Src/stm32f0xx_hal_msp.c **** 
 304:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 305:Src/stm32f0xx_hal_msp.c **** 
 306:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM1_MspDeInit 1 */
 307:Src/stm32f0xx_hal_msp.c ****   }
 308:Src/stm32f0xx_hal_msp.c **** 
 309:Src/stm32f0xx_hal_msp.c **** }
 481              		.loc 1 309 0
 482              		@ sp needed
 483 000a 10BD     		pop	{r4, pc}
 484              	.LVL26:
 485              	.L29:
 296:Src/stm32f0xx_hal_msp.c ****   
 486              		.loc 1 296 0
 487 000c 064A     		ldr	r2, .L30+4
 488 000e 9369     		ldr	r3, [r2, #24]
 489 0010 0649     		ldr	r1, .L30+8
 490 0012 0B40     		ands	r3, r1
 491 0014 9361     		str	r3, [r2, #24]
 302:Src/stm32f0xx_hal_msp.c **** 
 492              		.loc 1 302 0
 493 0016 C021     		movs	r1, #192
 494 0018 9020     		movs	r0, #144
 495              	.LVL27:
 496 001a 8900     		lsls	r1, r1, #2
 497 001c C005     		lsls	r0, r0, #23
 498 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 499              	.LVL28:
 500              		.loc 1 309 0
 501 0022 F2E7     		b	.L27
 502              	.L31:
 503              		.align	2
 504              	.L30:
 505 0024 002C0140 		.word	1073818624
 506 0028 00100240 		.word	1073876992
 507 002c FFF7FFFF 		.word	-2049
ARM GAS  /tmp/ccYFxM84.s 			page 16


 508              		.cfi_endproc
 509              	.LFE41:
 511              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 512              		.align	1
 513              		.global	HAL_TIM_Base_MspDeInit
 514              		.syntax unified
 515              		.code	16
 516              		.thumb_func
 517              		.fpu softvfp
 519              	HAL_TIM_Base_MspDeInit:
 520              	.LFB42:
 310:Src/stm32f0xx_hal_msp.c **** 
 311:Src/stm32f0xx_hal_msp.c **** /**
 312:Src/stm32f0xx_hal_msp.c **** * @brief TIM_Base MSP De-Initialization
 313:Src/stm32f0xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 314:Src/stm32f0xx_hal_msp.c **** * @param htim_base: TIM_Base handle pointer
 315:Src/stm32f0xx_hal_msp.c **** * @retval None
 316:Src/stm32f0xx_hal_msp.c **** */
 317:Src/stm32f0xx_hal_msp.c **** 
 318:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* htim_base)
 319:Src/stm32f0xx_hal_msp.c **** {
 521              		.loc 1 319 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              	.LVL29:
 526 0000 10B5     		push	{r4, lr}
 527              	.LCFI8:
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 4, -8
 530              		.cfi_offset 14, -4
 531 0002 0400     		movs	r4, r0
 320:Src/stm32f0xx_hal_msp.c **** 
 321:Src/stm32f0xx_hal_msp.c ****   if(htim_base->Instance==TIM2)
 532              		.loc 1 321 0
 533 0004 0368     		ldr	r3, [r0]
 534 0006 8022     		movs	r2, #128
 535 0008 D205     		lsls	r2, r2, #23
 536 000a 9342     		cmp	r3, r2
 537 000c 03D0     		beq	.L35
 322:Src/stm32f0xx_hal_msp.c ****   {
 323:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 324:Src/stm32f0xx_hal_msp.c **** 
 325:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM2_MspDeInit 0 */
 326:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 327:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM2_CLK_DISABLE();
 328:Src/stm32f0xx_hal_msp.c **** 
 329:Src/stm32f0xx_hal_msp.c ****     /* TIM2 DMA DeInit */
 330:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(htim_base->hdma[TIM_DMA_ID_CC1]);
 331:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(htim_base->hdma[TIM_DMA_ID_CC3]);
 332:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(htim_base->hdma[TIM_DMA_ID_CC4]);
 333:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 334:Src/stm32f0xx_hal_msp.c **** 
 335:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM2_MspDeInit 1 */
 336:Src/stm32f0xx_hal_msp.c ****   }
 337:Src/stm32f0xx_hal_msp.c ****   else if(htim_base->Instance==TIM3)
 538              		.loc 1 337 0
ARM GAS  /tmp/ccYFxM84.s 			page 17


 539 000e 0C4A     		ldr	r2, .L37
 540 0010 9342     		cmp	r3, r2
 541 0012 0FD0     		beq	.L36
 542              	.LVL30:
 543              	.L32:
 338:Src/stm32f0xx_hal_msp.c ****   {
 339:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 340:Src/stm32f0xx_hal_msp.c **** 
 341:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM3_MspDeInit 0 */
 342:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 343:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM3_CLK_DISABLE();
 344:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 345:Src/stm32f0xx_hal_msp.c **** 
 346:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM3_MspDeInit 1 */
 347:Src/stm32f0xx_hal_msp.c ****   }
 348:Src/stm32f0xx_hal_msp.c **** 
 349:Src/stm32f0xx_hal_msp.c **** }
 544              		.loc 1 349 0
 545              		@ sp needed
 546              	.LVL31:
 547 0014 10BD     		pop	{r4, pc}
 548              	.LVL32:
 549              	.L35:
 327:Src/stm32f0xx_hal_msp.c **** 
 550              		.loc 1 327 0
 551 0016 0B4A     		ldr	r2, .L37+4
 552 0018 D369     		ldr	r3, [r2, #28]
 553 001a 0121     		movs	r1, #1
 554 001c 8B43     		bics	r3, r1
 555 001e D361     		str	r3, [r2, #28]
 330:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(htim_base->hdma[TIM_DMA_ID_CC3]);
 556              		.loc 1 330 0
 557 0020 406A     		ldr	r0, [r0, #36]
 558              	.LVL33:
 559 0022 FFF7FEFF 		bl	HAL_DMA_DeInit
 560              	.LVL34:
 331:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(htim_base->hdma[TIM_DMA_ID_CC4]);
 561              		.loc 1 331 0
 562 0026 E06A     		ldr	r0, [r4, #44]
 563 0028 FFF7FEFF 		bl	HAL_DMA_DeInit
 564              	.LVL35:
 332:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 565              		.loc 1 332 0
 566 002c 206B     		ldr	r0, [r4, #48]
 567 002e FFF7FEFF 		bl	HAL_DMA_DeInit
 568              	.LVL36:
 569 0032 EFE7     		b	.L32
 570              	.LVL37:
 571              	.L36:
 343:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 572              		.loc 1 343 0
 573 0034 034A     		ldr	r2, .L37+4
 574 0036 D369     		ldr	r3, [r2, #28]
 575 0038 0221     		movs	r1, #2
 576 003a 8B43     		bics	r3, r1
 577 003c D361     		str	r3, [r2, #28]
 578              		.loc 1 349 0
ARM GAS  /tmp/ccYFxM84.s 			page 18


 579 003e E9E7     		b	.L32
 580              	.L38:
 581              		.align	2
 582              	.L37:
 583 0040 00040040 		.word	1073742848
 584 0044 00100240 		.word	1073876992
 585              		.cfi_endproc
 586              	.LFE42:
 588              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 589              		.align	1
 590              		.global	HAL_UART_MspInit
 591              		.syntax unified
 592              		.code	16
 593              		.thumb_func
 594              		.fpu softvfp
 596              	HAL_UART_MspInit:
 597              	.LFB43:
 350:Src/stm32f0xx_hal_msp.c **** 
 351:Src/stm32f0xx_hal_msp.c **** /**
 352:Src/stm32f0xx_hal_msp.c **** * @brief UART MSP Initialization
 353:Src/stm32f0xx_hal_msp.c **** * This function configures the hardware resources used in this example
 354:Src/stm32f0xx_hal_msp.c **** * @param huart: UART handle pointer
 355:Src/stm32f0xx_hal_msp.c **** * @retval None
 356:Src/stm32f0xx_hal_msp.c **** */
 357:Src/stm32f0xx_hal_msp.c **** void HAL_UART_MspInit(UART_HandleTypeDef* huart)
 358:Src/stm32f0xx_hal_msp.c **** {
 598              		.loc 1 358 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 32
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602              	.LVL38:
 603 0000 10B5     		push	{r4, lr}
 604              	.LCFI9:
 605              		.cfi_def_cfa_offset 8
 606              		.cfi_offset 4, -8
 607              		.cfi_offset 14, -4
 608 0002 88B0     		sub	sp, sp, #32
 609              	.LCFI10:
 610              		.cfi_def_cfa_offset 40
 611 0004 0400     		movs	r4, r0
 359:Src/stm32f0xx_hal_msp.c **** 
 360:Src/stm32f0xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 612              		.loc 1 360 0
 613 0006 1422     		movs	r2, #20
 614 0008 0021     		movs	r1, #0
 615 000a 03A8     		add	r0, sp, #12
 616              	.LVL39:
 617 000c FFF7FEFF 		bl	memset
 618              	.LVL40:
 361:Src/stm32f0xx_hal_msp.c ****   if(huart->Instance==USART3)
 619              		.loc 1 361 0
 620 0010 2A4B     		ldr	r3, .L46
 621 0012 2268     		ldr	r2, [r4]
 622 0014 9A42     		cmp	r2, r3
 623 0016 01D0     		beq	.L43
 624              	.L39:
 362:Src/stm32f0xx_hal_msp.c ****   {
ARM GAS  /tmp/ccYFxM84.s 			page 19


 363:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspInit 0 */
 364:Src/stm32f0xx_hal_msp.c **** 
 365:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USART3_MspInit 0 */
 366:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 367:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_USART3_CLK_ENABLE();
 368:Src/stm32f0xx_hal_msp.c ****   
 369:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 370:Src/stm32f0xx_hal_msp.c ****     /**USART3 GPIO Configuration    
 371:Src/stm32f0xx_hal_msp.c ****     PB10     ------> USART3_TX
 372:Src/stm32f0xx_hal_msp.c ****     PB11     ------> USART3_RX 
 373:Src/stm32f0xx_hal_msp.c ****     */
 374:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = IN_TX_Pin|IN_RX_Pin;
 375:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 376:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 377:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 378:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF4_USART3;
 379:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 380:Src/stm32f0xx_hal_msp.c **** 
 381:Src/stm32f0xx_hal_msp.c ****     /* USART3 DMA Init */
 382:Src/stm32f0xx_hal_msp.c ****     /* USART3_RX Init */
 383:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Instance = DMA1_Channel6;
 384:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 385:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 386:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 387:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 388:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 389:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.Mode = DMA_NORMAL;
 390:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_HIGH;
 391:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 392:Src/stm32f0xx_hal_msp.c ****     {
 393:Src/stm32f0xx_hal_msp.c ****       Error_Handler();
 394:Src/stm32f0xx_hal_msp.c ****     }
 395:Src/stm32f0xx_hal_msp.c **** 
 396:Src/stm32f0xx_hal_msp.c ****     __HAL_LINKDMA(huart,hdmarx,hdma_usart3_rx);
 397:Src/stm32f0xx_hal_msp.c **** 
 398:Src/stm32f0xx_hal_msp.c ****     /* USART3_TX Init */
 399:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Instance = DMA1_Channel7;
 400:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 401:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 402:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 403:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 404:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 405:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.Mode = DMA_NORMAL;
 406:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.Priority = DMA_PRIORITY_HIGH;
 407:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 408:Src/stm32f0xx_hal_msp.c ****     {
 409:Src/stm32f0xx_hal_msp.c ****       Error_Handler();
 410:Src/stm32f0xx_hal_msp.c ****     }
 411:Src/stm32f0xx_hal_msp.c **** 
 412:Src/stm32f0xx_hal_msp.c ****     __HAL_LINKDMA(huart,hdmatx,hdma_usart3_tx);
 413:Src/stm32f0xx_hal_msp.c **** 
 414:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspInit 1 */
 415:Src/stm32f0xx_hal_msp.c **** 
 416:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USART3_MspInit 1 */
 417:Src/stm32f0xx_hal_msp.c ****   }
 418:Src/stm32f0xx_hal_msp.c **** 
 419:Src/stm32f0xx_hal_msp.c **** }
ARM GAS  /tmp/ccYFxM84.s 			page 20


 625              		.loc 1 419 0
 626 0018 08B0     		add	sp, sp, #32
 627              		@ sp needed
 628              	.LVL41:
 629 001a 10BD     		pop	{r4, pc}
 630              	.LVL42:
 631              	.L43:
 632              	.LBB9:
 367:Src/stm32f0xx_hal_msp.c ****   
 633              		.loc 1 367 0
 634 001c 284B     		ldr	r3, .L46+4
 635 001e D969     		ldr	r1, [r3, #28]
 636 0020 8022     		movs	r2, #128
 637 0022 D202     		lsls	r2, r2, #11
 638 0024 1143     		orrs	r1, r2
 639 0026 D961     		str	r1, [r3, #28]
 640 0028 D969     		ldr	r1, [r3, #28]
 641 002a 1140     		ands	r1, r2
 642 002c 0191     		str	r1, [sp, #4]
 643 002e 0199     		ldr	r1, [sp, #4]
 644              	.LBE9:
 645              	.LBB10:
 369:Src/stm32f0xx_hal_msp.c ****     /**USART3 GPIO Configuration    
 646              		.loc 1 369 0
 647 0030 5969     		ldr	r1, [r3, #20]
 648 0032 1143     		orrs	r1, r2
 649 0034 5961     		str	r1, [r3, #20]
 650 0036 5B69     		ldr	r3, [r3, #20]
 651 0038 1A40     		ands	r2, r3
 652 003a 0292     		str	r2, [sp, #8]
 653 003c 029B     		ldr	r3, [sp, #8]
 654              	.LBE10:
 374:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 655              		.loc 1 374 0
 656 003e C023     		movs	r3, #192
 657 0040 1B01     		lsls	r3, r3, #4
 658 0042 0393     		str	r3, [sp, #12]
 375:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 659              		.loc 1 375 0
 660 0044 0223     		movs	r3, #2
 661 0046 0493     		str	r3, [sp, #16]
 377:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF4_USART3;
 662              		.loc 1 377 0
 663 0048 0133     		adds	r3, r3, #1
 664 004a 0693     		str	r3, [sp, #24]
 378:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 665              		.loc 1 378 0
 666 004c 0133     		adds	r3, r3, #1
 667 004e 0793     		str	r3, [sp, #28]
 379:Src/stm32f0xx_hal_msp.c **** 
 668              		.loc 1 379 0
 669 0050 03A9     		add	r1, sp, #12
 670 0052 1C48     		ldr	r0, .L46+8
 671 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 672              	.LVL43:
 383:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 673              		.loc 1 383 0
ARM GAS  /tmp/ccYFxM84.s 			page 21


 674 0058 1B48     		ldr	r0, .L46+12
 675 005a 1C4B     		ldr	r3, .L46+16
 676 005c 0360     		str	r3, [r0]
 384:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 677              		.loc 1 384 0
 678 005e 0023     		movs	r3, #0
 679 0060 4360     		str	r3, [r0, #4]
 385:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 680              		.loc 1 385 0
 681 0062 8360     		str	r3, [r0, #8]
 386:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 682              		.loc 1 386 0
 683 0064 8022     		movs	r2, #128
 684 0066 C260     		str	r2, [r0, #12]
 387:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 685              		.loc 1 387 0
 686 0068 0361     		str	r3, [r0, #16]
 388:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.Mode = DMA_NORMAL;
 687              		.loc 1 388 0
 688 006a 4361     		str	r3, [r0, #20]
 389:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_HIGH;
 689              		.loc 1 389 0
 690 006c 8361     		str	r3, [r0, #24]
 390:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 691              		.loc 1 390 0
 692 006e 8023     		movs	r3, #128
 693 0070 9B01     		lsls	r3, r3, #6
 694 0072 C361     		str	r3, [r0, #28]
 391:Src/stm32f0xx_hal_msp.c ****     {
 695              		.loc 1 391 0
 696 0074 FFF7FEFF 		bl	HAL_DMA_Init
 697              	.LVL44:
 698 0078 0028     		cmp	r0, #0
 699 007a 19D1     		bne	.L44
 700              	.L41:
 396:Src/stm32f0xx_hal_msp.c **** 
 701              		.loc 1 396 0
 702 007c 124B     		ldr	r3, .L46+12
 703 007e 6366     		str	r3, [r4, #100]
 704 0080 5C62     		str	r4, [r3, #36]
 399:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 705              		.loc 1 399 0
 706 0082 1348     		ldr	r0, .L46+20
 707 0084 134B     		ldr	r3, .L46+24
 708 0086 0360     		str	r3, [r0]
 400:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 709              		.loc 1 400 0
 710 0088 1023     		movs	r3, #16
 711 008a 4360     		str	r3, [r0, #4]
 401:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 712              		.loc 1 401 0
 713 008c 0023     		movs	r3, #0
 714 008e 8360     		str	r3, [r0, #8]
 402:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 715              		.loc 1 402 0
 716 0090 8022     		movs	r2, #128
 717 0092 C260     		str	r2, [r0, #12]
ARM GAS  /tmp/ccYFxM84.s 			page 22


 403:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 718              		.loc 1 403 0
 719 0094 0361     		str	r3, [r0, #16]
 404:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.Mode = DMA_NORMAL;
 720              		.loc 1 404 0
 721 0096 4361     		str	r3, [r0, #20]
 405:Src/stm32f0xx_hal_msp.c ****     hdma_usart3_tx.Init.Priority = DMA_PRIORITY_HIGH;
 722              		.loc 1 405 0
 723 0098 8361     		str	r3, [r0, #24]
 406:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 724              		.loc 1 406 0
 725 009a 8023     		movs	r3, #128
 726 009c 9B01     		lsls	r3, r3, #6
 727 009e C361     		str	r3, [r0, #28]
 407:Src/stm32f0xx_hal_msp.c ****     {
 728              		.loc 1 407 0
 729 00a0 FFF7FEFF 		bl	HAL_DMA_Init
 730              	.LVL45:
 731 00a4 0028     		cmp	r0, #0
 732 00a6 06D1     		bne	.L45
 733              	.L42:
 412:Src/stm32f0xx_hal_msp.c **** 
 734              		.loc 1 412 0
 735 00a8 094B     		ldr	r3, .L46+20
 736 00aa 2366     		str	r3, [r4, #96]
 737 00ac 5C62     		str	r4, [r3, #36]
 738              		.loc 1 419 0
 739 00ae B3E7     		b	.L39
 740              	.L44:
 393:Src/stm32f0xx_hal_msp.c ****     }
 741              		.loc 1 393 0
 742 00b0 FFF7FEFF 		bl	Error_Handler
 743              	.LVL46:
 744 00b4 E2E7     		b	.L41
 745              	.L45:
 409:Src/stm32f0xx_hal_msp.c ****     }
 746              		.loc 1 409 0
 747 00b6 FFF7FEFF 		bl	Error_Handler
 748              	.LVL47:
 749 00ba F5E7     		b	.L42
 750              	.L47:
 751              		.align	2
 752              	.L46:
 753 00bc 00480040 		.word	1073760256
 754 00c0 00100240 		.word	1073876992
 755 00c4 00040048 		.word	1207960576
 756 00c8 00000000 		.word	hdma_usart3_rx
 757 00cc 6C000240 		.word	1073873004
 758 00d0 00000000 		.word	hdma_usart3_tx
 759 00d4 80000240 		.word	1073873024
 760              		.cfi_endproc
 761              	.LFE43:
 763              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 764              		.align	1
 765              		.global	HAL_UART_MspDeInit
 766              		.syntax unified
 767              		.code	16
ARM GAS  /tmp/ccYFxM84.s 			page 23


 768              		.thumb_func
 769              		.fpu softvfp
 771              	HAL_UART_MspDeInit:
 772              	.LFB44:
 420:Src/stm32f0xx_hal_msp.c **** 
 421:Src/stm32f0xx_hal_msp.c **** /**
 422:Src/stm32f0xx_hal_msp.c **** * @brief UART MSP De-Initialization
 423:Src/stm32f0xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 424:Src/stm32f0xx_hal_msp.c **** * @param huart: UART handle pointer
 425:Src/stm32f0xx_hal_msp.c **** * @retval None
 426:Src/stm32f0xx_hal_msp.c **** */
 427:Src/stm32f0xx_hal_msp.c **** 
 428:Src/stm32f0xx_hal_msp.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* huart)
 429:Src/stm32f0xx_hal_msp.c **** {
 773              		.loc 1 429 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              	.LVL48:
 778 0000 10B5     		push	{r4, lr}
 779              	.LCFI11:
 780              		.cfi_def_cfa_offset 8
 781              		.cfi_offset 4, -8
 782              		.cfi_offset 14, -4
 783 0002 0400     		movs	r4, r0
 430:Src/stm32f0xx_hal_msp.c **** 
 431:Src/stm32f0xx_hal_msp.c ****   if(huart->Instance==USART3)
 784              		.loc 1 431 0
 785 0004 0A4B     		ldr	r3, .L51
 786 0006 0268     		ldr	r2, [r0]
 787 0008 9A42     		cmp	r2, r3
 788 000a 00D0     		beq	.L50
 789              	.LVL49:
 790              	.L48:
 432:Src/stm32f0xx_hal_msp.c ****   {
 433:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspDeInit 0 */
 434:Src/stm32f0xx_hal_msp.c **** 
 435:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USART3_MspDeInit 0 */
 436:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 437:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_USART3_CLK_DISABLE();
 438:Src/stm32f0xx_hal_msp.c ****   
 439:Src/stm32f0xx_hal_msp.c ****     /**USART3 GPIO Configuration    
 440:Src/stm32f0xx_hal_msp.c ****     PB10     ------> USART3_TX
 441:Src/stm32f0xx_hal_msp.c ****     PB11     ------> USART3_RX 
 442:Src/stm32f0xx_hal_msp.c ****     */
 443:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOB, IN_TX_Pin|IN_RX_Pin);
 444:Src/stm32f0xx_hal_msp.c **** 
 445:Src/stm32f0xx_hal_msp.c ****     /* USART3 DMA DeInit */
 446:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(huart->hdmarx);
 447:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(huart->hdmatx);
 448:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspDeInit 1 */
 449:Src/stm32f0xx_hal_msp.c **** 
 450:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END USART3_MspDeInit 1 */
 451:Src/stm32f0xx_hal_msp.c ****   }
 452:Src/stm32f0xx_hal_msp.c **** 
 453:Src/stm32f0xx_hal_msp.c **** }
 791              		.loc 1 453 0
ARM GAS  /tmp/ccYFxM84.s 			page 24


 792              		@ sp needed
 793              	.LVL50:
 794 000c 10BD     		pop	{r4, pc}
 795              	.LVL51:
 796              	.L50:
 437:Src/stm32f0xx_hal_msp.c ****   
 797              		.loc 1 437 0
 798 000e 094A     		ldr	r2, .L51+4
 799 0010 D369     		ldr	r3, [r2, #28]
 800 0012 0949     		ldr	r1, .L51+8
 801 0014 0B40     		ands	r3, r1
 802 0016 D361     		str	r3, [r2, #28]
 443:Src/stm32f0xx_hal_msp.c **** 
 803              		.loc 1 443 0
 804 0018 C021     		movs	r1, #192
 805 001a 0901     		lsls	r1, r1, #4
 806 001c 0748     		ldr	r0, .L51+12
 807              	.LVL52:
 808 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 809              	.LVL53:
 446:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(huart->hdmatx);
 810              		.loc 1 446 0
 811 0022 606E     		ldr	r0, [r4, #100]
 812 0024 FFF7FEFF 		bl	HAL_DMA_DeInit
 813              	.LVL54:
 447:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspDeInit 1 */
 814              		.loc 1 447 0
 815 0028 206E     		ldr	r0, [r4, #96]
 816 002a FFF7FEFF 		bl	HAL_DMA_DeInit
 817              	.LVL55:
 818              		.loc 1 453 0
 819 002e EDE7     		b	.L48
 820              	.L52:
 821              		.align	2
 822              	.L51:
 823 0030 00480040 		.word	1073760256
 824 0034 00100240 		.word	1073876992
 825 0038 FFFFFBFF 		.word	-262145
 826 003c 00040048 		.word	1207960576
 827              		.cfi_endproc
 828              	.LFE44:
 830              		.text
 831              	.Letext0:
 832              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 833              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 834              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 835              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 836              		.file 6 "/usr/arm-none-eabi/include/sys/lock.h"
 837              		.file 7 "/usr/arm-none-eabi/include/sys/_types.h"
 838              		.file 8 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 839              		.file 9 "/usr/arm-none-eabi/include/sys/reent.h"
 840              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 841              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 842              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 843              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 844              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 845              		.file 15 "Inc/main.h"
ARM GAS  /tmp/ccYFxM84.s 			page 25


 846              		.file 16 "<built-in>"
ARM GAS  /tmp/ccYFxM84.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_msp.c
     /tmp/ccYFxM84.s:16     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccYFxM84.s:23     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccYFxM84.s:65     .text.HAL_MspInit:000000000000002c $d
     /tmp/ccYFxM84.s:70     .text.HAL_TIM_Encoder_MspInit:0000000000000000 $t
     /tmp/ccYFxM84.s:77     .text.HAL_TIM_Encoder_MspInit:0000000000000000 HAL_TIM_Encoder_MspInit
     /tmp/ccYFxM84.s:158    .text.HAL_TIM_Encoder_MspInit:000000000000005c $d
     /tmp/ccYFxM84.s:164    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccYFxM84.s:171    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccYFxM84.s:361    .text.HAL_TIM_Base_MspInit:00000000000000e8 $d
     /tmp/ccYFxM84.s:373    .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccYFxM84.s:380    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccYFxM84.s:448    .text.HAL_TIM_MspPostInit:0000000000000048 $d
     /tmp/ccYFxM84.s:455    .text.HAL_TIM_Encoder_MspDeInit:0000000000000000 $t
     /tmp/ccYFxM84.s:462    .text.HAL_TIM_Encoder_MspDeInit:0000000000000000 HAL_TIM_Encoder_MspDeInit
     /tmp/ccYFxM84.s:505    .text.HAL_TIM_Encoder_MspDeInit:0000000000000024 $d
     /tmp/ccYFxM84.s:512    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccYFxM84.s:519    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccYFxM84.s:583    .text.HAL_TIM_Base_MspDeInit:0000000000000040 $d
     /tmp/ccYFxM84.s:589    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccYFxM84.s:596    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccYFxM84.s:753    .text.HAL_UART_MspInit:00000000000000bc $d
     /tmp/ccYFxM84.s:764    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccYFxM84.s:771    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccYFxM84.s:823    .text.HAL_UART_MspDeInit:0000000000000030 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_Init
HAL_DMA_Init
Error_Handler
hdma_tim2_ch1
hdma_tim2_ch4
hdma_tim2_ch3
HAL_GPIO_DeInit
HAL_DMA_DeInit
hdma_usart3_rx
hdma_usart3_tx
