ARM GAS  /tmp/ccOLnUHF.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_uart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	UART_EndTxTransfer:
  23              	.LFB78:
  24              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @file    stm32f0xx_hal_uart.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   [..]
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 RXNE interrupt and Error Interrupts) are managed using the macros
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit and receive 
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
ARM GAS  /tmp/ccOLnUHF.s 			page 2


  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_UART_Init() API.
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    [..]
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (@) These APIs(HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_MultiProcessor_Init(),
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    [..]
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    [..] Three operation modes are available within this driver :     
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** Polling mode IO operation ***
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      =================================
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..]    
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit() 
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** Interrupt mode IO operation ***    
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      ===================================
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..]    
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback          
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** DMA mode IO operation ***    
ARM GAS  /tmp/ccOLnUHF.s 			page 3


  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      ==============================
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..] 
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback          
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()      
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()  
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()      
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** UART HAL driver macros list ***
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      ============================================= 
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..]
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral     
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..] 
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @endverbatim
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @attention
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      without specific prior written permission.
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /tmp/ccOLnUHF.s 			page 4


 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #include "stm32f0xx_hal.h"
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup STM32F0xx_HAL_Driver
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccOLnUHF.s 			page 5


 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** ===============================================================================
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in asynchronous mode.
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Baud Rate
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Word Length
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Stop Bit
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Parity
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Hardware flow control
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Receiver/transmitter modes
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Over Sampling Method
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) One-Bit Sampling Method
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) data logical level inversion
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX and TX pins swap
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX overrun detection disabling
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA disabling on RX error
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) MSB first on communication line
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) auto Baud rate detection
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init() and HAL_MultiProcessor_Init()
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     API follow respectively the UART asynchronous, UART Half duplex and multiprocessor mode
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual).
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /*
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   Additional Table:  If the parity is enabled, then the MSB bit of the data written
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      in the data register is transmitted but is changed by the parity bit.
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      According to device capability (support or not of 7-bit word length),
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      frame length is either defined by the M bit (8-bits or 9-bits)
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      or by the M1 and M0 bits (7-bit, 8-bit or 9-bit).
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      Possible UART frame formats are as listed in the following table:
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       Table 1. UART frame format.             
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |       M bit       |  PCE bit  |             UART frame                |
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         0         |     0     |    | SB |    8-bit data   | STB |     |
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         0         |     1     |    | SB | 7-bit data | PB | STB |     |
ARM GAS  /tmp/ccOLnUHF.s 			page 6


 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         1         |     0     |    | SB |    9-bit data   | STB |     |
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         1         |     1     |    | SB | 8-bit data | PB | STB |     |
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    0    |     0     |    | SB |    8 bit data   | STB |     |
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    0    |     1     |    | SB | 7 bit data | PB | STB |     |
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    1    |     0     |    | SB |    9 bit data   | STB |     |
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    1    |     1     |    | SB | 8 bit data | PB | STB |     |
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    1    |    0    |     0     |    | SB |    7 bit data   | STB |     |
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    1    |    0    |     1     |    | SB | 6 bit data | PB | STB |     |
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/ccOLnUHF.s 			page 7


 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Peripheral */
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccOLnUHF.s 			page 8


 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check UART instance */
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), and IREN (if IrDA is supported)  bits in the USART_CR3 regist
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_SCEN);
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_IREN);
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Peripheral */
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
ARM GAS  /tmp/ccOLnUHF.s 			page 9


 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Address UART node address (4-, 6-, 7- or 8-bit long).
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param WakeUpMethod specifies the UART wakeup method.
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the wake up method parameter */
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccOLnUHF.s 			page 10


 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported) bits in the USART_CR3 r
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Peripheral */
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccOLnUHF.s 			page 11


 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DeInit the low level hardware */
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlock */
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
ARM GAS  /tmp/ccOLnUHF.s 			page 12


 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### IO operation functions #####
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and Half duplex data transfers.
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) There are two mode of transfer:
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode.
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            after finishing transfer.
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (++) Non-Blocking mode: The communication is performed using Interrupts
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The end of the data processing will be indicated through the
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            using DMA mode.
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Blocking mode API's are :
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Receive()
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_DMAPause()
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_DMAResume()
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_DMAStop()
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_TxHalfCpltCallback()
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_RxHalfCpltCallback()
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Abort()
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit()
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortReceive()
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Abort_IT()
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit_IT()
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortReceive_IT()
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortCpltCallback()
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortTransmitCpltCallback()
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortReceiveCpltCallback()
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
ARM GAS  /tmp/ccOLnUHF.s 			page 13


 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         Errors are handled as follows :
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Error is considered as Recoverable and non blocking : Transfer could go till end, but 
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in In
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              Received character is then retrieved and stored in Rx buffer, Error code is set to all
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UA
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              If user wants to abort it, Abort services should be called by user.
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Error is considered as Blocking : Transfer could not be completed properly and is abor
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() u
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData Pointer to data buffer.
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size Amount of data to be sent.
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout Timeout duration.
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart = 0U;
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/ccOLnUHF.s 			page 14


 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tickstart = HAL_GetTick();
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(huart->TxXferCount > 0)
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData += 2;
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_TIMEOUT;
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be received.
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout Timeout duration.
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
ARM GAS  /tmp/ccOLnUHF.s 			page 15


 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t uhMask;
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart = 0;
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tickstart = HAL_GetTick();
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* as long as data have to be received */
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxXferCount--;
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData +=2U;
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
ARM GAS  /tmp/ccOLnUHF.s 			page 16


 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be sent.
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/ccOLnUHF.s 			page 17


 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be received.
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
ARM GAS  /tmp/ccOLnUHF.s 			page 18


 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be sent.
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled by DMA from halfword frontier). Depending on compilation 
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy into TDR will be 
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
ARM GAS  /tmp/ccOLnUHF.s 			page 19


1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA error callback */
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA abort callback */
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, S
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be received.
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled by DMA from halfword frontier). Depending on compilat
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
ARM GAS  /tmp/ccOLnUHF.s 			page 20


1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy from RDR will be 
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA error callback */
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA abort callback */
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA channel */
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPtr, S
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccOLnUHF.s 			page 21


1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
ARM GAS  /tmp/ccOLnUHF.s 			page 22


1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback: 
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete  
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of 
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
ARM GAS  /tmp/ccOLnUHF.s 			page 23


1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
ARM GAS  /tmp/ccOLnUHF.s 			page 24


1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Tx transfer counter */
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/ccOLnUHF.s 			page 25


1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Rx transfer counter */
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
ARM GAS  /tmp/ccOLnUHF.s 			page 26


1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
1407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      before any call to DMA Abort functions */
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Otherwise, set it to NULL */
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Otherwise, set it to NULL */
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA TX */
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
ARM GAS  /tmp/ccOLnUHF.s 			page 27


1460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 0U;
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA RX */
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 1U;
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 0U;
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (abortcplt == 1U)
1492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset errorCode */
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/ccOLnUHF.s 			page 28


1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA TX */
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Reset Tx transfer counter */
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount = 0U; 
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Tx transfer counter */
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
ARM GAS  /tmp/ccOLnUHF.s 			page 29


1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA RX */
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Reset Rx transfer counter */
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxXferCount = 0U; 
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
1625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
ARM GAS  /tmp/ccOLnUHF.s 			page 30


1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Rx transfer counter */
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U; 
1637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Handle UART interrupt request.
1653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr3its;
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t errorflags;
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If no error occurs */
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (errorflags == RESET)
1666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       UART_Receive_IT(huart);
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }  
1674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If some errors occur */
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   cr3its = READ_REG(huart->Instance->CR3);
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(   (errorflags != RESET)
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
1680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
1685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
ARM GAS  /tmp/ccOLnUHF.s 			page 31


1688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
1693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     
1705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
1708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         UART_Receive_IT(huart);
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          consider error as blocking */
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {  
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
1741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccOLnUHF.s 			page 32


1745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Abort DMA RX */
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             {
1748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             }
1751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
1752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           else
1753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Call user error callback */
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         else
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Call user error callback */
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Error is notified to user through user error callback */
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   } /* End if some error occurs */
1775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
1777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(((isrflags & USART_ISR_WUF) != RESET) && ((cr3its & USART_CR3_WUFIE) != RESET))
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_WUF);
1781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_Transmit_IT(huart);
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
1801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccOLnUHF.s 			page 33


1802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
1807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
1832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Rx Transfer completed callback.
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
1847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  /tmp/ccOLnUHF.s 			page 34


1859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
1862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief UART error callback.
1867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
1877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccOLnUHF.s 			page 35


1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
1927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief   UART control functions
1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
1934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
1936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
1944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
1945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Enable UART in mute mode (does not mean UART enters mute mode;
1949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
1950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
1962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
1970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
1971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccOLnUHF.s 			page 36


1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
1983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status.
2028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccOLnUHF.s 			page 37


2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
2053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  *
2054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
2055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
2056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
2058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
2059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides functions allowing to :
2060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle state.
2061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle error code
2062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
2064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Return the UART handle state.
2069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL state
2072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp1 = huart->gState;
2077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp2 = huart->RxState;
2078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval UART Error Code
ARM GAS  /tmp/ccOLnUHF.s 			page 38


2087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return huart->ErrorCode;
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
2112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
2113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
2114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000U;
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
2118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
2131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
2132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
2133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
2134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
2137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    * to huart->Init.StopBits value */
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
ARM GAS  /tmp/ccOLnUHF.s 			page 39


2144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure
2145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
2146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
2147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *   to huart->Init.OneBitSampling */
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
2151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
2159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
2175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0U;
2179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
2180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
2181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
2185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
2191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
2194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
2197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
2200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
ARM GAS  /tmp/ccOLnUHF.s 			page 40


2201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return ret;
2206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
2221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
2224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
2228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
2231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure data inversion */
2234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
2235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
2238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
2242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
2245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
2249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
2252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
2255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
2256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
ARM GAS  /tmp/ccOLnUHF.s 			page 41


2258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
2259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
2263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
2265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
2267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
2268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
2269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
2271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
2272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
2277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
2280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Check the UART Idle State.
2285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
2291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart = 0U;
2292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
2293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
2298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tickstart = HAL_GetTick();
2300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and REACK bits in ISR are checked only when available (not available on all F0 devices).
2302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      Bits are defined for some specific devices, and are available only for UART instances supporti
2303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (IS_UART_WAKEUP_FROMSTOP_INSTANCE(huart->Instance))
2305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check if the Transmitter is enabled */
2307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
2308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Wait until TEACK flag is set */
2310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VAL
2311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Timeout occurred */
2313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
2314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
ARM GAS  /tmp/ccOLnUHF.s 			page 42


2315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check if the Receiver is enabled */
2318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
2319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Wait until REACK flag is set */
2321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VAL
2322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Timeout occurred */
2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
2325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
2329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART State */
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
2342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Flag Specifies the UART flag to check
2344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Status Flag status (SET or RESET)
2345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Tickstart Tick start value
2346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Timeout Timeout duration
2347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
2350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Wait until flag is set */
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
2353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check for the Timeout */
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
2358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Process Unlocked */
2367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
2369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccOLnUHF.s 			page 43


2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
  25              		.loc 1 2382 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
2383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  31              		.loc 1 2384 0
  32 0000 0268     		ldr	r2, [r0]
  33 0002 1368     		ldr	r3, [r2]
  34 0004 C021     		movs	r1, #192
  35 0006 8B43     		bics	r3, r1
  36 0008 1360     		str	r3, [r2]
2385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  37              		.loc 1 2387 0
  38 000a 6923     		movs	r3, #105
  39 000c 2022     		movs	r2, #32
  40 000e C254     		strb	r2, [r0, r3]
2388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
  41              		.loc 1 2388 0
  42              		@ sp needed
  43 0010 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE78:
  47              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.code	16
  51              		.thumb_func
  52              		.fpu softvfp
  54              	UART_EndRxTransfer:
  55              	.LFB79:
2389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
  56              		.loc 1 2397 0
  57              		.cfi_startproc
ARM GAS  /tmp/ccOLnUHF.s 			page 44


  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61              	.LVL1:
2398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  62              		.loc 1 2399 0
  63 0000 0268     		ldr	r2, [r0]
  64 0002 1368     		ldr	r3, [r2]
  65 0004 0649     		ldr	r1, .L3
  66 0006 0B40     		ands	r3, r1
  67 0008 1360     		str	r3, [r2]
2400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  68              		.loc 1 2400 0
  69 000a 0268     		ldr	r2, [r0]
  70 000c 9368     		ldr	r3, [r2, #8]
  71 000e 2331     		adds	r1, r1, #35
  72 0010 FF31     		adds	r1, r1, #255
  73 0012 8B43     		bics	r3, r1
  74 0014 9360     		str	r3, [r2, #8]
2401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  75              		.loc 1 2403 0
  76 0016 6A23     		movs	r3, #106
  77 0018 2022     		movs	r2, #32
  78 001a C254     		strb	r2, [r0, r3]
2404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
  79              		.loc 1 2404 0
  80              		@ sp needed
  81 001c 7047     		bx	lr
  82              	.L4:
  83 001e C046     		.align	2
  84              	.L3:
  85 0020 DFFEFFFF 		.word	-289
  86              		.cfi_endproc
  87              	.LFE79:
  89              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  90              		.align	1
  91              		.weak	HAL_UART_MspInit
  92              		.syntax unified
  93              		.code	16
  94              		.thumb_func
  95              		.fpu softvfp
  97              	HAL_UART_MspInit:
  98              	.LFB41:
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
  99              		.loc 1 574 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.LVL2:
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 105              		.loc 1 581 0
 106              		@ sp needed
 107 0000 7047     		bx	lr
ARM GAS  /tmp/ccOLnUHF.s 			page 45


 108              		.cfi_endproc
 109              	.LFE41:
 111              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 112              		.align	1
 113              		.weak	HAL_UART_MspDeInit
 114              		.syntax unified
 115              		.code	16
 116              		.thumb_func
 117              		.fpu softvfp
 119              	HAL_UART_MspDeInit:
 120              	.LFB42:
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 121              		.loc 1 589 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              	.LVL3:
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 127              		.loc 1 596 0
 128              		@ sp needed
 129 0000 7047     		bx	lr
 130              		.cfi_endproc
 131              	.LFE42:
 133              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 134              		.align	1
 135              		.global	HAL_UART_DeInit
 136              		.syntax unified
 137              		.code	16
 138              		.thumb_func
 139              		.fpu softvfp
 141              	HAL_UART_DeInit:
 142              	.LFB40:
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 143              		.loc 1 536 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              	.LVL4:
 148 0000 70B5     		push	{r4, r5, r6, lr}
 149              	.LCFI0:
 150              		.cfi_def_cfa_offset 16
 151              		.cfi_offset 4, -16
 152              		.cfi_offset 5, -12
 153              		.cfi_offset 6, -8
 154              		.cfi_offset 14, -4
 155 0002 041E     		subs	r4, r0, #0
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 156              		.loc 1 538 0
 157 0004 18D0     		beq	.L9
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 158              		.loc 1 546 0
 159 0006 6926     		movs	r6, #105
 160 0008 2423     		movs	r3, #36
 161 000a 8355     		strb	r3, [r0, r6]
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 162              		.loc 1 549 0
ARM GAS  /tmp/ccOLnUHF.s 			page 46


 163 000c 0268     		ldr	r2, [r0]
 164 000e 1368     		ldr	r3, [r2]
 165 0010 0121     		movs	r1, #1
 166 0012 8B43     		bics	r3, r1
 167 0014 1360     		str	r3, [r2]
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 168              		.loc 1 551 0
 169 0016 0368     		ldr	r3, [r0]
 170 0018 0025     		movs	r5, #0
 171 001a 1D60     		str	r5, [r3]
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 172              		.loc 1 552 0
 173 001c 0368     		ldr	r3, [r0]
 174 001e 5D60     		str	r5, [r3, #4]
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 175              		.loc 1 553 0
 176 0020 0368     		ldr	r3, [r0]
 177 0022 9D60     		str	r5, [r3, #8]
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 178              		.loc 1 556 0
 179 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 180              	.LVL5:
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 181              		.loc 1 558 0
 182 0028 E566     		str	r5, [r4, #108]
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 183              		.loc 1 559 0
 184 002a A555     		strb	r5, [r4, r6]
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 185              		.loc 1 560 0
 186 002c 6A23     		movs	r3, #106
 187 002e E554     		strb	r5, [r4, r3]
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 188              		.loc 1 563 0
 189 0030 023B     		subs	r3, r3, #2
 190 0032 E554     		strb	r5, [r4, r3]
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 191              		.loc 1 565 0
 192 0034 0020     		movs	r0, #0
 193              	.L8:
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 194              		.loc 1 566 0
 195              		@ sp needed
 196              	.LVL6:
 197 0036 70BD     		pop	{r4, r5, r6, pc}
 198              	.LVL7:
 199              	.L9:
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 200              		.loc 1 540 0
 201 0038 0120     		movs	r0, #1
 202              	.LVL8:
 203 003a FCE7     		b	.L8
 204              		.cfi_endproc
 205              	.LFE40:
 207              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 208              		.align	1
 209              		.global	HAL_UART_Transmit_IT
ARM GAS  /tmp/ccOLnUHF.s 			page 47


 210              		.syntax unified
 211              		.code	16
 212              		.thumb_func
 213              		.fpu softvfp
 215              	HAL_UART_Transmit_IT:
 216              	.LFB45:
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 217              		.loc 1 862 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              	.LVL9:
 222 0000 10B5     		push	{r4, lr}
 223              	.LCFI1:
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 4, -8
 226              		.cfi_offset 14, -4
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 227              		.loc 1 864 0
 228 0002 6923     		movs	r3, #105
 229 0004 C35C     		ldrb	r3, [r0, r3]
 230 0006 202B     		cmp	r3, #32
 231 0008 26D1     		bne	.L13
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 232              		.loc 1 866 0
 233 000a 0029     		cmp	r1, #0
 234 000c 26D0     		beq	.L14
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 235              		.loc 1 866 0 is_stmt 0 discriminator 1
 236 000e 002A     		cmp	r2, #0
 237 0010 26D0     		beq	.L15
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 238              		.loc 1 874 0 is_stmt 1
 239 0012 8023     		movs	r3, #128
 240 0014 5B01     		lsls	r3, r3, #5
 241 0016 8468     		ldr	r4, [r0, #8]
 242 0018 9C42     		cmp	r4, r3
 243 001a 16D0     		beq	.L18
 244              	.L12:
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 245              		.loc 1 883 0
 246 001c 6823     		movs	r3, #104
 247 001e C35C     		ldrb	r3, [r0, r3]
 248 0020 012B     		cmp	r3, #1
 249 0022 1FD0     		beq	.L17
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 250              		.loc 1 885 0 discriminator 2
 251 0024 C164     		str	r1, [r0, #76]
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 252              		.loc 1 886 0 discriminator 2
 253 0026 5023     		movs	r3, #80
 254 0028 C252     		strh	r2, [r0, r3]
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 255              		.loc 1 887 0 discriminator 2
 256 002a 0233     		adds	r3, r3, #2
 257 002c C252     		strh	r2, [r0, r3]
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
ARM GAS  /tmp/ccOLnUHF.s 			page 48


 258              		.loc 1 889 0 discriminator 2
 259 002e 0023     		movs	r3, #0
 260 0030 C366     		str	r3, [r0, #108]
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 261              		.loc 1 890 0 discriminator 2
 262 0032 6922     		movs	r2, #105
 263              	.LVL10:
 264 0034 2121     		movs	r1, #33
 265              	.LVL11:
 266 0036 8154     		strb	r1, [r0, r2]
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 267              		.loc 1 893 0 discriminator 2
 268 0038 013A     		subs	r2, r2, #1
 269 003a 8354     		strb	r3, [r0, r2]
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 270              		.loc 1 896 0 discriminator 2
 271 003c 0268     		ldr	r2, [r0]
 272 003e 1368     		ldr	r3, [r2]
 273 0040 5F31     		adds	r1, r1, #95
 274 0042 0B43     		orrs	r3, r1
 275 0044 1360     		str	r3, [r2]
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 276              		.loc 1 898 0 discriminator 2
 277 0046 0020     		movs	r0, #0
 278              	.LVL12:
 279 0048 07E0     		b	.L11
 280              	.LVL13:
 281              	.L18:
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 282              		.loc 1 874 0 discriminator 1
 283 004a 0369     		ldr	r3, [r0, #16]
 284 004c 002B     		cmp	r3, #0
 285 004e E5D1     		bne	.L12
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 286              		.loc 1 876 0
 287 0050 CB07     		lsls	r3, r1, #31
 288 0052 E3D5     		bpl	.L12
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 289              		.loc 1 878 0
 290 0054 0120     		movs	r0, #1
 291              	.LVL14:
 292 0056 00E0     		b	.L11
 293              	.LVL15:
 294              	.L13:
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 295              		.loc 1 902 0
 296 0058 0220     		movs	r0, #2
 297              	.LVL16:
 298              	.L11:
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 299              		.loc 1 904 0
 300              		@ sp needed
 301 005a 10BD     		pop	{r4, pc}
 302              	.LVL17:
 303              	.L14:
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 304              		.loc 1 868 0
ARM GAS  /tmp/ccOLnUHF.s 			page 49


 305 005c 0120     		movs	r0, #1
 306              	.LVL18:
 307 005e FCE7     		b	.L11
 308              	.LVL19:
 309              	.L15:
 310 0060 0120     		movs	r0, #1
 311              	.LVL20:
 312 0062 FAE7     		b	.L11
 313              	.LVL21:
 314              	.L17:
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 315              		.loc 1 883 0
 316 0064 0220     		movs	r0, #2
 317              	.LVL22:
 318 0066 F8E7     		b	.L11
 319              		.cfi_endproc
 320              	.LFE45:
 322              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 323              		.align	1
 324              		.global	HAL_UART_Receive_IT
 325              		.syntax unified
 326              		.code	16
 327              		.thumb_func
 328              		.fpu softvfp
 330              	HAL_UART_Receive_IT:
 331              	.LFB46:
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 332              		.loc 1 918 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              	.LVL23:
 337 0000 30B5     		push	{r4, r5, lr}
 338              	.LCFI2:
 339              		.cfi_def_cfa_offset 12
 340              		.cfi_offset 4, -12
 341              		.cfi_offset 5, -8
 342              		.cfi_offset 14, -4
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 343              		.loc 1 920 0
 344 0002 6A23     		movs	r3, #106
 345 0004 C35C     		ldrb	r3, [r0, r3]
 346 0006 202B     		cmp	r3, #32
 347 0008 5AD1     		bne	.L28
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 348              		.loc 1 922 0
 349 000a 0029     		cmp	r1, #0
 350 000c 5AD0     		beq	.L29
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 351              		.loc 1 922 0 is_stmt 0 discriminator 1
 352 000e 002A     		cmp	r2, #0
 353 0010 5AD0     		beq	.L30
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 354              		.loc 1 930 0 is_stmt 1
 355 0012 8368     		ldr	r3, [r0, #8]
 356 0014 8024     		movs	r4, #128
 357 0016 6401     		lsls	r4, r4, #5
ARM GAS  /tmp/ccOLnUHF.s 			page 50


 358 0018 A342     		cmp	r3, r4
 359 001a 18D0     		beq	.L33
 360              	.L21:
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 361              		.loc 1 939 0
 362 001c 6824     		movs	r4, #104
 363 001e 045D     		ldrb	r4, [r0, r4]
 364 0020 012C     		cmp	r4, #1
 365 0022 53D0     		beq	.L32
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 366              		.loc 1 939 0 is_stmt 0 discriminator 2
 367 0024 6824     		movs	r4, #104
 368 0026 0125     		movs	r5, #1
 369 0028 0555     		strb	r5, [r0, r4]
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 370              		.loc 1 941 0 is_stmt 1 discriminator 2
 371 002a 4165     		str	r1, [r0, #84]
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 372              		.loc 1 942 0 discriminator 2
 373 002c 5821     		movs	r1, #88
 374              	.LVL24:
 375 002e 4252     		strh	r2, [r0, r1]
 376              	.LVL25:
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 377              		.loc 1 943 0 discriminator 2
 378 0030 0231     		adds	r1, r1, #2
 379 0032 4252     		strh	r2, [r0, r1]
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 380              		.loc 1 946 0 discriminator 2
 381 0034 8022     		movs	r2, #128
 382              	.LVL26:
 383 0036 5201     		lsls	r2, r2, #5
 384 0038 9342     		cmp	r3, r2
 385 003a 0FD0     		beq	.L34
 386 003c 002B     		cmp	r3, #0
 387 003e 1CD1     		bne	.L25
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 388              		.loc 1 946 0 is_stmt 0 discriminator 5
 389 0040 0369     		ldr	r3, [r0, #16]
 390 0042 002B     		cmp	r3, #0
 391 0044 15D1     		bne	.L26
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 392              		.loc 1 946 0 discriminator 7
 393 0046 5C33     		adds	r3, r3, #92
 394 0048 FF22     		movs	r2, #255
 395 004a C252     		strh	r2, [r0, r3]
 396              	.LVL27:
 397 004c 19E0     		b	.L24
 398              	.LVL28:
 399              	.L33:
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 400              		.loc 1 930 0 is_stmt 1 discriminator 1
 401 004e 0469     		ldr	r4, [r0, #16]
 402 0050 002C     		cmp	r4, #0
 403 0052 E3D1     		bne	.L21
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 404              		.loc 1 932 0
ARM GAS  /tmp/ccOLnUHF.s 			page 51


 405 0054 CC07     		lsls	r4, r1, #31
 406 0056 E1D5     		bpl	.L21
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 407              		.loc 1 934 0
 408 0058 0120     		movs	r0, #1
 409              	.LVL29:
 410 005a 32E0     		b	.L20
 411              	.LVL30:
 412              	.L34:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 413              		.loc 1 946 0 discriminator 1
 414 005c 0369     		ldr	r3, [r0, #16]
 415 005e 002B     		cmp	r3, #0
 416 0060 03D1     		bne	.L23
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 417              		.loc 1 946 0 is_stmt 0 discriminator 3
 418 0062 5C33     		adds	r3, r3, #92
 419 0064 1A4A     		ldr	r2, .L36
 420 0066 C252     		strh	r2, [r0, r3]
 421              	.LVL31:
 422 0068 0BE0     		b	.L24
 423              	.LVL32:
 424              	.L23:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 425              		.loc 1 946 0 discriminator 4
 426 006a 5C23     		movs	r3, #92
 427 006c FF22     		movs	r2, #255
 428 006e C252     		strh	r2, [r0, r3]
 429              	.LVL33:
 430 0070 07E0     		b	.L24
 431              	.LVL34:
 432              	.L26:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 433              		.loc 1 946 0 discriminator 8
 434 0072 5C23     		movs	r3, #92
 435 0074 7F22     		movs	r2, #127
 436 0076 C252     		strh	r2, [r0, r3]
 437              	.LVL35:
 438 0078 03E0     		b	.L24
 439              	.LVL36:
 440              	.L25:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 441              		.loc 1 946 0 discriminator 6
 442 007a 8022     		movs	r2, #128
 443 007c 5205     		lsls	r2, r2, #21
 444 007e 9342     		cmp	r3, r2
 445 0080 13D0     		beq	.L35
 446              	.LVL37:
 447              	.L24:
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 448              		.loc 1 948 0 is_stmt 1
 449 0082 0023     		movs	r3, #0
 450 0084 C366     		str	r3, [r0, #108]
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 451              		.loc 1 949 0
 452 0086 6A22     		movs	r2, #106
 453 0088 2221     		movs	r1, #34
ARM GAS  /tmp/ccOLnUHF.s 			page 52


 454 008a 8154     		strb	r1, [r0, r2]
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 455              		.loc 1 952 0
 456 008c 023A     		subs	r2, r2, #2
 457 008e 8354     		strb	r3, [r0, r2]
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 458              		.loc 1 955 0
 459 0090 0268     		ldr	r2, [r0]
 460 0092 9368     		ldr	r3, [r2, #8]
 461 0094 2139     		subs	r1, r1, #33
 462 0096 0B43     		orrs	r3, r1
 463 0098 9360     		str	r3, [r2, #8]
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 464              		.loc 1 958 0
 465 009a 0268     		ldr	r2, [r0]
 466 009c 1168     		ldr	r1, [r2]
 467 009e 9023     		movs	r3, #144
 468 00a0 5B00     		lsls	r3, r3, #1
 469 00a2 0B43     		orrs	r3, r1
 470 00a4 1360     		str	r3, [r2]
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 471              		.loc 1 960 0
 472 00a6 0020     		movs	r0, #0
 473              	.LVL38:
 474 00a8 0BE0     		b	.L20
 475              	.LVL39:
 476              	.L35:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 477              		.loc 1 946 0 discriminator 9
 478 00aa 0369     		ldr	r3, [r0, #16]
 479 00ac 002B     		cmp	r3, #0
 480 00ae 03D1     		bne	.L27
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 481              		.loc 1 946 0 is_stmt 0 discriminator 10
 482 00b0 5C33     		adds	r3, r3, #92
 483 00b2 7F22     		movs	r2, #127
 484 00b4 C252     		strh	r2, [r0, r3]
 485              	.LVL40:
 486 00b6 E4E7     		b	.L24
 487              	.LVL41:
 488              	.L27:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 489              		.loc 1 946 0 discriminator 11
 490 00b8 5C23     		movs	r3, #92
 491 00ba 3F22     		movs	r2, #63
 492 00bc C252     		strh	r2, [r0, r3]
 493              	.LVL42:
 494 00be E0E7     		b	.L24
 495              	.LVL43:
 496              	.L28:
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 497              		.loc 1 964 0 is_stmt 1
 498 00c0 0220     		movs	r0, #2
 499              	.LVL44:
 500              	.L20:
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 501              		.loc 1 966 0
ARM GAS  /tmp/ccOLnUHF.s 			page 53


 502              		@ sp needed
 503 00c2 30BD     		pop	{r4, r5, pc}
 504              	.LVL45:
 505              	.L29:
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 506              		.loc 1 924 0
 507 00c4 0120     		movs	r0, #1
 508              	.LVL46:
 509 00c6 FCE7     		b	.L20
 510              	.LVL47:
 511              	.L30:
 512 00c8 0120     		movs	r0, #1
 513              	.LVL48:
 514 00ca FAE7     		b	.L20
 515              	.LVL49:
 516              	.L32:
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 517              		.loc 1 939 0
 518 00cc 0220     		movs	r0, #2
 519              	.LVL50:
 520 00ce F8E7     		b	.L20
 521              	.L37:
 522              		.align	2
 523              	.L36:
 524 00d0 FF010000 		.word	511
 525              		.cfi_endproc
 526              	.LFE46:
 528              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 529              		.align	1
 530              		.global	HAL_UART_Transmit_DMA
 531              		.syntax unified
 532              		.code	16
 533              		.thumb_func
 534              		.fpu softvfp
 536              	HAL_UART_Transmit_DMA:
 537              	.LFB47:
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 538              		.loc 1 980 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 0, uses_anonymous_args = 0
 542              	.LVL51:
 543 0000 70B5     		push	{r4, r5, r6, lr}
 544              	.LCFI3:
 545              		.cfi_def_cfa_offset 16
 546              		.cfi_offset 4, -16
 547              		.cfi_offset 5, -12
 548              		.cfi_offset 6, -8
 549              		.cfi_offset 14, -4
 550 0002 0400     		movs	r4, r0
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 551              		.loc 1 982 0
 552 0004 6920     		movs	r0, #105
 553              	.LVL52:
 554 0006 205C     		ldrb	r0, [r4, r0]
 555 0008 2028     		cmp	r0, #32
 556 000a 3ED1     		bne	.L41
ARM GAS  /tmp/ccOLnUHF.s 			page 54


 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 557              		.loc 1 984 0
 558 000c 0029     		cmp	r1, #0
 559 000e 3ED0     		beq	.L42
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 560              		.loc 1 984 0 is_stmt 0 discriminator 1
 561 0010 002A     		cmp	r2, #0
 562 0012 3ED0     		beq	.L43
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 563              		.loc 1 992 0 is_stmt 1
 564 0014 8023     		movs	r3, #128
 565 0016 5B01     		lsls	r3, r3, #5
 566 0018 A068     		ldr	r0, [r4, #8]
 567 001a 9842     		cmp	r0, r3
 568 001c 2ED0     		beq	.L46
 569              	.L40:
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 570              		.loc 1 1001 0
 571 001e 6823     		movs	r3, #104
 572 0020 E35C     		ldrb	r3, [r4, r3]
 573 0022 012B     		cmp	r3, #1
 574 0024 37D0     		beq	.L45
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 575              		.loc 1 1001 0 is_stmt 0 discriminator 2
 576 0026 6826     		movs	r6, #104
 577 0028 0123     		movs	r3, #1
 578 002a A355     		strb	r3, [r4, r6]
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 579              		.loc 1 1003 0 is_stmt 1 discriminator 2
 580 002c E164     		str	r1, [r4, #76]
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 581              		.loc 1 1004 0 discriminator 2
 582 002e 4F33     		adds	r3, r3, #79
 583 0030 E252     		strh	r2, [r4, r3]
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 584              		.loc 1 1005 0 discriminator 2
 585 0032 0233     		adds	r3, r3, #2
 586 0034 E252     		strh	r2, [r4, r3]
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 587              		.loc 1 1007 0 discriminator 2
 588 0036 0025     		movs	r5, #0
 589 0038 E566     		str	r5, [r4, #108]
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 590              		.loc 1 1008 0 discriminator 2
 591 003a 1733     		adds	r3, r3, #23
 592 003c 2121     		movs	r1, #33
 593              	.LVL53:
 594 003e E154     		strb	r1, [r4, r3]
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 595              		.loc 1 1011 0 discriminator 2
 596 0040 236E     		ldr	r3, [r4, #96]
 597 0042 1649     		ldr	r1, .L47
 598 0044 9962     		str	r1, [r3, #40]
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 599              		.loc 1 1014 0 discriminator 2
 600 0046 236E     		ldr	r3, [r4, #96]
 601 0048 1549     		ldr	r1, .L47+4
ARM GAS  /tmp/ccOLnUHF.s 			page 55


 602 004a D962     		str	r1, [r3, #44]
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 603              		.loc 1 1017 0 discriminator 2
 604 004c 236E     		ldr	r3, [r4, #96]
 605 004e 1549     		ldr	r1, .L47+8
 606 0050 1963     		str	r1, [r3, #48]
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 607              		.loc 1 1020 0 discriminator 2
 608 0052 236E     		ldr	r3, [r4, #96]
 609 0054 5D63     		str	r5, [r3, #52]
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 610              		.loc 1 1023 0 discriminator 2
 611 0056 2168     		ldr	r1, [r4]
 612 0058 2831     		adds	r1, r1, #40
 613 005a 1300     		movs	r3, r2
 614 005c 0A00     		movs	r2, r1
 615              	.LVL54:
 616 005e E16C     		ldr	r1, [r4, #76]
 617 0060 206E     		ldr	r0, [r4, #96]
 618 0062 FFF7FEFF 		bl	HAL_DMA_Start_IT
 619              	.LVL55:
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 620              		.loc 1 1026 0 discriminator 2
 621 0066 2368     		ldr	r3, [r4]
 622 0068 4022     		movs	r2, #64
 623 006a 1A62     		str	r2, [r3, #32]
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 624              		.loc 1 1029 0 discriminator 2
 625 006c A555     		strb	r5, [r4, r6]
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 626              		.loc 1 1033 0 discriminator 2
 627 006e 2268     		ldr	r2, [r4]
 628 0070 9368     		ldr	r3, [r2, #8]
 629 0072 8021     		movs	r1, #128
 630 0074 0B43     		orrs	r3, r1
 631 0076 9360     		str	r3, [r2, #8]
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 632              		.loc 1 1035 0 discriminator 2
 633 0078 0020     		movs	r0, #0
 634 007a 07E0     		b	.L39
 635              	.LVL56:
 636              	.L46:
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 637              		.loc 1 992 0 discriminator 1
 638 007c 2369     		ldr	r3, [r4, #16]
 639 007e 002B     		cmp	r3, #0
 640 0080 CDD1     		bne	.L40
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 641              		.loc 1 994 0
 642 0082 CB07     		lsls	r3, r1, #31
 643 0084 CBD5     		bpl	.L40
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 644              		.loc 1 996 0
 645 0086 0120     		movs	r0, #1
 646 0088 00E0     		b	.L39
 647              	.L41:
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccOLnUHF.s 			page 56


 648              		.loc 1 1039 0
 649 008a 0220     		movs	r0, #2
 650              	.LVL57:
 651              	.L39:
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 652              		.loc 1 1041 0
 653              		@ sp needed
 654              	.LVL58:
 655 008c 70BD     		pop	{r4, r5, r6, pc}
 656              	.LVL59:
 657              	.L42:
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 658              		.loc 1 986 0
 659 008e 0120     		movs	r0, #1
 660 0090 FCE7     		b	.L39
 661              	.L43:
 662 0092 0120     		movs	r0, #1
 663 0094 FAE7     		b	.L39
 664              	.L45:
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 665              		.loc 1 1001 0
 666 0096 0220     		movs	r0, #2
 667 0098 F8E7     		b	.L39
 668              	.L48:
 669 009a C046     		.align	2
 670              	.L47:
 671 009c 00000000 		.word	UART_DMATransmitCplt
 672 00a0 00000000 		.word	UART_DMATxHalfCplt
 673 00a4 00000000 		.word	UART_DMAError
 674              		.cfi_endproc
 675              	.LFE47:
 677              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 678              		.align	1
 679              		.global	HAL_UART_Receive_DMA
 680              		.syntax unified
 681              		.code	16
 682              		.thumb_func
 683              		.fpu softvfp
 685              	HAL_UART_Receive_DMA:
 686              	.LFB48:
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 687              		.loc 1 1055 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691              	.LVL60:
 692 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 693              	.LCFI4:
 694              		.cfi_def_cfa_offset 24
 695              		.cfi_offset 3, -24
 696              		.cfi_offset 4, -20
 697              		.cfi_offset 5, -16
 698              		.cfi_offset 6, -12
 699              		.cfi_offset 7, -8
 700              		.cfi_offset 14, -4
 701 0002 0400     		movs	r4, r0
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
ARM GAS  /tmp/ccOLnUHF.s 			page 57


 702              		.loc 1 1057 0
 703 0004 6A20     		movs	r0, #106
 704              	.LVL61:
 705 0006 205C     		ldrb	r0, [r4, r0]
 706 0008 2028     		cmp	r0, #32
 707 000a 42D1     		bne	.L52
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 708              		.loc 1 1059 0
 709 000c 0029     		cmp	r1, #0
 710 000e 42D0     		beq	.L53
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 711              		.loc 1 1059 0 is_stmt 0 discriminator 1
 712 0010 002A     		cmp	r2, #0
 713 0012 42D0     		beq	.L54
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 714              		.loc 1 1067 0 is_stmt 1
 715 0014 8023     		movs	r3, #128
 716 0016 5B01     		lsls	r3, r3, #5
 717 0018 A068     		ldr	r0, [r4, #8]
 718 001a 9842     		cmp	r0, r3
 719 001c 32D0     		beq	.L57
 720              	.L51:
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 721              		.loc 1 1076 0
 722 001e 6823     		movs	r3, #104
 723 0020 E35C     		ldrb	r3, [r4, r3]
 724 0022 012B     		cmp	r3, #1
 725 0024 3BD0     		beq	.L56
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 726              		.loc 1 1076 0 is_stmt 0 discriminator 2
 727 0026 6827     		movs	r7, #104
 728 0028 0126     		movs	r6, #1
 729 002a E655     		strb	r6, [r4, r7]
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 730              		.loc 1 1078 0 is_stmt 1 discriminator 2
 731 002c 6165     		str	r1, [r4, #84]
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 732              		.loc 1 1079 0 discriminator 2
 733 002e 5823     		movs	r3, #88
 734 0030 E252     		strh	r2, [r4, r3]
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 735              		.loc 1 1081 0 discriminator 2
 736 0032 0025     		movs	r5, #0
 737 0034 E566     		str	r5, [r4, #108]
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 738              		.loc 1 1082 0 discriminator 2
 739 0036 1233     		adds	r3, r3, #18
 740 0038 2221     		movs	r1, #34
 741              	.LVL62:
 742 003a E154     		strb	r1, [r4, r3]
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 743              		.loc 1 1085 0 discriminator 2
 744 003c 636E     		ldr	r3, [r4, #100]
 745 003e 1949     		ldr	r1, .L58
 746 0040 9962     		str	r1, [r3, #40]
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 747              		.loc 1 1088 0 discriminator 2
ARM GAS  /tmp/ccOLnUHF.s 			page 58


 748 0042 636E     		ldr	r3, [r4, #100]
 749 0044 1849     		ldr	r1, .L58+4
 750 0046 D962     		str	r1, [r3, #44]
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 751              		.loc 1 1091 0 discriminator 2
 752 0048 636E     		ldr	r3, [r4, #100]
 753 004a 1849     		ldr	r1, .L58+8
 754 004c 1963     		str	r1, [r3, #48]
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 755              		.loc 1 1094 0 discriminator 2
 756 004e 636E     		ldr	r3, [r4, #100]
 757 0050 5D63     		str	r5, [r3, #52]
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 758              		.loc 1 1097 0 discriminator 2
 759 0052 2168     		ldr	r1, [r4]
 760 0054 2431     		adds	r1, r1, #36
 761 0056 1300     		movs	r3, r2
 762 0058 626D     		ldr	r2, [r4, #84]
 763              	.LVL63:
 764 005a 606E     		ldr	r0, [r4, #100]
 765 005c FFF7FEFF 		bl	HAL_DMA_Start_IT
 766              	.LVL64:
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 767              		.loc 1 1100 0 discriminator 2
 768 0060 E555     		strb	r5, [r4, r7]
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 769              		.loc 1 1103 0 discriminator 2
 770 0062 2268     		ldr	r2, [r4]
 771 0064 1168     		ldr	r1, [r2]
 772 0066 8023     		movs	r3, #128
 773 0068 5B00     		lsls	r3, r3, #1
 774 006a 0B43     		orrs	r3, r1
 775 006c 1360     		str	r3, [r2]
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 776              		.loc 1 1106 0 discriminator 2
 777 006e 2268     		ldr	r2, [r4]
 778 0070 9368     		ldr	r3, [r2, #8]
 779 0072 3343     		orrs	r3, r6
 780 0074 9360     		str	r3, [r2, #8]
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 781              		.loc 1 1110 0 discriminator 2
 782 0076 2268     		ldr	r2, [r4]
 783 0078 9368     		ldr	r3, [r2, #8]
 784 007a 4021     		movs	r1, #64
 785 007c 0B43     		orrs	r3, r1
 786 007e 9360     		str	r3, [r2, #8]
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 787              		.loc 1 1112 0 discriminator 2
 788 0080 0020     		movs	r0, #0
 789 0082 07E0     		b	.L50
 790              	.LVL65:
 791              	.L57:
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 792              		.loc 1 1067 0 discriminator 1
 793 0084 2369     		ldr	r3, [r4, #16]
 794 0086 002B     		cmp	r3, #0
 795 0088 C9D1     		bne	.L51
ARM GAS  /tmp/ccOLnUHF.s 			page 59


1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 796              		.loc 1 1069 0
 797 008a CB07     		lsls	r3, r1, #31
 798 008c C7D5     		bpl	.L51
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 799              		.loc 1 1071 0
 800 008e 0120     		movs	r0, #1
 801 0090 00E0     		b	.L50
 802              	.L52:
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 803              		.loc 1 1116 0
 804 0092 0220     		movs	r0, #2
 805              	.LVL66:
 806              	.L50:
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 807              		.loc 1 1118 0
 808              		@ sp needed
 809              	.LVL67:
 810 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 811              	.LVL68:
 812              	.L53:
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 813              		.loc 1 1061 0
 814 0096 0120     		movs	r0, #1
 815 0098 FCE7     		b	.L50
 816              	.L54:
 817 009a 0120     		movs	r0, #1
 818 009c FAE7     		b	.L50
 819              	.L56:
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 820              		.loc 1 1076 0
 821 009e 0220     		movs	r0, #2
 822 00a0 F8E7     		b	.L50
 823              	.L59:
 824 00a2 C046     		.align	2
 825              	.L58:
 826 00a4 00000000 		.word	UART_DMAReceiveCplt
 827 00a8 00000000 		.word	UART_DMARxHalfCplt
 828 00ac 00000000 		.word	UART_DMAError
 829              		.cfi_endproc
 830              	.LFE48:
 832              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 833              		.align	1
 834              		.global	HAL_UART_DMAPause
 835              		.syntax unified
 836              		.code	16
 837              		.thumb_func
 838              		.fpu softvfp
 840              	HAL_UART_DMAPause:
 841              	.LFB49:
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 842              		.loc 1 1126 0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 0
 845              		@ frame_needed = 0, uses_anonymous_args = 0
 846              		@ link register save eliminated.
 847              	.LVL69:
ARM GAS  /tmp/ccOLnUHF.s 			page 60


1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 848              		.loc 1 1128 0
 849 0000 6823     		movs	r3, #104
 850 0002 C35C     		ldrb	r3, [r0, r3]
 851 0004 012B     		cmp	r3, #1
 852 0006 2CD0     		beq	.L64
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 853              		.loc 1 1128 0 is_stmt 0 discriminator 2
 854 0008 6823     		movs	r3, #104
 855 000a 0122     		movs	r2, #1
 856 000c C254     		strb	r2, [r0, r3]
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 857              		.loc 1 1130 0 is_stmt 1 discriminator 2
 858 000e 0133     		adds	r3, r3, #1
 859 0010 C35C     		ldrb	r3, [r0, r3]
 860 0012 212B     		cmp	r3, #33
 861 0014 08D0     		beq	.L65
 862              	.L62:
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 863              		.loc 1 1136 0
 864 0016 6A23     		movs	r3, #106
 865 0018 C35C     		ldrb	r3, [r0, r3]
 866 001a 222B     		cmp	r3, #34
 867 001c 0DD0     		beq	.L66
 868              	.L63:
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 869              		.loc 1 1148 0
 870 001e 6823     		movs	r3, #104
 871 0020 0022     		movs	r2, #0
 872 0022 C254     		strb	r2, [r0, r3]
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 873              		.loc 1 1150 0
 874 0024 0020     		movs	r0, #0
 875              	.LVL70:
 876              	.L61:
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 877              		.loc 1 1151 0
 878              		@ sp needed
 879 0026 7047     		bx	lr
 880              	.LVL71:
 881              	.L65:
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 882              		.loc 1 1131 0 discriminator 1
 883 0028 0368     		ldr	r3, [r0]
 884 002a 9A68     		ldr	r2, [r3, #8]
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 885              		.loc 1 1130 0 discriminator 1
 886 002c 1206     		lsls	r2, r2, #24
 887 002e F2D5     		bpl	.L62
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 888              		.loc 1 1134 0
 889 0030 9A68     		ldr	r2, [r3, #8]
 890 0032 8021     		movs	r1, #128
 891 0034 8A43     		bics	r2, r1
 892 0036 9A60     		str	r2, [r3, #8]
 893 0038 EDE7     		b	.L62
 894              	.L66:
ARM GAS  /tmp/ccOLnUHF.s 			page 61


1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 895              		.loc 1 1137 0 discriminator 1
 896 003a 0368     		ldr	r3, [r0]
 897 003c 9A68     		ldr	r2, [r3, #8]
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 898              		.loc 1 1136 0 discriminator 1
 899 003e 5206     		lsls	r2, r2, #25
 900 0040 EDD5     		bpl	.L63
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 901              		.loc 1 1140 0
 902 0042 1A68     		ldr	r2, [r3]
 903 0044 0849     		ldr	r1, .L67
 904 0046 0A40     		ands	r2, r1
 905 0048 1A60     		str	r2, [r3]
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 906              		.loc 1 1141 0
 907 004a 0268     		ldr	r2, [r0]
 908 004c 9368     		ldr	r3, [r2, #8]
 909 004e 0331     		adds	r1, r1, #3
 910 0050 FF31     		adds	r1, r1, #255
 911 0052 8B43     		bics	r3, r1
 912 0054 9360     		str	r3, [r2, #8]
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 913              		.loc 1 1144 0
 914 0056 0268     		ldr	r2, [r0]
 915 0058 9368     		ldr	r3, [r2, #8]
 916 005a 3F31     		adds	r1, r1, #63
 917 005c 8B43     		bics	r3, r1
 918 005e 9360     		str	r3, [r2, #8]
 919 0060 DDE7     		b	.L63
 920              	.L64:
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 921              		.loc 1 1128 0
 922 0062 0220     		movs	r0, #2
 923              	.LVL72:
 924 0064 DFE7     		b	.L61
 925              	.L68:
 926 0066 C046     		.align	2
 927              	.L67:
 928 0068 FFFEFFFF 		.word	-257
 929              		.cfi_endproc
 930              	.LFE49:
 932              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 933              		.align	1
 934              		.global	HAL_UART_DMAResume
 935              		.syntax unified
 936              		.code	16
 937              		.thumb_func
 938              		.fpu softvfp
 940              	HAL_UART_DMAResume:
 941              	.LFB50:
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 942              		.loc 1 1159 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 0
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946              		@ link register save eliminated.
ARM GAS  /tmp/ccOLnUHF.s 			page 62


 947              	.LVL73:
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 948              		.loc 1 1161 0
 949 0000 6823     		movs	r3, #104
 950 0002 C35C     		ldrb	r3, [r0, r3]
 951 0004 012B     		cmp	r3, #1
 952 0006 29D0     		beq	.L73
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 953              		.loc 1 1161 0 is_stmt 0 discriminator 2
 954 0008 6823     		movs	r3, #104
 955 000a 0122     		movs	r2, #1
 956 000c C254     		strb	r2, [r0, r3]
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 957              		.loc 1 1163 0 is_stmt 1 discriminator 2
 958 000e 0133     		adds	r3, r3, #1
 959 0010 C35C     		ldrb	r3, [r0, r3]
 960 0012 212B     		cmp	r3, #33
 961 0014 08D0     		beq	.L74
 962              	.L71:
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 963              		.loc 1 1168 0
 964 0016 6A23     		movs	r3, #106
 965 0018 C35C     		ldrb	r3, [r0, r3]
 966 001a 222B     		cmp	r3, #34
 967 001c 0AD0     		beq	.L75
 968              	.L72:
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 969              		.loc 1 1182 0
 970 001e 6823     		movs	r3, #104
 971 0020 0022     		movs	r2, #0
 972 0022 C254     		strb	r2, [r0, r3]
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 973              		.loc 1 1184 0
 974 0024 0020     		movs	r0, #0
 975              	.LVL74:
 976              	.L70:
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 977              		.loc 1 1185 0
 978              		@ sp needed
 979 0026 7047     		bx	lr
 980              	.LVL75:
 981              	.L74:
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 982              		.loc 1 1166 0
 983 0028 0268     		ldr	r2, [r0]
 984 002a 9368     		ldr	r3, [r2, #8]
 985 002c 8021     		movs	r1, #128
 986 002e 0B43     		orrs	r3, r1
 987 0030 9360     		str	r3, [r2, #8]
 988 0032 F0E7     		b	.L71
 989              	.L75:
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 990              		.loc 1 1171 0
 991 0034 0368     		ldr	r3, [r0]
 992 0036 0822     		movs	r2, #8
 993 0038 1A62     		str	r2, [r3, #32]
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
ARM GAS  /tmp/ccOLnUHF.s 			page 63


 994              		.loc 1 1174 0
 995 003a 0268     		ldr	r2, [r0]
 996 003c 1168     		ldr	r1, [r2]
 997 003e 8023     		movs	r3, #128
 998 0040 5B00     		lsls	r3, r3, #1
 999 0042 0B43     		orrs	r3, r1
 1000 0044 1360     		str	r3, [r2]
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1001              		.loc 1 1175 0
 1002 0046 0268     		ldr	r2, [r0]
 1003 0048 9368     		ldr	r3, [r2, #8]
 1004 004a 0121     		movs	r1, #1
 1005 004c 0B43     		orrs	r3, r1
 1006 004e 9360     		str	r3, [r2, #8]
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1007              		.loc 1 1178 0
 1008 0050 0268     		ldr	r2, [r0]
 1009 0052 9368     		ldr	r3, [r2, #8]
 1010 0054 3F31     		adds	r1, r1, #63
 1011 0056 0B43     		orrs	r3, r1
 1012 0058 9360     		str	r3, [r2, #8]
 1013 005a E0E7     		b	.L72
 1014              	.L73:
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1015              		.loc 1 1161 0
 1016 005c 0220     		movs	r0, #2
 1017              	.LVL76:
 1018 005e E2E7     		b	.L70
 1019              		.cfi_endproc
 1020              	.LFE50:
 1022              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1023              		.align	1
 1024              		.global	HAL_UART_DMAStop
 1025              		.syntax unified
 1026              		.code	16
 1027              		.thumb_func
 1028              		.fpu softvfp
 1030              	HAL_UART_DMAStop:
 1031              	.LFB51:
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1032              		.loc 1 1193 0
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 0
 1035              		@ frame_needed = 0, uses_anonymous_args = 0
 1036              	.LVL77:
 1037 0000 10B5     		push	{r4, lr}
 1038              	.LCFI5:
 1039              		.cfi_def_cfa_offset 8
 1040              		.cfi_offset 4, -8
 1041              		.cfi_offset 14, -4
 1042 0002 0400     		movs	r4, r0
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1043              		.loc 1 1202 0
 1044 0004 6923     		movs	r3, #105
 1045 0006 C35C     		ldrb	r3, [r0, r3]
 1046 0008 212B     		cmp	r3, #33
 1047 000a 05D0     		beq	.L81
ARM GAS  /tmp/ccOLnUHF.s 			page 64


 1048              	.LVL78:
 1049              	.L77:
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1050              		.loc 1 1217 0
 1051 000c 6A23     		movs	r3, #106
 1052 000e E35C     		ldrb	r3, [r4, r3]
 1053 0010 222B     		cmp	r3, #34
 1054 0012 12D0     		beq	.L82
 1055              	.L79:
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1056              		.loc 1 1232 0
 1057 0014 0020     		movs	r0, #0
 1058              		@ sp needed
 1059              	.LVL79:
 1060 0016 10BD     		pop	{r4, pc}
 1061              	.LVL80:
 1062              	.L81:
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1063              		.loc 1 1203 0 discriminator 1
 1064 0018 0368     		ldr	r3, [r0]
 1065 001a 9A68     		ldr	r2, [r3, #8]
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1066              		.loc 1 1202 0 discriminator 1
 1067 001c 1206     		lsls	r2, r2, #24
 1068 001e F5D5     		bpl	.L77
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1069              		.loc 1 1205 0
 1070 0020 9A68     		ldr	r2, [r3, #8]
 1071 0022 8021     		movs	r1, #128
 1072 0024 8A43     		bics	r2, r1
 1073 0026 9A60     		str	r2, [r3, #8]
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1074              		.loc 1 1208 0
 1075 0028 006E     		ldr	r0, [r0, #96]
 1076              	.LVL81:
 1077 002a 0028     		cmp	r0, #0
 1078 002c 01D0     		beq	.L78
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1079              		.loc 1 1210 0
 1080 002e FFF7FEFF 		bl	HAL_DMA_Abort
 1081              	.LVL82:
 1082              	.L78:
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1083              		.loc 1 1213 0
 1084 0032 2000     		movs	r0, r4
 1085 0034 FFF7FEFF 		bl	UART_EndTxTransfer
 1086              	.LVL83:
 1087 0038 E8E7     		b	.L77
 1088              	.L82:
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1089              		.loc 1 1218 0 discriminator 1
 1090 003a 2368     		ldr	r3, [r4]
 1091 003c 9A68     		ldr	r2, [r3, #8]
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1092              		.loc 1 1217 0 discriminator 1
 1093 003e 5206     		lsls	r2, r2, #25
 1094 0040 E8D5     		bpl	.L79
ARM GAS  /tmp/ccOLnUHF.s 			page 65


1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1095              		.loc 1 1220 0
 1096 0042 9A68     		ldr	r2, [r3, #8]
 1097 0044 4021     		movs	r1, #64
 1098 0046 8A43     		bics	r2, r1
 1099 0048 9A60     		str	r2, [r3, #8]
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1100              		.loc 1 1223 0
 1101 004a 606E     		ldr	r0, [r4, #100]
 1102 004c 0028     		cmp	r0, #0
 1103 004e 01D0     		beq	.L80
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1104              		.loc 1 1225 0
 1105 0050 FFF7FEFF 		bl	HAL_DMA_Abort
 1106              	.LVL84:
 1107              	.L80:
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1108              		.loc 1 1228 0
 1109 0054 2000     		movs	r0, r4
 1110 0056 FFF7FEFF 		bl	UART_EndRxTransfer
 1111              	.LVL85:
 1112 005a DBE7     		b	.L79
 1113              		.cfi_endproc
 1114              	.LFE51:
 1116              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1117              		.align	1
 1118              		.global	HAL_UART_Abort
 1119              		.syntax unified
 1120              		.code	16
 1121              		.thumb_func
 1122              		.fpu softvfp
 1124              	HAL_UART_Abort:
 1125              	.LFB52:
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1126              		.loc 1 1247 0
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 0, uses_anonymous_args = 0
 1130              	.LVL86:
 1131 0000 10B5     		push	{r4, lr}
 1132              	.LCFI6:
 1133              		.cfi_def_cfa_offset 8
 1134              		.cfi_offset 4, -8
 1135              		.cfi_offset 14, -4
 1136 0002 0400     		movs	r4, r0
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1137              		.loc 1 1249 0
 1138 0004 0268     		ldr	r2, [r0]
 1139 0006 1368     		ldr	r3, [r2]
 1140 0008 1C49     		ldr	r1, .L86
 1141 000a 0B40     		ands	r3, r1
 1142 000c 1360     		str	r3, [r2]
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1143              		.loc 1 1250 0
 1144 000e 0268     		ldr	r2, [r0]
 1145 0010 9368     		ldr	r3, [r2, #8]
 1146 0012 E331     		adds	r1, r1, #227
ARM GAS  /tmp/ccOLnUHF.s 			page 66


 1147 0014 FF31     		adds	r1, r1, #255
 1148 0016 8B43     		bics	r3, r1
 1149 0018 9360     		str	r3, [r2, #8]
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1150              		.loc 1 1253 0
 1151 001a 0368     		ldr	r3, [r0]
 1152 001c 9A68     		ldr	r2, [r3, #8]
 1153 001e 1206     		lsls	r2, r2, #24
 1154 0020 0BD5     		bpl	.L84
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1155              		.loc 1 1255 0
 1156 0022 9A68     		ldr	r2, [r3, #8]
 1157 0024 7F31     		adds	r1, r1, #127
 1158 0026 8A43     		bics	r2, r1
 1159 0028 9A60     		str	r2, [r3, #8]
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1160              		.loc 1 1258 0
 1161 002a 036E     		ldr	r3, [r0, #96]
 1162 002c 002B     		cmp	r3, #0
 1163 002e 04D0     		beq	.L84
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1164              		.loc 1 1262 0
 1165 0030 0022     		movs	r2, #0
 1166 0032 5A63     		str	r2, [r3, #52]
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1167              		.loc 1 1264 0
 1168 0034 006E     		ldr	r0, [r0, #96]
 1169              	.LVL87:
 1170 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 1171              	.LVL88:
 1172              	.L84:
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1173              		.loc 1 1269 0
 1174 003a 2368     		ldr	r3, [r4]
 1175 003c 9A68     		ldr	r2, [r3, #8]
 1176 003e 5206     		lsls	r2, r2, #25
 1177 0040 0BD5     		bpl	.L85
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1178              		.loc 1 1271 0
 1179 0042 9A68     		ldr	r2, [r3, #8]
 1180 0044 4021     		movs	r1, #64
 1181 0046 8A43     		bics	r2, r1
 1182 0048 9A60     		str	r2, [r3, #8]
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1183              		.loc 1 1274 0
 1184 004a 636E     		ldr	r3, [r4, #100]
 1185 004c 002B     		cmp	r3, #0
 1186 004e 04D0     		beq	.L85
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1187              		.loc 1 1278 0
 1188 0050 0022     		movs	r2, #0
 1189 0052 5A63     		str	r2, [r3, #52]
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1190              		.loc 1 1280 0
 1191 0054 606E     		ldr	r0, [r4, #100]
 1192 0056 FFF7FEFF 		bl	HAL_DMA_Abort
 1193              	.LVL89:
ARM GAS  /tmp/ccOLnUHF.s 			page 67


 1194              	.L85:
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U; 
 1195              		.loc 1 1285 0
 1196 005a 0023     		movs	r3, #0
 1197 005c 5222     		movs	r2, #82
 1198 005e A352     		strh	r3, [r4, r2]
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1199              		.loc 1 1286 0
 1200 0060 0832     		adds	r2, r2, #8
 1201 0062 A352     		strh	r3, [r4, r2]
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1202              		.loc 1 1289 0
 1203 0064 2268     		ldr	r2, [r4]
 1204 0066 0F21     		movs	r1, #15
 1205 0068 1162     		str	r1, [r2, #32]
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1206              		.loc 1 1292 0
 1207 006a 2022     		movs	r2, #32
 1208 006c 5A31     		adds	r1, r1, #90
 1209 006e 6254     		strb	r2, [r4, r1]
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1210              		.loc 1 1293 0
 1211 0070 0131     		adds	r1, r1, #1
 1212 0072 6254     		strb	r2, [r4, r1]
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1213              		.loc 1 1296 0
 1214 0074 E366     		str	r3, [r4, #108]
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1215              		.loc 1 1299 0
 1216 0076 0020     		movs	r0, #0
 1217              		@ sp needed
 1218              	.LVL90:
 1219 0078 10BD     		pop	{r4, pc}
 1220              	.L87:
 1221 007a C046     		.align	2
 1222              	.L86:
 1223 007c 1FFEFFFF 		.word	-481
 1224              		.cfi_endproc
 1225              	.LFE52:
 1227              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1228              		.align	1
 1229              		.global	HAL_UART_AbortTransmit
 1230              		.syntax unified
 1231              		.code	16
 1232              		.thumb_func
 1233              		.fpu softvfp
 1235              	HAL_UART_AbortTransmit:
 1236              	.LFB53:
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1237              		.loc 1 1314 0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 0
 1240              		@ frame_needed = 0, uses_anonymous_args = 0
 1241              	.LVL91:
 1242 0000 10B5     		push	{r4, lr}
 1243              	.LCFI7:
 1244              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccOLnUHF.s 			page 68


 1245              		.cfi_offset 4, -8
 1246              		.cfi_offset 14, -4
 1247 0002 0400     		movs	r4, r0
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1248              		.loc 1 1316 0
 1249 0004 0268     		ldr	r2, [r0]
 1250 0006 1368     		ldr	r3, [r2]
 1251 0008 C021     		movs	r1, #192
 1252 000a 8B43     		bics	r3, r1
 1253 000c 1360     		str	r3, [r2]
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1254              		.loc 1 1319 0
 1255 000e 0368     		ldr	r3, [r0]
 1256 0010 9A68     		ldr	r2, [r3, #8]
 1257 0012 1206     		lsls	r2, r2, #24
 1258 0014 0BD5     		bpl	.L89
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1259              		.loc 1 1321 0
 1260 0016 9A68     		ldr	r2, [r3, #8]
 1261 0018 4039     		subs	r1, r1, #64
 1262 001a 8A43     		bics	r2, r1
 1263 001c 9A60     		str	r2, [r3, #8]
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1264              		.loc 1 1324 0
 1265 001e 036E     		ldr	r3, [r0, #96]
 1266 0020 002B     		cmp	r3, #0
 1267 0022 04D0     		beq	.L89
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1268              		.loc 1 1328 0
 1269 0024 0022     		movs	r2, #0
 1270 0026 5A63     		str	r2, [r3, #52]
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1271              		.loc 1 1330 0
 1272 0028 006E     		ldr	r0, [r0, #96]
 1273              	.LVL92:
 1274 002a FFF7FEFF 		bl	HAL_DMA_Abort
 1275              	.LVL93:
 1276              	.L89:
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1277              		.loc 1 1335 0
 1278 002e 5223     		movs	r3, #82
 1279 0030 0022     		movs	r2, #0
 1280 0032 E252     		strh	r2, [r4, r3]
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1281              		.loc 1 1338 0
 1282 0034 1733     		adds	r3, r3, #23
 1283 0036 2032     		adds	r2, r2, #32
 1284 0038 E254     		strb	r2, [r4, r3]
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1285              		.loc 1 1341 0
 1286 003a 0020     		movs	r0, #0
 1287              		@ sp needed
 1288              	.LVL94:
 1289 003c 10BD     		pop	{r4, pc}
 1290              		.cfi_endproc
 1291              	.LFE53:
 1293              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
ARM GAS  /tmp/ccOLnUHF.s 			page 69


 1294              		.align	1
 1295              		.global	HAL_UART_AbortReceive
 1296              		.syntax unified
 1297              		.code	16
 1298              		.thumb_func
 1299              		.fpu softvfp
 1301              	HAL_UART_AbortReceive:
 1302              	.LFB54:
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1303              		.loc 1 1356 0
 1304              		.cfi_startproc
 1305              		@ args = 0, pretend = 0, frame = 0
 1306              		@ frame_needed = 0, uses_anonymous_args = 0
 1307              	.LVL95:
 1308 0000 10B5     		push	{r4, lr}
 1309              	.LCFI8:
 1310              		.cfi_def_cfa_offset 8
 1311              		.cfi_offset 4, -8
 1312              		.cfi_offset 14, -4
 1313 0002 0400     		movs	r4, r0
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1314              		.loc 1 1358 0
 1315 0004 0268     		ldr	r2, [r0]
 1316 0006 1368     		ldr	r3, [r2]
 1317 0008 1149     		ldr	r1, .L92
 1318 000a 0B40     		ands	r3, r1
 1319 000c 1360     		str	r3, [r2]
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1320              		.loc 1 1359 0
 1321 000e 0268     		ldr	r2, [r0]
 1322 0010 9368     		ldr	r3, [r2, #8]
 1323 0012 2331     		adds	r1, r1, #35
 1324 0014 FF31     		adds	r1, r1, #255
 1325 0016 8B43     		bics	r3, r1
 1326 0018 9360     		str	r3, [r2, #8]
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1327              		.loc 1 1362 0
 1328 001a 0368     		ldr	r3, [r0]
 1329 001c 9A68     		ldr	r2, [r3, #8]
 1330 001e 5206     		lsls	r2, r2, #25
 1331 0020 0BD5     		bpl	.L91
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1332              		.loc 1 1364 0
 1333 0022 9A68     		ldr	r2, [r3, #8]
 1334 0024 3F31     		adds	r1, r1, #63
 1335 0026 8A43     		bics	r2, r1
 1336 0028 9A60     		str	r2, [r3, #8]
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1337              		.loc 1 1367 0
 1338 002a 436E     		ldr	r3, [r0, #100]
 1339 002c 002B     		cmp	r3, #0
 1340 002e 04D0     		beq	.L91
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1341              		.loc 1 1371 0
 1342 0030 0022     		movs	r2, #0
 1343 0032 5A63     		str	r2, [r3, #52]
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
ARM GAS  /tmp/ccOLnUHF.s 			page 70


 1344              		.loc 1 1373 0
 1345 0034 406E     		ldr	r0, [r0, #100]
 1346              	.LVL96:
 1347 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 1348              	.LVL97:
 1349              	.L91:
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1350              		.loc 1 1378 0
 1351 003a 5A23     		movs	r3, #90
 1352 003c 0022     		movs	r2, #0
 1353 003e E252     		strh	r2, [r4, r3]
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1354              		.loc 1 1381 0
 1355 0040 2368     		ldr	r3, [r4]
 1356 0042 0F32     		adds	r2, r2, #15
 1357 0044 1A62     		str	r2, [r3, #32]
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1358              		.loc 1 1384 0
 1359 0046 6A23     		movs	r3, #106
 1360 0048 1132     		adds	r2, r2, #17
 1361 004a E254     		strb	r2, [r4, r3]
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1362              		.loc 1 1387 0
 1363 004c 0020     		movs	r0, #0
 1364              		@ sp needed
 1365              	.LVL98:
 1366 004e 10BD     		pop	{r4, pc}
 1367              	.L93:
 1368              		.align	2
 1369              	.L92:
 1370 0050 DFFEFFFF 		.word	-289
 1371              		.cfi_endproc
 1372              	.LFE54:
 1374              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1375              		.align	1
 1376              		.weak	HAL_UART_TxCpltCallback
 1377              		.syntax unified
 1378              		.code	16
 1379              		.thumb_func
 1380              		.fpu softvfp
 1382              	HAL_UART_TxCpltCallback:
 1383              	.LFB59:
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1384              		.loc 1 1811 0
 1385              		.cfi_startproc
 1386              		@ args = 0, pretend = 0, frame = 0
 1387              		@ frame_needed = 0, uses_anonymous_args = 0
 1388              		@ link register save eliminated.
 1389              	.LVL99:
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1390              		.loc 1 1818 0
 1391              		@ sp needed
 1392 0000 7047     		bx	lr
 1393              		.cfi_endproc
 1394              	.LFE59:
 1396              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1397              		.align	1
ARM GAS  /tmp/ccOLnUHF.s 			page 71


 1398              		.syntax unified
 1399              		.code	16
 1400              		.thumb_func
 1401              		.fpu softvfp
 1403              	UART_DMATransmitCplt:
 1404              	.LFB80:
2405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
2409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1405              		.loc 1 2413 0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 0
 1408              		@ frame_needed = 0, uses_anonymous_args = 0
 1409              	.LVL100:
 1410 0000 10B5     		push	{r4, lr}
 1411              	.LCFI9:
 1412              		.cfi_def_cfa_offset 8
 1413              		.cfi_offset 4, -8
 1414              		.cfi_offset 14, -4
2414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1415              		.loc 1 2414 0
 1416 0002 436A     		ldr	r3, [r0, #36]
 1417              	.LVL101:
2415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
2417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1418              		.loc 1 2417 0
 1419 0004 0268     		ldr	r2, [r0]
 1420 0006 1268     		ldr	r2, [r2]
 1421 0008 9206     		lsls	r2, r2, #26
 1422 000a 0DD4     		bmi	.L96
2418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0;
 1423              		.loc 1 2419 0
 1424 000c 5222     		movs	r2, #82
 1425 000e 0021     		movs	r1, #0
 1426 0010 9952     		strh	r1, [r3, r2]
2420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
2422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
2423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1427              		.loc 1 2423 0
 1428 0012 1968     		ldr	r1, [r3]
 1429 0014 8A68     		ldr	r2, [r1, #8]
 1430 0016 8020     		movs	r0, #128
 1431              	.LVL102:
 1432 0018 8243     		bics	r2, r0
 1433 001a 8A60     		str	r2, [r1, #8]
2424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
ARM GAS  /tmp/ccOLnUHF.s 			page 72


 1434              		.loc 1 2426 0
 1435 001c 1A68     		ldr	r2, [r3]
 1436 001e 1368     		ldr	r3, [r2]
 1437              	.LVL103:
 1438 0020 4021     		movs	r1, #64
 1439 0022 0B43     		orrs	r3, r1
 1440 0024 1360     		str	r3, [r2]
 1441              	.L95:
2427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Circular mode */
2429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1442              		.loc 1 2434 0
 1443              		@ sp needed
 1444 0026 10BD     		pop	{r4, pc}
 1445              	.LVL104:
 1446              	.L96:
2431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1447              		.loc 1 2431 0
 1448 0028 1800     		movs	r0, r3
 1449              	.LVL105:
 1450 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1451              	.LVL106:
 1452              		.loc 1 2434 0
 1453 002e FAE7     		b	.L95
 1454              		.cfi_endproc
 1455              	.LFE80:
 1457              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1458              		.align	1
 1459              		.weak	HAL_UART_TxHalfCpltCallback
 1460              		.syntax unified
 1461              		.code	16
 1462              		.thumb_func
 1463              		.fpu softvfp
 1465              	HAL_UART_TxHalfCpltCallback:
 1466              	.LFB60:
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1467              		.loc 1 1826 0
 1468              		.cfi_startproc
 1469              		@ args = 0, pretend = 0, frame = 0
 1470              		@ frame_needed = 0, uses_anonymous_args = 0
 1471              		@ link register save eliminated.
 1472              	.LVL107:
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1473              		.loc 1 1833 0
 1474              		@ sp needed
 1475 0000 7047     		bx	lr
 1476              		.cfi_endproc
 1477              	.LFE60:
 1479              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1480              		.align	1
 1481              		.syntax unified
 1482              		.code	16
ARM GAS  /tmp/ccOLnUHF.s 			page 73


 1483              		.thumb_func
 1484              		.fpu softvfp
 1486              	UART_DMATxHalfCplt:
 1487              	.LFB81:
2435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
2438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1488              		.loc 1 2442 0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 0
 1491              		@ frame_needed = 0, uses_anonymous_args = 0
 1492              	.LVL108:
 1493 0000 10B5     		push	{r4, lr}
 1494              	.LCFI10:
 1495              		.cfi_def_cfa_offset 8
 1496              		.cfi_offset 4, -8
 1497              		.cfi_offset 14, -4
2443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1498              		.loc 1 2443 0
 1499 0002 406A     		ldr	r0, [r0, #36]
 1500              	.LVL109:
2444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 1501              		.loc 1 2445 0
 1502 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1503              	.LVL110:
2446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1504              		.loc 1 2446 0
 1505              		@ sp needed
 1506 0008 10BD     		pop	{r4, pc}
 1507              		.cfi_endproc
 1508              	.LFE81:
 1510              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1511              		.align	1
 1512              		.weak	HAL_UART_RxCpltCallback
 1513              		.syntax unified
 1514              		.code	16
 1515              		.thumb_func
 1516              		.fpu softvfp
 1518              	HAL_UART_RxCpltCallback:
 1519              	.LFB61:
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1520              		.loc 1 1841 0
 1521              		.cfi_startproc
 1522              		@ args = 0, pretend = 0, frame = 0
 1523              		@ frame_needed = 0, uses_anonymous_args = 0
 1524              		@ link register save eliminated.
 1525              	.LVL111:
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1526              		.loc 1 1848 0
 1527              		@ sp needed
 1528 0000 7047     		bx	lr
ARM GAS  /tmp/ccOLnUHF.s 			page 74


 1529              		.cfi_endproc
 1530              	.LFE61:
 1532              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1533              		.align	1
 1534              		.syntax unified
 1535              		.code	16
 1536              		.thumb_func
 1537              		.fpu softvfp
 1539              	UART_DMAReceiveCplt:
 1540              	.LFB82:
2447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
2450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1541              		.loc 1 2454 0
 1542              		.cfi_startproc
 1543              		@ args = 0, pretend = 0, frame = 0
 1544              		@ frame_needed = 0, uses_anonymous_args = 0
 1545              	.LVL112:
 1546 0000 10B5     		push	{r4, lr}
 1547              	.LCFI11:
 1548              		.cfi_def_cfa_offset 8
 1549              		.cfi_offset 4, -8
 1550              		.cfi_offset 14, -4
2455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1551              		.loc 1 2455 0
 1552 0002 436A     		ldr	r3, [r0, #36]
 1553              	.LVL113:
2456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
2458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1554              		.loc 1 2458 0
 1555 0004 0268     		ldr	r2, [r0]
 1556 0006 1268     		ldr	r2, [r2]
 1557 0008 9206     		lsls	r2, r2, #26
 1558 000a 15D4     		bmi	.L102
2459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1559              		.loc 1 2460 0
 1560 000c 5A22     		movs	r2, #90
 1561 000e 0021     		movs	r1, #0
 1562 0010 9952     		strh	r1, [r3, r2]
2461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1563              		.loc 1 2463 0
 1564 0012 1968     		ldr	r1, [r3]
 1565 0014 0A68     		ldr	r2, [r1]
 1566 0016 0A48     		ldr	r0, .L103
 1567              	.LVL114:
 1568 0018 0240     		ands	r2, r0
 1569 001a 0A60     		str	r2, [r1]
2464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
ARM GAS  /tmp/ccOLnUHF.s 			page 75


 1570              		.loc 1 2464 0
 1571 001c 1968     		ldr	r1, [r3]
 1572 001e 8A68     		ldr	r2, [r1, #8]
 1573 0020 0330     		adds	r0, r0, #3
 1574 0022 FF30     		adds	r0, r0, #255
 1575 0024 8243     		bics	r2, r0
 1576 0026 8A60     		str	r2, [r1, #8]
2465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
2468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1577              		.loc 1 2468 0
 1578 0028 1968     		ldr	r1, [r3]
 1579 002a 8A68     		ldr	r2, [r1, #8]
 1580 002c 3F30     		adds	r0, r0, #63
 1581 002e 8243     		bics	r2, r0
 1582 0030 8A60     		str	r2, [r1, #8]
2469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1583              		.loc 1 2471 0
 1584 0032 6A22     		movs	r2, #106
 1585 0034 2021     		movs	r1, #32
 1586 0036 9954     		strb	r1, [r3, r2]
 1587              	.L102:
2472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 1588              		.loc 1 2474 0
 1589 0038 1800     		movs	r0, r3
 1590 003a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1591              	.LVL115:
2475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1592              		.loc 1 2475 0
 1593              		@ sp needed
 1594 003e 10BD     		pop	{r4, pc}
 1595              	.L104:
 1596              		.align	2
 1597              	.L103:
 1598 0040 FFFEFFFF 		.word	-257
 1599              		.cfi_endproc
 1600              	.LFE82:
 1602              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1603              		.align	1
 1604              		.weak	HAL_UART_RxHalfCpltCallback
 1605              		.syntax unified
 1606              		.code	16
 1607              		.thumb_func
 1608              		.fpu softvfp
 1610              	HAL_UART_RxHalfCpltCallback:
 1611              	.LFB62:
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1612              		.loc 1 1856 0
 1613              		.cfi_startproc
 1614              		@ args = 0, pretend = 0, frame = 0
 1615              		@ frame_needed = 0, uses_anonymous_args = 0
 1616              		@ link register save eliminated.
ARM GAS  /tmp/ccOLnUHF.s 			page 76


 1617              	.LVL116:
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1618              		.loc 1 1863 0
 1619              		@ sp needed
 1620 0000 7047     		bx	lr
 1621              		.cfi_endproc
 1622              	.LFE62:
 1624              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1625              		.align	1
 1626              		.syntax unified
 1627              		.code	16
 1628              		.thumb_func
 1629              		.fpu softvfp
 1631              	UART_DMARxHalfCplt:
 1632              	.LFB83:
2476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
2479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1633              		.loc 1 2483 0
 1634              		.cfi_startproc
 1635              		@ args = 0, pretend = 0, frame = 0
 1636              		@ frame_needed = 0, uses_anonymous_args = 0
 1637              	.LVL117:
 1638 0000 10B5     		push	{r4, lr}
 1639              	.LCFI12:
 1640              		.cfi_def_cfa_offset 8
 1641              		.cfi_offset 4, -8
 1642              		.cfi_offset 14, -4
2484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1643              		.loc 1 2484 0
 1644 0002 406A     		ldr	r0, [r0, #36]
 1645              	.LVL118:
2485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 1646              		.loc 1 2486 0
 1647 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1648              	.LVL119:
2487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1649              		.loc 1 2487 0
 1650              		@ sp needed
 1651 0008 10BD     		pop	{r4, pc}
 1652              		.cfi_endproc
 1653              	.LFE83:
 1655              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1656              		.align	1
 1657              		.weak	HAL_UART_ErrorCallback
 1658              		.syntax unified
 1659              		.code	16
 1660              		.thumb_func
 1661              		.fpu softvfp
 1663              	HAL_UART_ErrorCallback:
 1664              	.LFB63:
ARM GAS  /tmp/ccOLnUHF.s 			page 77


1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1665              		.loc 1 1871 0
 1666              		.cfi_startproc
 1667              		@ args = 0, pretend = 0, frame = 0
 1668              		@ frame_needed = 0, uses_anonymous_args = 0
 1669              		@ link register save eliminated.
 1670              	.LVL120:
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1671              		.loc 1 1878 0
 1672              		@ sp needed
 1673 0000 7047     		bx	lr
 1674              		.cfi_endproc
 1675              	.LFE63:
 1677              		.section	.text.UART_DMAError,"ax",%progbits
 1678              		.align	1
 1679              		.syntax unified
 1680              		.code	16
 1681              		.thumb_func
 1682              		.fpu softvfp
 1684              	UART_DMAError:
 1685              	.LFB84:
2488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART communication error callback.
2491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1686              		.loc 1 2495 0
 1687              		.cfi_startproc
 1688              		@ args = 0, pretend = 0, frame = 0
 1689              		@ frame_needed = 0, uses_anonymous_args = 0
 1690              	.LVL121:
 1691 0000 10B5     		push	{r4, lr}
 1692              	.LCFI13:
 1693              		.cfi_def_cfa_offset 8
 1694              		.cfi_offset 4, -8
 1695              		.cfi_offset 14, -4
2496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1696              		.loc 1 2496 0
 1697 0002 446A     		ldr	r4, [r0, #36]
 1698              	.LVL122:
2497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
 1699              		.loc 1 2499 0
 1700 0004 6923     		movs	r3, #105
 1701 0006 E35C     		ldrb	r3, [r4, r3]
 1702 0008 212B     		cmp	r3, #33
 1703 000a 0BD0     		beq	.L111
 1704              	.LVL123:
 1705              	.L109:
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
2501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
2503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
ARM GAS  /tmp/ccOLnUHF.s 			page 78


2504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1706              		.loc 1 2507 0
 1707 000c 6A23     		movs	r3, #106
 1708 000e E35C     		ldrb	r3, [r4, r3]
 1709 0010 222B     		cmp	r3, #34
 1710 0012 12D0     		beq	.L112
 1711              	.L110:
2508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
2509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
2511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
2512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 1712              		.loc 1 2514 0
 1713 0014 E36E     		ldr	r3, [r4, #108]
 1714 0016 1022     		movs	r2, #16
 1715 0018 1343     		orrs	r3, r2
 1716 001a E366     		str	r3, [r4, #108]
2515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1717              		.loc 1 2515 0
 1718 001c 2000     		movs	r0, r4
 1719 001e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1720              	.LVL124:
2516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1721              		.loc 1 2516 0
 1722              		@ sp needed
 1723              	.LVL125:
 1724 0022 10BD     		pop	{r4, pc}
 1725              	.LVL126:
 1726              	.L111:
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1727              		.loc 1 2500 0
 1728 0024 2368     		ldr	r3, [r4]
 1729 0026 9B68     		ldr	r3, [r3, #8]
 1730 0028 1B06     		lsls	r3, r3, #24
 1731 002a EFD5     		bpl	.L109
2502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 1732              		.loc 1 2502 0
 1733 002c 5223     		movs	r3, #82
 1734 002e 0022     		movs	r2, #0
 1735 0030 E252     		strh	r2, [r4, r3]
2503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1736              		.loc 1 2503 0
 1737 0032 2000     		movs	r0, r4
 1738              	.LVL127:
 1739 0034 FFF7FEFF 		bl	UART_EndTxTransfer
 1740              	.LVL128:
 1741 0038 E8E7     		b	.L109
 1742              	.L112:
2508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1743              		.loc 1 2508 0
 1744 003a 2368     		ldr	r3, [r4]
 1745 003c 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccOLnUHF.s 			page 79


 1746 003e 5B06     		lsls	r3, r3, #25
 1747 0040 E8D5     		bpl	.L110
2510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 1748              		.loc 1 2510 0
 1749 0042 5A23     		movs	r3, #90
 1750 0044 0022     		movs	r2, #0
 1751 0046 E252     		strh	r2, [r4, r3]
2511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1752              		.loc 1 2511 0
 1753 0048 2000     		movs	r0, r4
 1754 004a FFF7FEFF 		bl	UART_EndRxTransfer
 1755              	.LVL129:
 1756 004e E1E7     		b	.L110
 1757              		.cfi_endproc
 1758              	.LFE84:
 1760              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 1761              		.align	1
 1762              		.syntax unified
 1763              		.code	16
 1764              		.thumb_func
 1765              		.fpu softvfp
 1767              	UART_DMAAbortOnError:
 1768              	.LFB85:
2517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1769              		.loc 1 2525 0
 1770              		.cfi_startproc
 1771              		@ args = 0, pretend = 0, frame = 0
 1772              		@ frame_needed = 0, uses_anonymous_args = 0
 1773              	.LVL130:
 1774 0000 10B5     		push	{r4, lr}
 1775              	.LCFI14:
 1776              		.cfi_def_cfa_offset 8
 1777              		.cfi_offset 4, -8
 1778              		.cfi_offset 14, -4
2526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1779              		.loc 1 2526 0
 1780 0002 406A     		ldr	r0, [r0, #36]
 1781              	.LVL131:
2527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1782              		.loc 1 2527 0
 1783 0004 0023     		movs	r3, #0
 1784 0006 5A22     		movs	r2, #90
 1785 0008 8352     		strh	r3, [r0, r2]
2528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1786              		.loc 1 2528 0
 1787 000a 083A     		subs	r2, r2, #8
 1788 000c 8352     		strh	r3, [r0, r2]
2529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
ARM GAS  /tmp/ccOLnUHF.s 			page 80


 1789              		.loc 1 2530 0
 1790 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1791              	.LVL132:
2531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1792              		.loc 1 2531 0
 1793              		@ sp needed
 1794 0012 10BD     		pop	{r4, pc}
 1795              		.cfi_endproc
 1796              	.LFE85:
 1798              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 1799              		.align	1
 1800              		.weak	HAL_UART_AbortCpltCallback
 1801              		.syntax unified
 1802              		.code	16
 1803              		.thumb_func
 1804              		.fpu softvfp
 1806              	HAL_UART_AbortCpltCallback:
 1807              	.LFB64:
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1808              		.loc 1 1886 0
 1809              		.cfi_startproc
 1810              		@ args = 0, pretend = 0, frame = 0
 1811              		@ frame_needed = 0, uses_anonymous_args = 0
 1812              		@ link register save eliminated.
 1813              	.LVL133:
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1814              		.loc 1 1893 0
 1815              		@ sp needed
 1816 0000 7047     		bx	lr
 1817              		.cfi_endproc
 1818              	.LFE64:
 1820              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 1821              		.align	1
 1822              		.global	HAL_UART_Abort_IT
 1823              		.syntax unified
 1824              		.code	16
 1825              		.thumb_func
 1826              		.fpu softvfp
 1828              	HAL_UART_Abort_IT:
 1829              	.LFB55:
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 1830              		.loc 1 1404 0
 1831              		.cfi_startproc
 1832              		@ args = 0, pretend = 0, frame = 0
 1833              		@ frame_needed = 0, uses_anonymous_args = 0
 1834              	.LVL134:
 1835 0000 10B5     		push	{r4, lr}
 1836              	.LCFI15:
 1837              		.cfi_def_cfa_offset 8
 1838              		.cfi_offset 4, -8
 1839              		.cfi_offset 14, -4
 1840 0002 0400     		movs	r4, r0
 1841              	.LVL135:
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1842              		.loc 1 1408 0
 1843 0004 0268     		ldr	r2, [r0]
 1844 0006 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccOLnUHF.s 			page 81


 1845 0008 3049     		ldr	r1, .L127
 1846 000a 0B40     		ands	r3, r1
 1847 000c 1360     		str	r3, [r2]
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1848              		.loc 1 1409 0
 1849 000e 0268     		ldr	r2, [r0]
 1850 0010 9368     		ldr	r3, [r2, #8]
 1851 0012 E331     		adds	r1, r1, #227
 1852 0014 FF31     		adds	r1, r1, #255
 1853 0016 8B43     		bics	r3, r1
 1854 0018 9360     		str	r3, [r2, #8]
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1855              		.loc 1 1414 0
 1856 001a 036E     		ldr	r3, [r0, #96]
 1857 001c 002B     		cmp	r3, #0
 1858 001e 05D0     		beq	.L116
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1859              		.loc 1 1418 0
 1860 0020 0268     		ldr	r2, [r0]
 1861 0022 9268     		ldr	r2, [r2, #8]
 1862 0024 1206     		lsls	r2, r2, #24
 1863 0026 1ED5     		bpl	.L117
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1864              		.loc 1 1420 0
 1865 0028 294A     		ldr	r2, .L127+4
 1866 002a 5A63     		str	r2, [r3, #52]
 1867              	.L116:
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1868              		.loc 1 1428 0
 1869 002c 636E     		ldr	r3, [r4, #100]
 1870 002e 002B     		cmp	r3, #0
 1871 0030 05D0     		beq	.L118
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1872              		.loc 1 1432 0
 1873 0032 2268     		ldr	r2, [r4]
 1874 0034 9268     		ldr	r2, [r2, #8]
 1875 0036 5206     		lsls	r2, r2, #25
 1876 0038 18D5     		bpl	.L119
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1877              		.loc 1 1434 0
 1878 003a 264A     		ldr	r2, .L127+8
 1879 003c 5A63     		str	r2, [r3, #52]
 1880              	.L118:
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1881              		.loc 1 1443 0
 1882 003e 2368     		ldr	r3, [r4]
 1883 0040 9A68     		ldr	r2, [r3, #8]
 1884 0042 1206     		lsls	r2, r2, #24
 1885 0044 15D5     		bpl	.L124
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1886              		.loc 1 1446 0
 1887 0046 9A68     		ldr	r2, [r3, #8]
 1888 0048 8021     		movs	r1, #128
 1889 004a 8A43     		bics	r2, r1
 1890 004c 9A60     		str	r2, [r3, #8]
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1891              		.loc 1 1449 0
ARM GAS  /tmp/ccOLnUHF.s 			page 82


 1892 004e 206E     		ldr	r0, [r4, #96]
 1893              	.LVL136:
 1894 0050 0028     		cmp	r0, #0
 1895 0052 33D0     		beq	.L125
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1896              		.loc 1 1455 0
 1897 0054 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1898              	.LVL137:
 1899 0058 0028     		cmp	r0, #0
 1900 005a 31D0     		beq	.L126
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 1901              		.loc 1 1457 0
 1902 005c 236E     		ldr	r3, [r4, #96]
 1903 005e 0022     		movs	r2, #0
 1904 0060 5A63     		str	r2, [r3, #52]
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1905              		.loc 1 1405 0
 1906 0062 0121     		movs	r1, #1
 1907 0064 06E0     		b	.L120
 1908              	.LVL138:
 1909              	.L117:
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1910              		.loc 1 1424 0
 1911 0066 0022     		movs	r2, #0
 1912 0068 5A63     		str	r2, [r3, #52]
 1913 006a DFE7     		b	.L116
 1914              	.L119:
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1915              		.loc 1 1438 0
 1916 006c 0022     		movs	r2, #0
 1917 006e 5A63     		str	r2, [r3, #52]
 1918 0070 E5E7     		b	.L118
 1919              	.L124:
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1920              		.loc 1 1405 0
 1921 0072 0121     		movs	r1, #1
 1922              	.LVL139:
 1923              	.L120:
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1924              		.loc 1 1467 0
 1925 0074 2368     		ldr	r3, [r4]
 1926 0076 9A68     		ldr	r2, [r3, #8]
 1927 0078 5206     		lsls	r2, r2, #25
 1928 007a 23D5     		bpl	.L121
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1929              		.loc 1 1469 0
 1930 007c 9A68     		ldr	r2, [r3, #8]
 1931 007e 4020     		movs	r0, #64
 1932 0080 8243     		bics	r2, r0
 1933 0082 9A60     		str	r2, [r3, #8]
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1934              		.loc 1 1472 0
 1935 0084 606E     		ldr	r0, [r4, #100]
 1936 0086 0028     		cmp	r0, #0
 1937 0088 1CD0     		beq	.L121
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1938              		.loc 1 1478 0
ARM GAS  /tmp/ccOLnUHF.s 			page 83


 1939 008a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1940              	.LVL140:
 1941 008e 0028     		cmp	r0, #0
 1942 0090 1AD0     		beq	.L122
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 1U;
 1943              		.loc 1 1480 0
 1944 0092 636E     		ldr	r3, [r4, #100]
 1945 0094 0022     		movs	r2, #0
 1946 0096 5A63     		str	r2, [r3, #52]
 1947              	.LVL141:
 1948              	.L123:
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1949              		.loc 1 1494 0
 1950 0098 0023     		movs	r3, #0
 1951 009a 5222     		movs	r2, #82
 1952 009c A352     		strh	r3, [r4, r2]
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1953              		.loc 1 1495 0
 1954 009e 0832     		adds	r2, r2, #8
 1955 00a0 A352     		strh	r3, [r4, r2]
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1956              		.loc 1 1498 0
 1957 00a2 E366     		str	r3, [r4, #108]
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1958              		.loc 1 1501 0
 1959 00a4 2368     		ldr	r3, [r4]
 1960 00a6 4B3A     		subs	r2, r2, #75
 1961 00a8 1A62     		str	r2, [r3, #32]
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1962              		.loc 1 1504 0
 1963 00aa 2023     		movs	r3, #32
 1964 00ac 5A32     		adds	r2, r2, #90
 1965 00ae A354     		strb	r3, [r4, r2]
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1966              		.loc 1 1505 0
 1967 00b0 0132     		adds	r2, r2, #1
 1968 00b2 A354     		strb	r3, [r4, r2]
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1969              		.loc 1 1508 0
 1970 00b4 2000     		movs	r0, r4
 1971 00b6 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1972              	.LVL142:
 1973 00ba 05E0     		b	.L122
 1974              	.LVL143:
 1975              	.L125:
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1976              		.loc 1 1405 0
 1977 00bc 0121     		movs	r1, #1
 1978 00be D9E7     		b	.L120
 1979              	.L126:
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 1980              		.loc 1 1461 0
 1981 00c0 0021     		movs	r1, #0
 1982 00c2 D7E7     		b	.L120
 1983              	.LVL144:
 1984              	.L121:
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
ARM GAS  /tmp/ccOLnUHF.s 			page 84


 1985              		.loc 1 1491 0
 1986 00c4 0129     		cmp	r1, #1
 1987 00c6 E7D0     		beq	.L123
 1988              	.LVL145:
 1989              	.L122:
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1990              		.loc 1 1512 0
 1991 00c8 0020     		movs	r0, #0
 1992              		@ sp needed
 1993              	.LVL146:
 1994 00ca 10BD     		pop	{r4, pc}
 1995              	.L128:
 1996              		.align	2
 1997              	.L127:
 1998 00cc 1FFEFFFF 		.word	-481
 1999 00d0 00000000 		.word	UART_DMATxAbortCallback
 2000 00d4 00000000 		.word	UART_DMARxAbortCallback
 2001              		.cfi_endproc
 2002              	.LFE55:
 2004              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 2005              		.align	1
 2006              		.syntax unified
 2007              		.code	16
 2008              		.thumb_func
 2009              		.fpu softvfp
 2011              	UART_DMARxAbortCallback:
 2012              	.LFB87:
2532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
2544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
2553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
2558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
2559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset errorCode */
2561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/ccOLnUHF.s 			page 85


2562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2013              		.loc 1 2584 0
 2014              		.cfi_startproc
 2015              		@ args = 0, pretend = 0, frame = 0
 2016              		@ frame_needed = 0, uses_anonymous_args = 0
 2017              	.LVL147:
 2018 0000 10B5     		push	{r4, lr}
 2019              	.LCFI16:
 2020              		.cfi_def_cfa_offset 8
 2021              		.cfi_offset 4, -8
 2022              		.cfi_offset 14, -4
2585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 2023              		.loc 1 2585 0
 2024 0002 406A     		ldr	r0, [r0, #36]
 2025              	.LVL148:
2586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 2026              		.loc 1 2587 0
 2027 0004 436E     		ldr	r3, [r0, #100]
 2028 0006 0022     		movs	r2, #0
 2029 0008 5A63     		str	r2, [r3, #52]
2588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 2030              		.loc 1 2590 0
 2031 000a 036E     		ldr	r3, [r0, #96]
 2032 000c 002B     		cmp	r3, #0
 2033 000e 03D0     		beq	.L130
2591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
 2034              		.loc 1 2592 0
 2035 0010 5B6B     		ldr	r3, [r3, #52]
 2036 0012 002B     		cmp	r3, #0
 2037 0014 00D0     		beq	.L130
 2038              	.LVL149:
ARM GAS  /tmp/ccOLnUHF.s 			page 86


 2039              	.L129:
2593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
2595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
2600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
2601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset errorCode */
2603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2040              		.loc 1 2614 0
 2041              		@ sp needed
 2042 0016 10BD     		pop	{r4, pc}
 2043              	.LVL150:
 2044              	.L130:
2599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2045              		.loc 1 2599 0
 2046 0018 0023     		movs	r3, #0
 2047 001a 5222     		movs	r2, #82
 2048 001c 8352     		strh	r3, [r0, r2]
2600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2049              		.loc 1 2600 0
 2050 001e 0832     		adds	r2, r2, #8
 2051 0020 8352     		strh	r3, [r0, r2]
2603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2052              		.loc 1 2603 0
 2053 0022 C366     		str	r3, [r0, #108]
2606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2054              		.loc 1 2606 0
 2055 0024 0368     		ldr	r3, [r0]
 2056 0026 4B3A     		subs	r2, r2, #75
 2057 0028 1A62     		str	r2, [r3, #32]
2609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2058              		.loc 1 2609 0
 2059 002a 2023     		movs	r3, #32
 2060 002c 5A32     		adds	r2, r2, #90
 2061 002e 8354     		strb	r3, [r0, r2]
2610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2062              		.loc 1 2610 0
 2063 0030 0132     		adds	r2, r2, #1
 2064 0032 8354     		strb	r3, [r0, r2]
2613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2065              		.loc 1 2613 0
 2066 0034 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
ARM GAS  /tmp/ccOLnUHF.s 			page 87


 2067              	.LVL151:
 2068 0038 EDE7     		b	.L129
 2069              		.cfi_endproc
 2070              	.LFE87:
 2072              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 2073              		.align	1
 2074              		.syntax unified
 2075              		.code	16
 2076              		.thumb_func
 2077              		.fpu softvfp
 2079              	UART_DMATxAbortCallback:
 2080              	.LFB86:
2542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 2081              		.loc 1 2542 0
 2082              		.cfi_startproc
 2083              		@ args = 0, pretend = 0, frame = 0
 2084              		@ frame_needed = 0, uses_anonymous_args = 0
 2085              	.LVL152:
 2086 0000 10B5     		push	{r4, lr}
 2087              	.LCFI17:
 2088              		.cfi_def_cfa_offset 8
 2089              		.cfi_offset 4, -8
 2090              		.cfi_offset 14, -4
2543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2091              		.loc 1 2543 0
 2092 0002 406A     		ldr	r0, [r0, #36]
 2093              	.LVL153:
2545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2094              		.loc 1 2545 0
 2095 0004 036E     		ldr	r3, [r0, #96]
 2096 0006 0022     		movs	r2, #0
 2097 0008 5A63     		str	r2, [r3, #52]
2548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2098              		.loc 1 2548 0
 2099 000a 436E     		ldr	r3, [r0, #100]
 2100 000c 002B     		cmp	r3, #0
 2101 000e 03D0     		beq	.L133
2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2102              		.loc 1 2550 0
 2103 0010 5B6B     		ldr	r3, [r3, #52]
 2104 0012 002B     		cmp	r3, #0
 2105 0014 00D0     		beq	.L133
 2106              	.LVL154:
 2107              	.L132:
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2108              		.loc 1 2572 0
 2109              		@ sp needed
 2110 0016 10BD     		pop	{r4, pc}
 2111              	.LVL155:
 2112              	.L133:
2557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2113              		.loc 1 2557 0
 2114 0018 0023     		movs	r3, #0
 2115 001a 5222     		movs	r2, #82
 2116 001c 8352     		strh	r3, [r0, r2]
2558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2117              		.loc 1 2558 0
ARM GAS  /tmp/ccOLnUHF.s 			page 88


 2118 001e 0832     		adds	r2, r2, #8
 2119 0020 8352     		strh	r3, [r0, r2]
2561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2120              		.loc 1 2561 0
 2121 0022 C366     		str	r3, [r0, #108]
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2122              		.loc 1 2564 0
 2123 0024 0368     		ldr	r3, [r0]
 2124 0026 4B3A     		subs	r2, r2, #75
 2125 0028 1A62     		str	r2, [r3, #32]
2567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2126              		.loc 1 2567 0
 2127 002a 2023     		movs	r3, #32
 2128 002c 5A32     		adds	r2, r2, #90
 2129 002e 8354     		strb	r3, [r0, r2]
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2130              		.loc 1 2568 0
 2131 0030 0132     		adds	r2, r2, #1
 2132 0032 8354     		strb	r3, [r0, r2]
2571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2133              		.loc 1 2571 0
 2134 0034 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2135              	.LVL156:
 2136 0038 EDE7     		b	.L132
 2137              		.cfi_endproc
 2138              	.LFE86:
 2140              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 2141              		.align	1
 2142              		.weak	HAL_UART_AbortTransmitCpltCallback
 2143              		.syntax unified
 2144              		.code	16
 2145              		.thumb_func
 2146              		.fpu softvfp
 2148              	HAL_UART_AbortTransmitCpltCallback:
 2149              	.LFB65:
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2150              		.loc 1 1901 0
 2151              		.cfi_startproc
 2152              		@ args = 0, pretend = 0, frame = 0
 2153              		@ frame_needed = 0, uses_anonymous_args = 0
 2154              		@ link register save eliminated.
 2155              	.LVL157:
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2156              		.loc 1 1908 0
 2157              		@ sp needed
 2158 0000 7047     		bx	lr
 2159              		.cfi_endproc
 2160              	.LFE65:
 2162              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2163              		.align	1
 2164              		.global	HAL_UART_AbortTransmit_IT
 2165              		.syntax unified
 2166              		.code	16
 2167              		.thumb_func
 2168              		.fpu softvfp
 2170              	HAL_UART_AbortTransmit_IT:
 2171              	.LFB56:
ARM GAS  /tmp/ccOLnUHF.s 			page 89


1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2172              		.loc 1 1529 0
 2173              		.cfi_startproc
 2174              		@ args = 0, pretend = 0, frame = 0
 2175              		@ frame_needed = 0, uses_anonymous_args = 0
 2176              	.LVL158:
 2177 0000 10B5     		push	{r4, lr}
 2178              	.LCFI18:
 2179              		.cfi_def_cfa_offset 8
 2180              		.cfi_offset 4, -8
 2181              		.cfi_offset 14, -4
 2182 0002 0400     		movs	r4, r0
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2183              		.loc 1 1531 0
 2184 0004 0268     		ldr	r2, [r0]
 2185 0006 1368     		ldr	r3, [r2]
 2186 0008 C021     		movs	r1, #192
 2187 000a 8B43     		bics	r3, r1
 2188 000c 1360     		str	r3, [r2]
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2189              		.loc 1 1534 0
 2190 000e 0368     		ldr	r3, [r0]
 2191 0010 9A68     		ldr	r2, [r3, #8]
 2192 0012 1206     		lsls	r2, r2, #24
 2193 0014 1BD5     		bpl	.L137
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2194              		.loc 1 1536 0
 2195 0016 9A68     		ldr	r2, [r3, #8]
 2196 0018 4039     		subs	r1, r1, #64
 2197 001a 8A43     		bics	r2, r1
 2198 001c 9A60     		str	r2, [r3, #8]
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2199              		.loc 1 1539 0
 2200 001e 036E     		ldr	r3, [r0, #96]
 2201 0020 002B     		cmp	r3, #0
 2202 0022 0BD0     		beq	.L138
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2203              		.loc 1 1543 0
 2204 0024 0E4A     		ldr	r2, .L140
 2205 0026 5A63     		str	r2, [r3, #52]
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2206              		.loc 1 1546 0
 2207 0028 006E     		ldr	r0, [r0, #96]
 2208              	.LVL159:
 2209 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2210              	.LVL160:
 2211 002e 0028     		cmp	r0, #0
 2212 0030 02D0     		beq	.L139
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2213              		.loc 1 1549 0
 2214 0032 206E     		ldr	r0, [r4, #96]
 2215 0034 436B     		ldr	r3, [r0, #52]
 2216 0036 9847     		blx	r3
 2217              	.LVL161:
 2218              	.L139:
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2219              		.loc 1 1577 0
ARM GAS  /tmp/ccOLnUHF.s 			page 90


 2220 0038 0020     		movs	r0, #0
 2221              		@ sp needed
 2222              	.LVL162:
 2223 003a 10BD     		pop	{r4, pc}
 2224              	.LVL163:
 2225              	.L138:
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2226              		.loc 1 1555 0
 2227 003c 5223     		movs	r3, #82
 2228 003e 0022     		movs	r2, #0
 2229 0040 C252     		strh	r2, [r0, r3]
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2230              		.loc 1 1558 0
 2231 0042 1733     		adds	r3, r3, #23
 2232 0044 2032     		adds	r2, r2, #32
 2233 0046 C254     		strb	r2, [r0, r3]
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2234              		.loc 1 1561 0
 2235 0048 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2236              	.LVL164:
 2237 004c F4E7     		b	.L139
 2238              	.LVL165:
 2239              	.L137:
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2240              		.loc 1 1567 0
 2241 004e 5223     		movs	r3, #82
 2242 0050 0022     		movs	r2, #0
 2243 0052 C252     		strh	r2, [r0, r3]
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2244              		.loc 1 1570 0
 2245 0054 1733     		adds	r3, r3, #23
 2246 0056 2032     		adds	r2, r2, #32
 2247 0058 C254     		strb	r2, [r0, r3]
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2248              		.loc 1 1573 0
 2249 005a FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2250              	.LVL166:
 2251 005e EBE7     		b	.L139
 2252              	.L141:
 2253              		.align	2
 2254              	.L140:
 2255 0060 00000000 		.word	UART_DMATxOnlyAbortCallback
 2256              		.cfi_endproc
 2257              	.LFE56:
 2259              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 2260              		.align	1
 2261              		.syntax unified
 2262              		.code	16
 2263              		.thumb_func
 2264              		.fpu softvfp
 2266              	UART_DMATxOnlyAbortCallback:
 2267              	.LFB88:
2615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
ARM GAS  /tmp/ccOLnUHF.s 			page 91


2620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2268              		.loc 1 2626 0
 2269              		.cfi_startproc
 2270              		@ args = 0, pretend = 0, frame = 0
 2271              		@ frame_needed = 0, uses_anonymous_args = 0
 2272              	.LVL167:
 2273 0000 10B5     		push	{r4, lr}
 2274              	.LCFI19:
 2275              		.cfi_def_cfa_offset 8
 2276              		.cfi_offset 4, -8
 2277              		.cfi_offset 14, -4
2627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 2278              		.loc 1 2627 0
 2279 0002 406A     		ldr	r0, [r0, #36]
 2280              	.LVL168:
2628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2281              		.loc 1 2629 0
 2282 0004 5223     		movs	r3, #82
 2283 0006 0022     		movs	r2, #0
 2284 0008 C252     		strh	r2, [r0, r3]
2630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2285              		.loc 1 2632 0
 2286 000a 1733     		adds	r3, r3, #23
 2287 000c 2032     		adds	r2, r2, #32
 2288 000e C254     		strb	r2, [r0, r3]
2633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 2289              		.loc 1 2635 0
 2290 0010 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2291              	.LVL169:
2636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2292              		.loc 1 2636 0
 2293              		@ sp needed
 2294 0014 10BD     		pop	{r4, pc}
 2295              		.cfi_endproc
 2296              	.LFE88:
 2298              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 2299              		.align	1
 2300              		.weak	HAL_UART_AbortReceiveCpltCallback
 2301              		.syntax unified
 2302              		.code	16
 2303              		.thumb_func
 2304              		.fpu softvfp
 2306              	HAL_UART_AbortReceiveCpltCallback:
 2307              	.LFB66:
1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2308              		.loc 1 1916 0
ARM GAS  /tmp/ccOLnUHF.s 			page 92


 2309              		.cfi_startproc
 2310              		@ args = 0, pretend = 0, frame = 0
 2311              		@ frame_needed = 0, uses_anonymous_args = 0
 2312              		@ link register save eliminated.
 2313              	.LVL170:
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2314              		.loc 1 1923 0
 2315              		@ sp needed
 2316 0000 7047     		bx	lr
 2317              		.cfi_endproc
 2318              	.LFE66:
 2320              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2321              		.align	1
 2322              		.global	HAL_UART_AbortReceive_IT
 2323              		.syntax unified
 2324              		.code	16
 2325              		.thumb_func
 2326              		.fpu softvfp
 2328              	HAL_UART_AbortReceive_IT:
 2329              	.LFB57:
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2330              		.loc 1 1594 0
 2331              		.cfi_startproc
 2332              		@ args = 0, pretend = 0, frame = 0
 2333              		@ frame_needed = 0, uses_anonymous_args = 0
 2334              	.LVL171:
 2335 0000 10B5     		push	{r4, lr}
 2336              	.LCFI20:
 2337              		.cfi_def_cfa_offset 8
 2338              		.cfi_offset 4, -8
 2339              		.cfi_offset 14, -4
 2340 0002 0400     		movs	r4, r0
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2341              		.loc 1 1596 0
 2342 0004 0268     		ldr	r2, [r0]
 2343 0006 1368     		ldr	r3, [r2]
 2344 0008 1B49     		ldr	r1, .L148
 2345 000a 0B40     		ands	r3, r1
 2346 000c 1360     		str	r3, [r2]
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2347              		.loc 1 1597 0
 2348 000e 0268     		ldr	r2, [r0]
 2349 0010 9368     		ldr	r3, [r2, #8]
 2350 0012 2331     		adds	r1, r1, #35
 2351 0014 FF31     		adds	r1, r1, #255
 2352 0016 8B43     		bics	r3, r1
 2353 0018 9360     		str	r3, [r2, #8]
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2354              		.loc 1 1600 0
 2355 001a 0368     		ldr	r3, [r0]
 2356 001c 9A68     		ldr	r2, [r3, #8]
 2357 001e 5206     		lsls	r2, r2, #25
 2358 0020 1ED5     		bpl	.L145
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2359              		.loc 1 1602 0
 2360 0022 9A68     		ldr	r2, [r3, #8]
 2361 0024 3F31     		adds	r1, r1, #63
ARM GAS  /tmp/ccOLnUHF.s 			page 93


 2362 0026 8A43     		bics	r2, r1
 2363 0028 9A60     		str	r2, [r3, #8]
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2364              		.loc 1 1605 0
 2365 002a 436E     		ldr	r3, [r0, #100]
 2366 002c 002B     		cmp	r3, #0
 2367 002e 0BD0     		beq	.L146
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2368              		.loc 1 1609 0
 2369 0030 124A     		ldr	r2, .L148+4
 2370 0032 5A63     		str	r2, [r3, #52]
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2371              		.loc 1 1612 0
 2372 0034 406E     		ldr	r0, [r0, #100]
 2373              	.LVL172:
 2374 0036 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2375              	.LVL173:
 2376 003a 0028     		cmp	r0, #0
 2377 003c 02D0     		beq	.L147
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2378              		.loc 1 1615 0
 2379 003e 606E     		ldr	r0, [r4, #100]
 2380 0040 436B     		ldr	r3, [r0, #52]
 2381 0042 9847     		blx	r3
 2382              	.LVL174:
 2383              	.L147:
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2384              		.loc 1 1649 0
 2385 0044 0020     		movs	r0, #0
 2386              		@ sp needed
 2387              	.LVL175:
 2388 0046 10BD     		pop	{r4, pc}
 2389              	.LVL176:
 2390              	.L146:
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2391              		.loc 1 1621 0
 2392 0048 5A23     		movs	r3, #90
 2393 004a 0022     		movs	r2, #0
 2394 004c C252     		strh	r2, [r0, r3]
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2395              		.loc 1 1624 0
 2396 004e 0368     		ldr	r3, [r0]
 2397 0050 0F32     		adds	r2, r2, #15
 2398 0052 1A62     		str	r2, [r3, #32]
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2399              		.loc 1 1627 0
 2400 0054 6A23     		movs	r3, #106
 2401 0056 1132     		adds	r2, r2, #17
 2402 0058 C254     		strb	r2, [r0, r3]
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2403              		.loc 1 1630 0
 2404 005a FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2405              	.LVL177:
 2406 005e F1E7     		b	.L147
 2407              	.LVL178:
 2408              	.L145:
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccOLnUHF.s 			page 94


 2409              		.loc 1 1636 0
 2410 0060 5A22     		movs	r2, #90
 2411 0062 0021     		movs	r1, #0
 2412 0064 8152     		strh	r1, [r0, r2]
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2413              		.loc 1 1639 0
 2414 0066 4B3A     		subs	r2, r2, #75
 2415 0068 1A62     		str	r2, [r3, #32]
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2416              		.loc 1 1642 0
 2417 006a 6A23     		movs	r3, #106
 2418 006c 1132     		adds	r2, r2, #17
 2419 006e C254     		strb	r2, [r0, r3]
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2420              		.loc 1 1645 0
 2421 0070 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2422              	.LVL179:
 2423 0074 E6E7     		b	.L147
 2424              	.L149:
 2425 0076 C046     		.align	2
 2426              	.L148:
 2427 0078 DFFEFFFF 		.word	-289
 2428 007c 00000000 		.word	UART_DMARxOnlyAbortCallback
 2429              		.cfi_endproc
 2430              	.LFE57:
 2432              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 2433              		.align	1
 2434              		.syntax unified
 2435              		.code	16
 2436              		.thumb_func
 2437              		.fpu softvfp
 2439              	UART_DMARxOnlyAbortCallback:
 2440              	.LFB89:
2637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2441              		.loc 1 2647 0
 2442              		.cfi_startproc
 2443              		@ args = 0, pretend = 0, frame = 0
 2444              		@ frame_needed = 0, uses_anonymous_args = 0
 2445              	.LVL180:
 2446 0000 10B5     		push	{r4, lr}
 2447              	.LCFI21:
 2448              		.cfi_def_cfa_offset 8
 2449              		.cfi_offset 4, -8
 2450              		.cfi_offset 14, -4
2648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2451              		.loc 1 2648 0
 2452 0002 406A     		ldr	r0, [r0, #36]
ARM GAS  /tmp/ccOLnUHF.s 			page 95


 2453              	.LVL181:
2649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2454              		.loc 1 2650 0
 2455 0004 5A23     		movs	r3, #90
 2456 0006 0022     		movs	r2, #0
 2457 0008 C252     		strh	r2, [r0, r3]
2651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2458              		.loc 1 2653 0
 2459 000a 0368     		ldr	r3, [r0]
 2460 000c 0F32     		adds	r2, r2, #15
 2461 000e 1A62     		str	r2, [r3, #32]
2654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2462              		.loc 1 2656 0
 2463 0010 6A23     		movs	r3, #106
 2464 0012 1132     		adds	r2, r2, #17
 2465 0014 C254     		strb	r2, [r0, r3]
2657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 2466              		.loc 1 2659 0
 2467 0016 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2468              	.LVL182:
2660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2469              		.loc 1 2660 0
 2470              		@ sp needed
 2471 001a 10BD     		pop	{r4, pc}
 2472              		.cfi_endproc
 2473              	.LFE89:
 2475              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2476              		.align	1
 2477              		.global	HAL_MultiProcessor_EnterMuteMode
 2478              		.syntax unified
 2479              		.code	16
 2480              		.thumb_func
 2481              		.fpu softvfp
 2483              	HAL_MultiProcessor_EnterMuteMode:
 2484              	.LFB69:
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 2485              		.loc 1 1996 0
 2486              		.cfi_startproc
 2487              		@ args = 0, pretend = 0, frame = 0
 2488              		@ frame_needed = 0, uses_anonymous_args = 0
 2489              		@ link register save eliminated.
 2490              	.LVL183:
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2491              		.loc 1 1997 0
 2492 0000 0268     		ldr	r2, [r0]
 2493 0002 9369     		ldr	r3, [r2, #24]
 2494 0004 0421     		movs	r1, #4
 2495 0006 0B43     		orrs	r3, r1
 2496 0008 9361     		str	r3, [r2, #24]
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccOLnUHF.s 			page 96


 2497              		.loc 1 1998 0
 2498              		@ sp needed
 2499 000a 7047     		bx	lr
 2500              		.cfi_endproc
 2501              	.LFE69:
 2503              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 2504              		.align	1
 2505              		.global	HAL_HalfDuplex_EnableTransmitter
 2506              		.syntax unified
 2507              		.code	16
 2508              		.thumb_func
 2509              		.fpu softvfp
 2511              	HAL_HalfDuplex_EnableTransmitter:
 2512              	.LFB70:
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 2513              		.loc 1 2006 0
 2514              		.cfi_startproc
 2515              		@ args = 0, pretend = 0, frame = 0
 2516              		@ frame_needed = 0, uses_anonymous_args = 0
 2517              	.LVL184:
 2518 0000 30B5     		push	{r4, r5, lr}
 2519              	.LCFI22:
 2520              		.cfi_def_cfa_offset 12
 2521              		.cfi_offset 4, -12
 2522              		.cfi_offset 5, -8
 2523              		.cfi_offset 14, -4
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2524              		.loc 1 2008 0
 2525 0002 6823     		movs	r3, #104
 2526 0004 C35C     		ldrb	r3, [r0, r3]
 2527 0006 012B     		cmp	r3, #1
 2528 0008 15D0     		beq	.L154
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2529              		.loc 1 2008 0 is_stmt 0 discriminator 2
 2530 000a 6822     		movs	r2, #104
 2531 000c 0123     		movs	r3, #1
 2532 000e 8354     		strb	r3, [r0, r2]
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2533              		.loc 1 2009 0 is_stmt 1 discriminator 2
 2534 0010 6921     		movs	r1, #105
 2535 0012 2333     		adds	r3, r3, #35
 2536 0014 4354     		strb	r3, [r0, r1]
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
 2537              		.loc 1 2012 0 discriminator 2
 2538 0016 0468     		ldr	r4, [r0]
 2539 0018 2368     		ldr	r3, [r4]
 2540 001a 0C25     		movs	r5, #12
 2541 001c AB43     		bics	r3, r5
 2542 001e 2360     		str	r3, [r4]
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2543              		.loc 1 2014 0 discriminator 2
 2544 0020 0468     		ldr	r4, [r0]
 2545 0022 2368     		ldr	r3, [r4]
 2546 0024 043D     		subs	r5, r5, #4
 2547 0026 2B43     		orrs	r3, r5
 2548 0028 2360     		str	r3, [r4]
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccOLnUHF.s 			page 97


 2549              		.loc 1 2016 0 discriminator 2
 2550 002a 2023     		movs	r3, #32
 2551 002c 4354     		strb	r3, [r0, r1]
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2552              		.loc 1 2019 0 discriminator 2
 2553 002e 0023     		movs	r3, #0
 2554 0030 8354     		strb	r3, [r0, r2]
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2555              		.loc 1 2021 0 discriminator 2
 2556 0032 0020     		movs	r0, #0
 2557              	.LVL185:
 2558              	.L153:
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2559              		.loc 1 2022 0
 2560              		@ sp needed
 2561 0034 30BD     		pop	{r4, r5, pc}
 2562              	.LVL186:
 2563              	.L154:
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2564              		.loc 1 2008 0
 2565 0036 0220     		movs	r0, #2
 2566              	.LVL187:
 2567 0038 FCE7     		b	.L153
 2568              		.cfi_endproc
 2569              	.LFE70:
 2571              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 2572              		.align	1
 2573              		.global	HAL_HalfDuplex_EnableReceiver
 2574              		.syntax unified
 2575              		.code	16
 2576              		.thumb_func
 2577              		.fpu softvfp
 2579              	HAL_HalfDuplex_EnableReceiver:
 2580              	.LFB71:
2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 2581              		.loc 1 2030 0
 2582              		.cfi_startproc
 2583              		@ args = 0, pretend = 0, frame = 0
 2584              		@ frame_needed = 0, uses_anonymous_args = 0
 2585              	.LVL188:
 2586 0000 30B5     		push	{r4, r5, lr}
 2587              	.LCFI23:
 2588              		.cfi_def_cfa_offset 12
 2589              		.cfi_offset 4, -12
 2590              		.cfi_offset 5, -8
 2591              		.cfi_offset 14, -4
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2592              		.loc 1 2032 0
 2593 0002 6823     		movs	r3, #104
 2594 0004 C35C     		ldrb	r3, [r0, r3]
 2595 0006 012B     		cmp	r3, #1
 2596 0008 15D0     		beq	.L157
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2597              		.loc 1 2032 0 is_stmt 0 discriminator 2
 2598 000a 6822     		movs	r2, #104
 2599 000c 0123     		movs	r3, #1
 2600 000e 8354     		strb	r3, [r0, r2]
ARM GAS  /tmp/ccOLnUHF.s 			page 98


2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2601              		.loc 1 2033 0 is_stmt 1 discriminator 2
 2602 0010 6921     		movs	r1, #105
 2603 0012 2333     		adds	r3, r3, #35
 2604 0014 4354     		strb	r3, [r0, r1]
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
 2605              		.loc 1 2036 0 discriminator 2
 2606 0016 0468     		ldr	r4, [r0]
 2607 0018 2368     		ldr	r3, [r4]
 2608 001a 0C25     		movs	r5, #12
 2609 001c AB43     		bics	r3, r5
 2610 001e 2360     		str	r3, [r4]
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2611              		.loc 1 2038 0 discriminator 2
 2612 0020 0468     		ldr	r4, [r0]
 2613 0022 2368     		ldr	r3, [r4]
 2614 0024 083D     		subs	r5, r5, #8
 2615 0026 2B43     		orrs	r3, r5
 2616 0028 2360     		str	r3, [r4]
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
 2617              		.loc 1 2040 0 discriminator 2
 2618 002a 2023     		movs	r3, #32
 2619 002c 4354     		strb	r3, [r0, r1]
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2620              		.loc 1 2042 0 discriminator 2
 2621 002e 0023     		movs	r3, #0
 2622 0030 8354     		strb	r3, [r0, r2]
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2623              		.loc 1 2044 0 discriminator 2
 2624 0032 0020     		movs	r0, #0
 2625              	.LVL189:
 2626              	.L156:
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2627              		.loc 1 2045 0
 2628              		@ sp needed
 2629 0034 30BD     		pop	{r4, r5, pc}
 2630              	.LVL190:
 2631              	.L157:
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2632              		.loc 1 2032 0
 2633 0036 0220     		movs	r0, #2
 2634              	.LVL191:
 2635 0038 FCE7     		b	.L156
 2636              		.cfi_endproc
 2637              	.LFE71:
 2639              		.section	.text.HAL_UART_GetState,"ax",%progbits
 2640              		.align	1
 2641              		.global	HAL_UART_GetState
 2642              		.syntax unified
 2643              		.code	16
 2644              		.thumb_func
 2645              		.fpu softvfp
 2647              	HAL_UART_GetState:
 2648              	.LFB72:
2074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 2649              		.loc 1 2074 0
 2650              		.cfi_startproc
ARM GAS  /tmp/ccOLnUHF.s 			page 99


 2651              		@ args = 0, pretend = 0, frame = 0
 2652              		@ frame_needed = 0, uses_anonymous_args = 0
 2653              		@ link register save eliminated.
 2654              	.LVL192:
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp2 = huart->RxState;
 2655              		.loc 1 2076 0
 2656 0000 6923     		movs	r3, #105
 2657 0002 C35C     		ldrb	r3, [r0, r3]
 2658              	.LVL193:
2077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2659              		.loc 1 2077 0
 2660 0004 6A22     		movs	r2, #106
 2661 0006 805C     		ldrb	r0, [r0, r2]
 2662              	.LVL194:
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2663              		.loc 1 2079 0
 2664 0008 1843     		orrs	r0, r3
 2665              	.LVL195:
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2666              		.loc 1 2080 0
 2667              		@ sp needed
 2668 000a 7047     		bx	lr
 2669              		.cfi_endproc
 2670              	.LFE72:
 2672              		.section	.text.HAL_UART_GetError,"ax",%progbits
 2673              		.align	1
 2674              		.global	HAL_UART_GetError
 2675              		.syntax unified
 2676              		.code	16
 2677              		.thumb_func
 2678              		.fpu softvfp
 2680              	HAL_UART_GetError:
 2681              	.LFB73:
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return huart->ErrorCode;
 2682              		.loc 1 2089 0
 2683              		.cfi_startproc
 2684              		@ args = 0, pretend = 0, frame = 0
 2685              		@ frame_needed = 0, uses_anonymous_args = 0
 2686              		@ link register save eliminated.
 2687              	.LVL196:
2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2688              		.loc 1 2090 0
 2689 0000 C06E     		ldr	r0, [r0, #108]
 2690              	.LVL197:
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 2691              		.loc 1 2091 0
 2692              		@ sp needed
 2693 0002 7047     		bx	lr
 2694              		.cfi_endproc
 2695              	.LFE73:
 2697              		.global	__aeabi_uidiv
 2698              		.section	.text.UART_SetConfig,"ax",%progbits
 2699              		.align	1
 2700              		.global	UART_SetConfig
 2701              		.syntax unified
 2702              		.code	16
 2703              		.thumb_func
ARM GAS  /tmp/ccOLnUHF.s 			page 100


 2704              		.fpu softvfp
 2706              	UART_SetConfig:
 2707              	.LFB74:
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 2708              		.loc 1 2110 0
 2709              		.cfi_startproc
 2710              		@ args = 0, pretend = 0, frame = 0
 2711              		@ frame_needed = 0, uses_anonymous_args = 0
 2712              	.LVL198:
 2713 0000 70B5     		push	{r4, r5, r6, lr}
 2714              	.LCFI24:
 2715              		.cfi_def_cfa_offset 16
 2716              		.cfi_offset 4, -16
 2717              		.cfi_offset 5, -12
 2718              		.cfi_offset 6, -8
 2719              		.cfi_offset 14, -4
 2720 0002 0400     		movs	r4, r0
 2721              	.LVL199:
2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2722              		.loc 1 2135 0
 2723 0004 8368     		ldr	r3, [r0, #8]
 2724 0006 0269     		ldr	r2, [r0, #16]
 2725 0008 1343     		orrs	r3, r2
 2726 000a 4269     		ldr	r2, [r0, #20]
 2727 000c 1343     		orrs	r3, r2
 2728 000e C269     		ldr	r2, [r0, #28]
 2729 0010 1343     		orrs	r3, r2
 2730              	.LVL200:
2136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2731              		.loc 1 2136 0
 2732 0012 0168     		ldr	r1, [r0]
 2733 0014 0A68     		ldr	r2, [r1]
 2734 0016 7348     		ldr	r0, .L200
 2735              	.LVL201:
 2736 0018 0240     		ands	r2, r0
 2737 001a 1343     		orrs	r3, r2
 2738              	.LVL202:
 2739 001c 0B60     		str	r3, [r1]
 2740              	.LVL203:
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2741              		.loc 1 2141 0
 2742 001e 2268     		ldr	r2, [r4]
 2743 0020 5368     		ldr	r3, [r2, #4]
 2744 0022 7149     		ldr	r1, .L200+4
 2745 0024 0B40     		ands	r3, r1
 2746 0026 E168     		ldr	r1, [r4, #12]
 2747 0028 0B43     		orrs	r3, r1
 2748 002a 5360     		str	r3, [r2, #4]
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2749              		.loc 1 2149 0
 2750 002c A269     		ldr	r2, [r4, #24]
 2751 002e 236A     		ldr	r3, [r4, #32]
 2752 0030 1A43     		orrs	r2, r3
 2753              	.LVL204:
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2754              		.loc 1 2150 0
 2755 0032 2168     		ldr	r1, [r4]
ARM GAS  /tmp/ccOLnUHF.s 			page 101


 2756 0034 8B68     		ldr	r3, [r1, #8]
 2757 0036 6D48     		ldr	r0, .L200+8
 2758 0038 0340     		ands	r3, r0
 2759 003a 1343     		orrs	r3, r2
 2760 003c 8B60     		str	r3, [r1, #8]
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2761              		.loc 1 2153 0
 2762 003e 2568     		ldr	r5, [r4]
 2763 0040 6B4B     		ldr	r3, .L200+12
 2764 0042 9D42     		cmp	r5, r3
 2765 0044 26D0     		beq	.L193
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2766              		.loc 1 2153 0 is_stmt 0 discriminator 2
 2767 0046 6B4B     		ldr	r3, .L200+16
 2768 0048 9D42     		cmp	r5, r3
 2769 004a 37D0     		beq	.L194
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2770              		.loc 1 2153 0 discriminator 14
 2771 004c 6A4B     		ldr	r3, .L200+20
 2772 004e 9D42     		cmp	r5, r3
 2773 0050 56D0     		beq	.L188
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2774              		.loc 1 2153 0 discriminator 26
 2775 0052 6A4B     		ldr	r3, .L200+24
 2776 0054 9D42     		cmp	r5, r3
 2777 0056 4FD0     		beq	.L195
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2778              		.loc 1 2153 0
 2779 0058 1023     		movs	r3, #16
 2780              	.LVL205:
 2781              	.L166:
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2782              		.loc 1 2156 0 is_stmt 1
 2783 005a 8022     		movs	r2, #128
 2784 005c 1202     		lsls	r2, r2, #8
 2785 005e E169     		ldr	r1, [r4, #28]
 2786 0060 9142     		cmp	r1, r2
 2787 0062 4FD0     		beq	.L196
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2788              		.loc 1 2184 0
 2789 0064 022B     		cmp	r3, #2
 2790 0066 00D1     		bne	.LCB2343
 2791 0068 A0E0     		b	.L181	@long jump
 2792              	.LCB2343:
 2793 006a 00D8     		bhi	.LCB2345
 2794 006c 8EE0     		b	.L197	@long jump
 2795              	.LCB2345:
 2796 006e 042B     		cmp	r3, #4
 2797 0070 00D1     		bne	.LCB2347
 2798 0072 A7E0     		b	.L184	@long jump
 2799              	.LCB2347:
 2800 0074 082B     		cmp	r3, #8
 2801 0076 00D0     		beq	.LCB2349
 2802 0078 B2E0     		b	.L191	@long jump
 2803              	.LCB2349:
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2804              		.loc 1 2196 0
ARM GAS  /tmp/ccOLnUHF.s 			page 102


 2805 007a 6168     		ldr	r1, [r4, #4]
 2806 007c 4808     		lsrs	r0, r1, #1
 2807 007e 8023     		movs	r3, #128
 2808              	.LVL206:
 2809 0080 1B02     		lsls	r3, r3, #8
 2810 0082 9C46     		mov	ip, r3
 2811 0084 6044     		add	r0, r0, ip
 2812 0086 FFF7FEFF 		bl	__aeabi_uidiv
 2813              	.LVL207:
 2814 008a 0004     		lsls	r0, r0, #16
 2815 008c 000C     		lsrs	r0, r0, #16
 2816 008e E860     		str	r0, [r5, #12]
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2817              		.loc 1 2115 0
 2818 0090 0020     		movs	r0, #0
2197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2819              		.loc 1 2197 0
 2820 0092 60E0     		b	.L180
 2821              	.LVL208:
 2822              	.L193:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2823              		.loc 1 2153 0 discriminator 1
 2824 0094 5A4B     		ldr	r3, .L200+28
 2825 0096 1A6B     		ldr	r2, [r3, #48]
 2826              	.LVL209:
 2827 0098 0323     		movs	r3, #3
 2828 009a 1340     		ands	r3, r2
 2829 009c 012B     		cmp	r3, #1
 2830 009e 09D0     		beq	.L163
 2831 00a0 002B     		cmp	r3, #0
 2832 00a2 05D0     		beq	.L164
 2833 00a4 022B     		cmp	r3, #2
 2834 00a6 07D0     		beq	.L165
 2835 00a8 032B     		cmp	r3, #3
 2836 00aa 27D0     		beq	.L186
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2837              		.loc 1 2153 0 is_stmt 0 discriminator 3
 2838 00ac 1023     		movs	r3, #16
 2839 00ae D4E7     		b	.L166
 2840              	.L164:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2841              		.loc 1 2153 0
 2842 00b0 0023     		movs	r3, #0
 2843 00b2 D2E7     		b	.L166
 2844              	.L163:
 2845              	.LVL210:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2846              		.loc 1 2153 0 discriminator 5
 2847 00b4 0423     		movs	r3, #4
 2848 00b6 D0E7     		b	.L166
 2849              	.LVL211:
 2850              	.L165:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2851              		.loc 1 2153 0 discriminator 6
 2852 00b8 0823     		movs	r3, #8
 2853 00ba CEE7     		b	.L166
 2854              	.LVL212:
ARM GAS  /tmp/ccOLnUHF.s 			page 103


 2855              	.L194:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2856              		.loc 1 2153 0 discriminator 13
 2857 00bc 504B     		ldr	r3, .L200+28
 2858 00be 1B6B     		ldr	r3, [r3, #48]
 2859 00c0 C022     		movs	r2, #192
 2860              	.LVL213:
 2861 00c2 9202     		lsls	r2, r2, #10
 2862 00c4 1340     		ands	r3, r2
 2863 00c6 8022     		movs	r2, #128
 2864 00c8 5202     		lsls	r2, r2, #9
 2865 00ca 9342     		cmp	r3, r2
 2866 00cc 0ED0     		beq	.L169
 2867 00ce 09D9     		bls	.L198
 2868 00d0 8022     		movs	r2, #128
 2869 00d2 9202     		lsls	r2, r2, #10
 2870 00d4 9342     		cmp	r3, r2
 2871 00d6 0BD0     		beq	.L172
 2872 00d8 C022     		movs	r2, #192
 2873 00da 9202     		lsls	r2, r2, #10
 2874 00dc 9342     		cmp	r3, r2
 2875 00de 09D1     		bne	.L168
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2876              		.loc 1 2153 0
 2877 00e0 0223     		movs	r3, #2
 2878 00e2 BAE7     		b	.L166
 2879              	.L198:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2880              		.loc 1 2153 0 discriminator 13
 2881 00e4 002B     		cmp	r3, #0
 2882 00e6 05D1     		bne	.L168
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2883              		.loc 1 2153 0
 2884 00e8 0023     		movs	r3, #0
 2885 00ea B6E7     		b	.L166
 2886              	.L169:
 2887              	.LVL214:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2888              		.loc 1 2153 0 discriminator 17
 2889 00ec 0423     		movs	r3, #4
 2890 00ee B4E7     		b	.L166
 2891              	.LVL215:
 2892              	.L172:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2893              		.loc 1 2153 0 discriminator 18
 2894 00f0 0823     		movs	r3, #8
 2895 00f2 B2E7     		b	.L166
 2896              	.LVL216:
 2897              	.L168:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2898              		.loc 1 2153 0 discriminator 15
 2899 00f4 1023     		movs	r3, #16
 2900 00f6 B0E7     		b	.L166
 2901              	.LVL217:
 2902              	.L195:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2903              		.loc 1 2153 0
ARM GAS  /tmp/ccOLnUHF.s 			page 104


 2904 00f8 0023     		movs	r3, #0
 2905 00fa AEE7     		b	.L166
 2906              	.LVL218:
 2907              	.L186:
 2908 00fc 0223     		movs	r3, #2
 2909 00fe ACE7     		b	.L166
 2910              	.LVL219:
 2911              	.L188:
 2912 0100 0023     		movs	r3, #0
 2913 0102 AAE7     		b	.L166
 2914              	.LVL220:
 2915              	.L196:
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2916              		.loc 1 2158 0 is_stmt 1
 2917 0104 022B     		cmp	r3, #2
 2918 0106 27D0     		beq	.L175
 2919 0108 0FD9     		bls	.L199
 2920 010a 042B     		cmp	r3, #4
 2921 010c 2FD0     		beq	.L178
 2922 010e 082B     		cmp	r3, #8
 2923 0110 39D1     		bne	.L190
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2924              		.loc 1 2170 0
 2925 0112 6368     		ldr	r3, [r4, #4]
 2926              	.LVL221:
 2927 0114 5808     		lsrs	r0, r3, #1
 2928 0116 8023     		movs	r3, #128
 2929 0118 5B02     		lsls	r3, r3, #9
 2930 011a 9C46     		mov	ip, r3
 2931 011c 6044     		add	r0, r0, ip
 2932 011e 6168     		ldr	r1, [r4, #4]
 2933 0120 FFF7FEFF 		bl	__aeabi_uidiv
 2934              	.LVL222:
 2935 0124 83B2     		uxth	r3, r0
 2936              	.LVL223:
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2937              		.loc 1 2115 0
 2938 0126 0020     		movs	r0, #0
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2939              		.loc 1 2171 0
 2940 0128 0CE0     		b	.L174
 2941              	.LVL224:
 2942              	.L199:
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2943              		.loc 1 2158 0
 2944 012a 002B     		cmp	r3, #0
 2945 012c 2BD1     		bne	.L190
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2946              		.loc 1 2161 0
 2947 012e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2948              	.LVL225:
 2949 0132 4000     		lsls	r0, r0, #1
 2950 0134 6368     		ldr	r3, [r4, #4]
 2951 0136 5B08     		lsrs	r3, r3, #1
 2952 0138 C018     		adds	r0, r0, r3
 2953 013a 6168     		ldr	r1, [r4, #4]
 2954 013c FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  /tmp/ccOLnUHF.s 			page 105


 2955              	.LVL226:
 2956 0140 83B2     		uxth	r3, r0
 2957              	.LVL227:
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2958              		.loc 1 2115 0
 2959 0142 0020     		movs	r0, #0
 2960              	.LVL228:
 2961              	.L174:
2178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2962              		.loc 1 2178 0
 2963 0144 0F22     		movs	r2, #15
 2964 0146 1900     		movs	r1, r3
 2965 0148 9143     		bics	r1, r2
 2966              	.LVL229:
2179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 2967              		.loc 1 2179 0
 2968 014a 5B10     		asrs	r3, r3, #1
 2969              	.LVL230:
 2970 014c 083A     		subs	r2, r2, #8
 2971 014e 1340     		ands	r3, r2
 2972 0150 0B43     		orrs	r3, r1
 2973              	.LVL231:
2180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2974              		.loc 1 2180 0
 2975 0152 2268     		ldr	r2, [r4]
 2976 0154 D360     		str	r3, [r2, #12]
 2977              	.LVL232:
 2978              	.L180:
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2979              		.loc 1 2207 0
 2980              		@ sp needed
 2981              	.LVL233:
 2982 0156 70BD     		pop	{r4, r5, r6, pc}
 2983              	.LVL234:
 2984              	.L175:
2164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2985              		.loc 1 2164 0
 2986 0158 6368     		ldr	r3, [r4, #4]
 2987              	.LVL235:
 2988 015a 5808     		lsrs	r0, r3, #1
 2989 015c 294B     		ldr	r3, .L200+32
 2990 015e 9C46     		mov	ip, r3
 2991 0160 6044     		add	r0, r0, ip
 2992 0162 6168     		ldr	r1, [r4, #4]
 2993 0164 FFF7FEFF 		bl	__aeabi_uidiv
 2994              	.LVL236:
 2995 0168 83B2     		uxth	r3, r0
 2996              	.LVL237:
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2997              		.loc 1 2115 0
 2998 016a 0020     		movs	r0, #0
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 2999              		.loc 1 2165 0
 3000 016c EAE7     		b	.L174
 3001              	.LVL238:
 3002              	.L178:
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccOLnUHF.s 			page 106


 3003              		.loc 1 2167 0
 3004 016e FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3005              	.LVL239:
 3006 0172 4000     		lsls	r0, r0, #1
 3007 0174 6368     		ldr	r3, [r4, #4]
 3008 0176 5B08     		lsrs	r3, r3, #1
 3009 0178 C018     		adds	r0, r0, r3
 3010 017a 6168     		ldr	r1, [r4, #4]
 3011 017c FFF7FEFF 		bl	__aeabi_uidiv
 3012              	.LVL240:
 3013 0180 83B2     		uxth	r3, r0
 3014              	.LVL241:
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3015              		.loc 1 2115 0
 3016 0182 0020     		movs	r0, #0
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3017              		.loc 1 2168 0
 3018 0184 DEE7     		b	.L174
 3019              	.LVL242:
 3020              	.L190:
2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 3021              		.loc 1 2174 0
 3022 0186 0120     		movs	r0, #1
2114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 3023              		.loc 1 2114 0
 3024 0188 0023     		movs	r3, #0
 3025              	.LVL243:
 3026 018a DBE7     		b	.L174
 3027              	.LVL244:
 3028              	.L197:
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3029              		.loc 1 2184 0
 3030 018c 002B     		cmp	r3, #0
 3031 018e 27D1     		bne	.L191
2187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 3032              		.loc 1 2187 0
 3033 0190 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3034              	.LVL245:
 3035 0194 6368     		ldr	r3, [r4, #4]
 3036 0196 5B08     		lsrs	r3, r3, #1
 3037 0198 C018     		adds	r0, r0, r3
 3038 019a 6168     		ldr	r1, [r4, #4]
 3039 019c FFF7FEFF 		bl	__aeabi_uidiv
 3040              	.LVL246:
 3041 01a0 2368     		ldr	r3, [r4]
 3042 01a2 0004     		lsls	r0, r0, #16
 3043 01a4 000C     		lsrs	r0, r0, #16
 3044 01a6 D860     		str	r0, [r3, #12]
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3045              		.loc 1 2115 0
 3046 01a8 0020     		movs	r0, #0
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 3047              		.loc 1 2188 0
 3048 01aa D4E7     		b	.L180
 3049              	.LVL247:
 3050              	.L181:
2190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccOLnUHF.s 			page 107


 3051              		.loc 1 2190 0
 3052 01ac 6168     		ldr	r1, [r4, #4]
 3053 01ae 4808     		lsrs	r0, r1, #1
 3054 01b0 154B     		ldr	r3, .L200+36
 3055              	.LVL248:
 3056 01b2 9C46     		mov	ip, r3
 3057 01b4 6044     		add	r0, r0, ip
 3058 01b6 FFF7FEFF 		bl	__aeabi_uidiv
 3059              	.LVL249:
 3060 01ba 0004     		lsls	r0, r0, #16
 3061 01bc 000C     		lsrs	r0, r0, #16
 3062 01be E860     		str	r0, [r5, #12]
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3063              		.loc 1 2115 0
 3064 01c0 0020     		movs	r0, #0
2191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 3065              		.loc 1 2191 0
 3066 01c2 C8E7     		b	.L180
 3067              	.LVL250:
 3068              	.L184:
2193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 3069              		.loc 1 2193 0
 3070 01c4 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3071              	.LVL251:
 3072 01c8 6368     		ldr	r3, [r4, #4]
 3073 01ca 5B08     		lsrs	r3, r3, #1
 3074 01cc C018     		adds	r0, r0, r3
 3075 01ce 6168     		ldr	r1, [r4, #4]
 3076 01d0 FFF7FEFF 		bl	__aeabi_uidiv
 3077              	.LVL252:
 3078 01d4 2368     		ldr	r3, [r4]
 3079 01d6 0004     		lsls	r0, r0, #16
 3080 01d8 000C     		lsrs	r0, r0, #16
 3081 01da D860     		str	r0, [r3, #12]
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3082              		.loc 1 2115 0
 3083 01dc 0020     		movs	r0, #0
2194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3084              		.loc 1 2194 0
 3085 01de BAE7     		b	.L180
 3086              	.LVL253:
 3087              	.L191:
2200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 3088              		.loc 1 2200 0
 3089 01e0 0120     		movs	r0, #1
 3090 01e2 B8E7     		b	.L180
 3091              	.L201:
 3092              		.align	2
 3093              	.L200:
 3094 01e4 F369FFEF 		.word	-268473869
 3095 01e8 FFCFFFFF 		.word	-12289
 3096 01ec FFF4FFFF 		.word	-2817
 3097 01f0 00380140 		.word	1073821696
 3098 01f4 00440040 		.word	1073759232
 3099 01f8 00480040 		.word	1073760256
 3100 01fc 004C0040 		.word	1073761280
 3101 0200 00100240 		.word	1073876992
ARM GAS  /tmp/ccOLnUHF.s 			page 108


 3102 0204 0024F400 		.word	16000000
 3103 0208 00127A00 		.word	8000000
 3104              		.cfi_endproc
 3105              	.LFE74:
 3107              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 3108              		.align	1
 3109              		.global	UART_AdvFeatureConfig
 3110              		.syntax unified
 3111              		.code	16
 3112              		.thumb_func
 3113              		.fpu softvfp
 3115              	UART_AdvFeatureConfig:
 3116              	.LFB75:
2215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 3117              		.loc 1 2215 0
 3118              		.cfi_startproc
 3119              		@ args = 0, pretend = 0, frame = 0
 3120              		@ frame_needed = 0, uses_anonymous_args = 0
 3121              		@ link register save eliminated.
 3122              	.LVL254:
2220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3123              		.loc 1 2220 0
 3124 0000 436A     		ldr	r3, [r0, #36]
 3125 0002 DB07     		lsls	r3, r3, #31
 3126 0004 06D5     		bpl	.L203
2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3127              		.loc 1 2223 0
 3128 0006 0268     		ldr	r2, [r0]
 3129 0008 5368     		ldr	r3, [r2, #4]
 3130 000a 2C49     		ldr	r1, .L212
 3131 000c 0B40     		ands	r3, r1
 3132 000e 816A     		ldr	r1, [r0, #40]
 3133 0010 0B43     		orrs	r3, r1
 3134 0012 5360     		str	r3, [r2, #4]
 3135              	.L203:
2227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3136              		.loc 1 2227 0
 3137 0014 436A     		ldr	r3, [r0, #36]
 3138 0016 9B07     		lsls	r3, r3, #30
 3139 0018 06D5     		bpl	.L204
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3140              		.loc 1 2230 0
 3141 001a 0268     		ldr	r2, [r0]
 3142 001c 5368     		ldr	r3, [r2, #4]
 3143 001e 2849     		ldr	r1, .L212+4
 3144 0020 0B40     		ands	r3, r1
 3145 0022 C16A     		ldr	r1, [r0, #44]
 3146 0024 0B43     		orrs	r3, r1
 3147 0026 5360     		str	r3, [r2, #4]
 3148              	.L204:
2234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3149              		.loc 1 2234 0
 3150 0028 436A     		ldr	r3, [r0, #36]
 3151 002a 5B07     		lsls	r3, r3, #29
 3152 002c 06D5     		bpl	.L205
2237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3153              		.loc 1 2237 0
ARM GAS  /tmp/ccOLnUHF.s 			page 109


 3154 002e 0268     		ldr	r2, [r0]
 3155 0030 5368     		ldr	r3, [r2, #4]
 3156 0032 2449     		ldr	r1, .L212+8
 3157 0034 0B40     		ands	r3, r1
 3158 0036 016B     		ldr	r1, [r0, #48]
 3159 0038 0B43     		orrs	r3, r1
 3160 003a 5360     		str	r3, [r2, #4]
 3161              	.L205:
2241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3162              		.loc 1 2241 0
 3163 003c 436A     		ldr	r3, [r0, #36]
 3164 003e 1B07     		lsls	r3, r3, #28
 3165 0040 06D5     		bpl	.L206
2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3166              		.loc 1 2244 0
 3167 0042 0268     		ldr	r2, [r0]
 3168 0044 5368     		ldr	r3, [r2, #4]
 3169 0046 2049     		ldr	r1, .L212+12
 3170 0048 0B40     		ands	r3, r1
 3171 004a 416B     		ldr	r1, [r0, #52]
 3172 004c 0B43     		orrs	r3, r1
 3173 004e 5360     		str	r3, [r2, #4]
 3174              	.L206:
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3175              		.loc 1 2248 0
 3176 0050 436A     		ldr	r3, [r0, #36]
 3177 0052 DB06     		lsls	r3, r3, #27
 3178 0054 06D5     		bpl	.L207
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3179              		.loc 1 2251 0
 3180 0056 0268     		ldr	r2, [r0]
 3181 0058 9368     		ldr	r3, [r2, #8]
 3182 005a 1C49     		ldr	r1, .L212+16
 3183 005c 0B40     		ands	r3, r1
 3184 005e 816B     		ldr	r1, [r0, #56]
 3185 0060 0B43     		orrs	r3, r1
 3186 0062 9360     		str	r3, [r2, #8]
 3187              	.L207:
2255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3188              		.loc 1 2255 0
 3189 0064 436A     		ldr	r3, [r0, #36]
 3190 0066 9B06     		lsls	r3, r3, #26
 3191 0068 06D5     		bpl	.L208
2258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3192              		.loc 1 2258 0
 3193 006a 0268     		ldr	r2, [r0]
 3194 006c 9368     		ldr	r3, [r2, #8]
 3195 006e 1849     		ldr	r1, .L212+20
 3196 0070 0B40     		ands	r3, r1
 3197 0072 C16B     		ldr	r1, [r0, #60]
 3198 0074 0B43     		orrs	r3, r1
 3199 0076 9360     		str	r3, [r2, #8]
 3200              	.L208:
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3201              		.loc 1 2262 0
 3202 0078 436A     		ldr	r3, [r0, #36]
 3203 007a 5B06     		lsls	r3, r3, #25
ARM GAS  /tmp/ccOLnUHF.s 			page 110


 3204 007c 0BD5     		bpl	.L209
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 3205              		.loc 1 2266 0
 3206 007e 0268     		ldr	r2, [r0]
 3207 0080 5368     		ldr	r3, [r2, #4]
 3208 0082 1449     		ldr	r1, .L212+24
 3209 0084 0B40     		ands	r3, r1
 3210 0086 016C     		ldr	r1, [r0, #64]
 3211 0088 0B43     		orrs	r3, r1
 3212 008a 5360     		str	r3, [r2, #4]
2268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3213              		.loc 1 2268 0
 3214 008c 8023     		movs	r3, #128
 3215 008e 5B03     		lsls	r3, r3, #13
 3216 0090 026C     		ldr	r2, [r0, #64]
 3217 0092 9A42     		cmp	r2, r3
 3218 0094 0AD0     		beq	.L211
 3219              	.L209:
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3220              		.loc 1 2276 0
 3221 0096 436A     		ldr	r3, [r0, #36]
 3222 0098 1B06     		lsls	r3, r3, #24
 3223 009a 06D5     		bpl	.L202
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3224              		.loc 1 2279 0
 3225 009c 0268     		ldr	r2, [r0]
 3226 009e 5368     		ldr	r3, [r2, #4]
 3227 00a0 0D49     		ldr	r1, .L212+28
 3228 00a2 0B40     		ands	r3, r1
 3229 00a4 816C     		ldr	r1, [r0, #72]
 3230 00a6 0B43     		orrs	r3, r1
 3231 00a8 5360     		str	r3, [r2, #4]
 3232              	.L202:
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3233              		.loc 1 2281 0
 3234              		@ sp needed
 3235 00aa 7047     		bx	lr
 3236              	.L211:
2271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3237              		.loc 1 2271 0
 3238 00ac 0268     		ldr	r2, [r0]
 3239 00ae 5368     		ldr	r3, [r2, #4]
 3240 00b0 0A49     		ldr	r1, .L212+32
 3241 00b2 0B40     		ands	r3, r1
 3242 00b4 416C     		ldr	r1, [r0, #68]
 3243 00b6 0B43     		orrs	r3, r1
 3244 00b8 5360     		str	r3, [r2, #4]
 3245 00ba ECE7     		b	.L209
 3246              	.L213:
 3247              		.align	2
 3248              	.L212:
 3249 00bc FFFFFDFF 		.word	-131073
 3250 00c0 FFFFFEFF 		.word	-65537
 3251 00c4 FFFFFBFF 		.word	-262145
 3252 00c8 FF7FFFFF 		.word	-32769
 3253 00cc FFEFFFFF 		.word	-4097
 3254 00d0 FFDFFFFF 		.word	-8193
ARM GAS  /tmp/ccOLnUHF.s 			page 111


 3255 00d4 FFFFEFFF 		.word	-1048577
 3256 00d8 FFFFF7FF 		.word	-524289
 3257 00dc FFFF9FFF 		.word	-6291457
 3258              		.cfi_endproc
 3259              	.LFE75:
 3261              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 3262              		.align	1
 3263              		.global	UART_WaitOnFlagUntilTimeout
 3264              		.syntax unified
 3265              		.code	16
 3266              		.thumb_func
 3267              		.fpu softvfp
 3269              	UART_WaitOnFlagUntilTimeout:
 3270              	.LFB77:
2350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Wait until flag is set */
 3271              		.loc 1 2350 0
 3272              		.cfi_startproc
 3273              		@ args = 4, pretend = 0, frame = 0
 3274              		@ frame_needed = 0, uses_anonymous_args = 0
 3275              	.LVL255:
 3276 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3277              	.LCFI25:
 3278              		.cfi_def_cfa_offset 20
 3279              		.cfi_offset 4, -20
 3280              		.cfi_offset 5, -16
 3281              		.cfi_offset 6, -12
 3282              		.cfi_offset 7, -8
 3283              		.cfi_offset 14, -4
 3284 0002 C646     		mov	lr, r8
 3285 0004 00B5     		push	{lr}
 3286              	.LCFI26:
 3287              		.cfi_def_cfa_offset 24
 3288              		.cfi_offset 8, -24
 3289 0006 0600     		movs	r6, r0
 3290 0008 0C00     		movs	r4, r1
 3291 000a 1700     		movs	r7, r2
 3292 000c 9846     		mov	r8, r3
 3293 000e 069D     		ldr	r5, [sp, #24]
 3294              	.LVL256:
 3295              	.L216:
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3296              		.loc 1 2352 0
 3297 0010 3368     		ldr	r3, [r6]
 3298 0012 DB69     		ldr	r3, [r3, #28]
 3299 0014 2340     		ands	r3, r4
 3300 0016 1B1B     		subs	r3, r3, r4
 3301 0018 5A42     		rsbs	r2, r3, #0
 3302 001a 5341     		adcs	r3, r3, r2
 3303 001c BB42     		cmp	r3, r7
 3304 001e 1ED1     		bne	.L220
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3305              		.loc 1 2355 0
 3306 0020 6B1C     		adds	r3, r5, #1
 3307 0022 F5D0     		beq	.L216
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3308              		.loc 1 2357 0
 3309 0024 002D     		cmp	r5, #0
ARM GAS  /tmp/ccOLnUHF.s 			page 112


 3310 0026 05D0     		beq	.L217
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3311              		.loc 1 2357 0 is_stmt 0 discriminator 1
 3312 0028 FFF7FEFF 		bl	HAL_GetTick
 3313              	.LVL257:
 3314 002c 4346     		mov	r3, r8
 3315 002e C01A     		subs	r0, r0, r3
 3316 0030 A842     		cmp	r0, r5
 3317 0032 EDD9     		bls	.L216
 3318              	.L217:
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3319              		.loc 1 2360 0 is_stmt 1
 3320 0034 3268     		ldr	r2, [r6]
 3321 0036 1368     		ldr	r3, [r2]
 3322 0038 0B49     		ldr	r1, .L221
 3323 003a 0B40     		ands	r3, r1
 3324 003c 1360     		str	r3, [r2]
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3325              		.loc 1 2361 0
 3326 003e 3268     		ldr	r2, [r6]
 3327 0040 9368     		ldr	r3, [r2, #8]
 3328 0042 A331     		adds	r1, r1, #163
 3329 0044 FF31     		adds	r1, r1, #255
 3330 0046 8B43     		bics	r3, r1
 3331 0048 9360     		str	r3, [r2, #8]
2363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 3332              		.loc 1 2363 0
 3333 004a 2023     		movs	r3, #32
 3334 004c 6922     		movs	r2, #105
 3335 004e B354     		strb	r3, [r6, r2]
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3336              		.loc 1 2364 0
 3337 0050 0132     		adds	r2, r2, #1
 3338 0052 B354     		strb	r3, [r6, r2]
2367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 3339              		.loc 1 2367 0
 3340 0054 4833     		adds	r3, r3, #72
 3341 0056 0022     		movs	r2, #0
 3342 0058 F254     		strb	r2, [r6, r3]
2368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3343              		.loc 1 2368 0
 3344 005a 0320     		movs	r0, #3
 3345 005c 00E0     		b	.L218
 3346              	.L220:
2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3347              		.loc 1 2372 0
 3348 005e 0020     		movs	r0, #0
 3349              	.L218:
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3350              		.loc 1 2373 0
 3351              		@ sp needed
 3352              	.LVL258:
 3353              	.LVL259:
 3354              	.LVL260:
 3355 0060 04BC     		pop	{r2}
 3356 0062 9046     		mov	r8, r2
 3357 0064 F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  /tmp/ccOLnUHF.s 			page 113


 3358              	.L222:
 3359 0066 C046     		.align	2
 3360              	.L221:
 3361 0068 5FFEFFFF 		.word	-417
 3362              		.cfi_endproc
 3363              	.LFE77:
 3365              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 3366              		.align	1
 3367              		.global	HAL_UART_Transmit
 3368              		.syntax unified
 3369              		.code	16
 3370              		.thumb_func
 3371              		.fpu softvfp
 3373              	HAL_UART_Transmit:
 3374              	.LFB43:
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 3375              		.loc 1 692 0
 3376              		.cfi_startproc
 3377              		@ args = 0, pretend = 0, frame = 8
 3378              		@ frame_needed = 0, uses_anonymous_args = 0
 3379              	.LVL261:
 3380 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3381              	.LCFI27:
 3382              		.cfi_def_cfa_offset 20
 3383              		.cfi_offset 4, -20
 3384              		.cfi_offset 5, -16
 3385              		.cfi_offset 6, -12
 3386              		.cfi_offset 7, -8
 3387              		.cfi_offset 14, -4
 3388 0002 85B0     		sub	sp, sp, #20
 3389              	.LCFI28:
 3390              		.cfi_def_cfa_offset 40
 3391 0004 0400     		movs	r4, r0
 3392 0006 0E00     		movs	r6, r1
 3393 0008 1700     		movs	r7, r2
 3394 000a 1D00     		movs	r5, r3
 3395              	.LVL262:
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3396              		.loc 1 697 0
 3397 000c 6923     		movs	r3, #105
 3398              	.LVL263:
 3399 000e C35C     		ldrb	r3, [r0, r3]
 3400 0010 202B     		cmp	r3, #32
 3401 0012 59D1     		bne	.L230
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3402              		.loc 1 699 0
 3403 0014 0029     		cmp	r1, #0
 3404 0016 5AD0     		beq	.L231
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3405              		.loc 1 699 0 is_stmt 0 discriminator 1
 3406 0018 002A     		cmp	r2, #0
 3407 001a 5AD0     		beq	.L232
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3408              		.loc 1 707 0 is_stmt 1
 3409 001c 8023     		movs	r3, #128
 3410 001e 5B01     		lsls	r3, r3, #5
 3411 0020 8268     		ldr	r2, [r0, #8]
ARM GAS  /tmp/ccOLnUHF.s 			page 114


 3412              	.LVL264:
 3413 0022 9A42     		cmp	r2, r3
 3414 0024 13D0     		beq	.L237
 3415              	.L225:
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3416              		.loc 1 716 0
 3417 0026 6823     		movs	r3, #104
 3418 0028 E35C     		ldrb	r3, [r4, r3]
 3419 002a 012B     		cmp	r3, #1
 3420 002c 53D0     		beq	.L234
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3421              		.loc 1 716 0 is_stmt 0 discriminator 2
 3422 002e 6823     		movs	r3, #104
 3423 0030 0122     		movs	r2, #1
 3424 0032 E254     		strb	r2, [r4, r3]
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3425              		.loc 1 718 0 is_stmt 1 discriminator 2
 3426 0034 0023     		movs	r3, #0
 3427 0036 E366     		str	r3, [r4, #108]
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3428              		.loc 1 719 0 discriminator 2
 3429 0038 6933     		adds	r3, r3, #105
 3430 003a 2032     		adds	r2, r2, #32
 3431 003c E254     		strb	r2, [r4, r3]
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3432              		.loc 1 722 0 discriminator 2
 3433 003e FFF7FEFF 		bl	HAL_GetTick
 3434              	.LVL265:
 3435 0042 0390     		str	r0, [sp, #12]
 3436              	.LVL266:
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 3437              		.loc 1 724 0 discriminator 2
 3438 0044 5023     		movs	r3, #80
 3439 0046 E752     		strh	r7, [r4, r3]
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(huart->TxXferCount > 0)
 3440              		.loc 1 725 0 discriminator 2
 3441 0048 0233     		adds	r3, r3, #2
 3442 004a E752     		strh	r7, [r4, r3]
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3443              		.loc 1 726 0 discriminator 2
 3444 004c 0AE0     		b	.L226
 3445              	.LVL267:
 3446              	.L237:
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3447              		.loc 1 707 0 discriminator 1
 3448 004e 0369     		ldr	r3, [r0, #16]
 3449 0050 002B     		cmp	r3, #0
 3450 0052 E8D1     		bne	.L225
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3451              		.loc 1 709 0
 3452 0054 CB07     		lsls	r3, r1, #31
 3453 0056 E6D5     		bpl	.L225
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3454              		.loc 1 711 0
 3455 0058 0120     		movs	r0, #1
 3456              	.LVL268:
 3457 005a 36E0     		b	.L224
ARM GAS  /tmp/ccOLnUHF.s 			page 115


 3458              	.LVL269:
 3459              	.L227:
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3460              		.loc 1 741 0
 3461 005c 3378     		ldrb	r3, [r6]
 3462 005e 2268     		ldr	r2, [r4]
 3463 0060 1385     		strh	r3, [r2, #40]
 3464 0062 0136     		adds	r6, r6, #1
 3465              	.LVL270:
 3466              	.L226:
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3467              		.loc 1 726 0
 3468 0064 5223     		movs	r3, #82
 3469 0066 E35A     		ldrh	r3, [r4, r3]
 3470 0068 9BB2     		uxth	r3, r3
 3471 006a 002B     		cmp	r3, #0
 3472 006c 1CD0     		beq	.L238
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3473              		.loc 1 728 0
 3474 006e 5222     		movs	r2, #82
 3475 0070 A35A     		ldrh	r3, [r4, r2]
 3476 0072 013B     		subs	r3, r3, #1
 3477 0074 9BB2     		uxth	r3, r3
 3478 0076 A352     		strh	r3, [r4, r2]
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3479              		.loc 1 729 0
 3480 0078 0095     		str	r5, [sp]
 3481 007a 039B     		ldr	r3, [sp, #12]
 3482 007c 0022     		movs	r2, #0
 3483 007e 8021     		movs	r1, #128
 3484 0080 2000     		movs	r0, r4
 3485 0082 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3486              	.LVL271:
 3487 0086 0028     		cmp	r0, #0
 3488 0088 27D1     		bne	.L235
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3489              		.loc 1 733 0
 3490 008a 8023     		movs	r3, #128
 3491 008c 5B01     		lsls	r3, r3, #5
 3492 008e A268     		ldr	r2, [r4, #8]
 3493 0090 9A42     		cmp	r2, r3
 3494 0092 E3D1     		bne	.L227
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3495              		.loc 1 733 0 is_stmt 0 discriminator 1
 3496 0094 2369     		ldr	r3, [r4, #16]
 3497 0096 002B     		cmp	r3, #0
 3498 0098 E0D1     		bne	.L227
 3499              	.LVL272:
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData += 2;
 3500              		.loc 1 736 0 is_stmt 1
 3501 009a 3388     		ldrh	r3, [r6]
 3502 009c DB05     		lsls	r3, r3, #23
 3503 009e DB0D     		lsrs	r3, r3, #23
 3504 00a0 2268     		ldr	r2, [r4]
 3505 00a2 1385     		strh	r3, [r2, #40]
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3506              		.loc 1 737 0
ARM GAS  /tmp/ccOLnUHF.s 			page 116


 3507 00a4 0236     		adds	r6, r6, #2
 3508              	.LVL273:
 3509 00a6 DDE7     		b	.L226
 3510              	.LVL274:
 3511              	.L238:
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3512              		.loc 1 744 0
 3513 00a8 0095     		str	r5, [sp]
 3514 00aa 039B     		ldr	r3, [sp, #12]
 3515 00ac 0022     		movs	r2, #0
 3516 00ae 4021     		movs	r1, #64
 3517 00b0 2000     		movs	r0, r4
 3518 00b2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3519              	.LVL275:
 3520 00b6 0028     		cmp	r0, #0
 3521 00b8 11D1     		bne	.L236
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3522              		.loc 1 750 0
 3523 00ba 6923     		movs	r3, #105
 3524 00bc 2022     		movs	r2, #32
 3525 00be E254     		strb	r2, [r4, r3]
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3526              		.loc 1 753 0
 3527 00c0 013B     		subs	r3, r3, #1
 3528 00c2 0022     		movs	r2, #0
 3529 00c4 E254     		strb	r2, [r4, r3]
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3530              		.loc 1 755 0
 3531 00c6 00E0     		b	.L224
 3532              	.LVL276:
 3533              	.L230:
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3534              		.loc 1 759 0
 3535 00c8 0220     		movs	r0, #2
 3536              	.LVL277:
 3537              	.L224:
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3538              		.loc 1 761 0
 3539 00ca 05B0     		add	sp, sp, #20
 3540              		@ sp needed
 3541              	.LVL278:
 3542              	.LVL279:
 3543              	.LVL280:
 3544 00cc F0BD     		pop	{r4, r5, r6, r7, pc}
 3545              	.LVL281:
 3546              	.L231:
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3547              		.loc 1 701 0
 3548 00ce 0120     		movs	r0, #1
 3549              	.LVL282:
 3550 00d0 FBE7     		b	.L224
 3551              	.LVL283:
 3552              	.L232:
 3553 00d2 0120     		movs	r0, #1
 3554              	.LVL284:
 3555 00d4 F9E7     		b	.L224
 3556              	.LVL285:
ARM GAS  /tmp/ccOLnUHF.s 			page 117


 3557              	.L234:
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3558              		.loc 1 716 0
 3559 00d6 0220     		movs	r0, #2
 3560              	.LVL286:
 3561 00d8 F7E7     		b	.L224
 3562              	.LVL287:
 3563              	.L235:
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3564              		.loc 1 731 0
 3565 00da 0320     		movs	r0, #3
 3566 00dc F5E7     		b	.L224
 3567              	.L236:
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3568              		.loc 1 746 0
 3569 00de 0320     		movs	r0, #3
 3570 00e0 F3E7     		b	.L224
 3571              		.cfi_endproc
 3572              	.LFE43:
 3574              		.section	.text.HAL_UART_Receive,"ax",%progbits
 3575              		.align	1
 3576              		.global	HAL_UART_Receive
 3577              		.syntax unified
 3578              		.code	16
 3579              		.thumb_func
 3580              		.fpu softvfp
 3582              	HAL_UART_Receive:
 3583              	.LFB44:
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 3584              		.loc 1 776 0
 3585              		.cfi_startproc
 3586              		@ args = 0, pretend = 0, frame = 8
 3587              		@ frame_needed = 0, uses_anonymous_args = 0
 3588              	.LVL288:
 3589 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3590              	.LCFI29:
 3591              		.cfi_def_cfa_offset 20
 3592              		.cfi_offset 4, -20
 3593              		.cfi_offset 5, -16
 3594              		.cfi_offset 6, -12
 3595              		.cfi_offset 7, -8
 3596              		.cfi_offset 14, -4
 3597 0002 85B0     		sub	sp, sp, #20
 3598              	.LCFI30:
 3599              		.cfi_def_cfa_offset 40
 3600 0004 0400     		movs	r4, r0
 3601 0006 0F00     		movs	r7, r1
 3602 0008 1600     		movs	r6, r2
 3603 000a 1D00     		movs	r5, r3
 3604              	.LVL289:
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3605              		.loc 1 782 0
 3606 000c 6A23     		movs	r3, #106
 3607              	.LVL290:
 3608 000e C35C     		ldrb	r3, [r0, r3]
 3609 0010 202B     		cmp	r3, #32
 3610 0012 00D0     		beq	.LCB3243
ARM GAS  /tmp/ccOLnUHF.s 			page 118


 3611 0014 83E0     		b	.L252	@long jump
 3612              	.LCB3243:
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3613              		.loc 1 784 0
 3614 0016 0029     		cmp	r1, #0
 3615 0018 00D1     		bne	.LCB3245
 3616 001a 83E0     		b	.L253	@long jump
 3617              	.LCB3245:
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3618              		.loc 1 784 0 is_stmt 0 discriminator 1
 3619 001c 002A     		cmp	r2, #0
 3620 001e 00D1     		bne	.LCB3247
 3621 0020 82E0     		b	.L254	@long jump
 3622              	.LCB3247:
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3623              		.loc 1 792 0 is_stmt 1
 3624 0022 8023     		movs	r3, #128
 3625 0024 5B01     		lsls	r3, r3, #5
 3626 0026 8268     		ldr	r2, [r0, #8]
 3627              	.LVL291:
 3628 0028 9A42     		cmp	r2, r3
 3629 002a 21D0     		beq	.L258
 3630              	.L241:
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3631              		.loc 1 801 0
 3632 002c 6823     		movs	r3, #104
 3633 002e E35C     		ldrb	r3, [r4, r3]
 3634 0030 012B     		cmp	r3, #1
 3635 0032 00D1     		bne	.LCB3259
 3636 0034 7AE0     		b	.L256	@long jump
 3637              	.LCB3259:
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3638              		.loc 1 801 0 is_stmt 0 discriminator 2
 3639 0036 6823     		movs	r3, #104
 3640 0038 0122     		movs	r2, #1
 3641 003a E254     		strb	r2, [r4, r3]
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 3642              		.loc 1 803 0 is_stmt 1 discriminator 2
 3643 003c 0023     		movs	r3, #0
 3644 003e E366     		str	r3, [r4, #108]
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3645              		.loc 1 804 0 discriminator 2
 3646 0040 6A33     		adds	r3, r3, #106
 3647 0042 2132     		adds	r2, r2, #33
 3648 0044 E254     		strb	r2, [r4, r3]
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3649              		.loc 1 807 0 discriminator 2
 3650 0046 FFF7FEFF 		bl	HAL_GetTick
 3651              	.LVL292:
 3652 004a 0390     		str	r0, [sp, #12]
 3653              	.LVL293:
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 3654              		.loc 1 809 0 discriminator 2
 3655 004c 5823     		movs	r3, #88
 3656 004e E652     		strh	r6, [r4, r3]
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3657              		.loc 1 810 0 discriminator 2
ARM GAS  /tmp/ccOLnUHF.s 			page 119


 3658 0050 0233     		adds	r3, r3, #2
 3659 0052 E652     		strh	r6, [r4, r3]
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3660              		.loc 1 813 0 discriminator 2
 3661 0054 A368     		ldr	r3, [r4, #8]
 3662 0056 8022     		movs	r2, #128
 3663 0058 5201     		lsls	r2, r2, #5
 3664 005a 9342     		cmp	r3, r2
 3665 005c 0FD0     		beq	.L259
 3666 005e 002B     		cmp	r3, #0
 3667 0060 1CD1     		bne	.L245
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3668              		.loc 1 813 0 is_stmt 0 discriminator 5
 3669 0062 2369     		ldr	r3, [r4, #16]
 3670 0064 002B     		cmp	r3, #0
 3671 0066 15D1     		bne	.L246
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3672              		.loc 1 813 0 discriminator 7
 3673 0068 5C33     		adds	r3, r3, #92
 3674 006a FF22     		movs	r2, #255
 3675 006c E252     		strh	r2, [r4, r3]
 3676 006e 19E0     		b	.L244
 3677              	.LVL294:
 3678              	.L258:
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3679              		.loc 1 792 0 is_stmt 1 discriminator 1
 3680 0070 0369     		ldr	r3, [r0, #16]
 3681 0072 002B     		cmp	r3, #0
 3682 0074 DAD1     		bne	.L241
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3683              		.loc 1 794 0
 3684 0076 CB07     		lsls	r3, r1, #31
 3685 0078 D8D5     		bpl	.L241
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3686              		.loc 1 796 0
 3687 007a 0120     		movs	r0, #1
 3688              	.LVL295:
 3689 007c 50E0     		b	.L240
 3690              	.LVL296:
 3691              	.L259:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3692              		.loc 1 813 0 discriminator 1
 3693 007e 2369     		ldr	r3, [r4, #16]
 3694 0080 002B     		cmp	r3, #0
 3695 0082 03D1     		bne	.L243
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3696              		.loc 1 813 0 is_stmt 0 discriminator 3
 3697 0084 5C33     		adds	r3, r3, #92
 3698 0086 2B4A     		ldr	r2, .L262
 3699 0088 E252     		strh	r2, [r4, r3]
 3700 008a 0BE0     		b	.L244
 3701              	.L243:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3702              		.loc 1 813 0 discriminator 4
 3703 008c 5C23     		movs	r3, #92
 3704 008e FF22     		movs	r2, #255
 3705 0090 E252     		strh	r2, [r4, r3]
ARM GAS  /tmp/ccOLnUHF.s 			page 120


 3706 0092 07E0     		b	.L244
 3707              	.L246:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3708              		.loc 1 813 0 discriminator 8
 3709 0094 5C23     		movs	r3, #92
 3710 0096 7F22     		movs	r2, #127
 3711 0098 E252     		strh	r2, [r4, r3]
 3712 009a 03E0     		b	.L244
 3713              	.L245:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3714              		.loc 1 813 0 discriminator 6
 3715 009c 8022     		movs	r2, #128
 3716 009e 5205     		lsls	r2, r2, #21
 3717 00a0 9342     		cmp	r3, r2
 3718 00a2 02D0     		beq	.L260
 3719              	.L244:
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3720              		.loc 1 814 0 is_stmt 1
 3721 00a4 5C23     		movs	r3, #92
 3722 00a6 E65A     		ldrh	r6, [r4, r3]
 3723              	.LVL297:
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3724              		.loc 1 817 0
 3725 00a8 10E0     		b	.L248
 3726              	.LVL298:
 3727              	.L260:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3728              		.loc 1 813 0 discriminator 9
 3729 00aa 2369     		ldr	r3, [r4, #16]
 3730 00ac 002B     		cmp	r3, #0
 3731 00ae 03D1     		bne	.L247
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3732              		.loc 1 813 0 is_stmt 0 discriminator 10
 3733 00b0 5C33     		adds	r3, r3, #92
 3734 00b2 7F22     		movs	r2, #127
 3735 00b4 E252     		strh	r2, [r4, r3]
 3736 00b6 F5E7     		b	.L244
 3737              	.L247:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 3738              		.loc 1 813 0 discriminator 11
 3739 00b8 5C23     		movs	r3, #92
 3740 00ba 3F22     		movs	r2, #63
 3741 00bc E252     		strh	r2, [r4, r3]
 3742 00be F1E7     		b	.L244
 3743              	.LVL299:
 3744              	.L249:
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3745              		.loc 1 832 0 is_stmt 1
 3746 00c0 2368     		ldr	r3, [r4]
 3747 00c2 9B8C     		ldrh	r3, [r3, #36]
 3748 00c4 F2B2     		uxtb	r2, r6
 3749              	.LVL300:
 3750 00c6 1340     		ands	r3, r2
 3751 00c8 3B70     		strb	r3, [r7]
 3752 00ca 0137     		adds	r7, r7, #1
 3753              	.LVL301:
 3754              	.L248:
ARM GAS  /tmp/ccOLnUHF.s 			page 121


 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3755              		.loc 1 817 0
 3756 00cc 5A23     		movs	r3, #90
 3757 00ce E35A     		ldrh	r3, [r4, r3]
 3758 00d0 9BB2     		uxth	r3, r3
 3759 00d2 002B     		cmp	r3, #0
 3760 00d4 1BD0     		beq	.L261
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 3761              		.loc 1 819 0
 3762 00d6 5A22     		movs	r2, #90
 3763 00d8 A35A     		ldrh	r3, [r4, r2]
 3764 00da 013B     		subs	r3, r3, #1
 3765 00dc 9BB2     		uxth	r3, r3
 3766 00de A352     		strh	r3, [r4, r2]
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3767              		.loc 1 820 0
 3768 00e0 0095     		str	r5, [sp]
 3769 00e2 039B     		ldr	r3, [sp, #12]
 3770 00e4 0022     		movs	r2, #0
 3771 00e6 2021     		movs	r1, #32
 3772 00e8 2000     		movs	r0, r4
 3773 00ea FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3774              	.LVL302:
 3775 00ee 0028     		cmp	r0, #0
 3776 00f0 1ED1     		bne	.L257
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3777              		.loc 1 824 0
 3778 00f2 8023     		movs	r3, #128
 3779 00f4 5B01     		lsls	r3, r3, #5
 3780 00f6 A268     		ldr	r2, [r4, #8]
 3781 00f8 9A42     		cmp	r2, r3
 3782 00fa E1D1     		bne	.L249
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3783              		.loc 1 824 0 is_stmt 0 discriminator 1
 3784 00fc 2369     		ldr	r3, [r4, #16]
 3785 00fe 002B     		cmp	r3, #0
 3786 0100 DED1     		bne	.L249
 3787              	.LVL303:
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData +=2U;
 3788              		.loc 1 827 0 is_stmt 1
 3789 0102 2368     		ldr	r3, [r4]
 3790 0104 9B8C     		ldrh	r3, [r3, #36]
 3791 0106 3340     		ands	r3, r6
 3792 0108 3B80     		strh	r3, [r7]
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3793              		.loc 1 828 0
 3794 010a 0237     		adds	r7, r7, #2
 3795              	.LVL304:
 3796 010c DEE7     		b	.L248
 3797              	.LVL305:
 3798              	.L261:
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3799              		.loc 1 837 0
 3800 010e 6A33     		adds	r3, r3, #106
 3801 0110 2022     		movs	r2, #32
 3802 0112 E254     		strb	r2, [r4, r3]
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccOLnUHF.s 			page 122


 3803              		.loc 1 840 0
 3804 0114 023B     		subs	r3, r3, #2
 3805 0116 0022     		movs	r2, #0
 3806 0118 E254     		strb	r2, [r4, r3]
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3807              		.loc 1 842 0
 3808 011a 0020     		movs	r0, #0
 3809 011c 00E0     		b	.L240
 3810              	.LVL306:
 3811              	.L252:
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3812              		.loc 1 846 0
 3813 011e 0220     		movs	r0, #2
 3814              	.LVL307:
 3815              	.L240:
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3816              		.loc 1 848 0
 3817 0120 05B0     		add	sp, sp, #20
 3818              		@ sp needed
 3819              	.LVL308:
 3820              	.LVL309:
 3821              	.LVL310:
 3822 0122 F0BD     		pop	{r4, r5, r6, r7, pc}
 3823              	.LVL311:
 3824              	.L253:
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3825              		.loc 1 786 0
 3826 0124 0120     		movs	r0, #1
 3827              	.LVL312:
 3828 0126 FBE7     		b	.L240
 3829              	.LVL313:
 3830              	.L254:
 3831 0128 0120     		movs	r0, #1
 3832              	.LVL314:
 3833 012a F9E7     		b	.L240
 3834              	.LVL315:
 3835              	.L256:
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3836              		.loc 1 801 0
 3837 012c 0220     		movs	r0, #2
 3838              	.LVL316:
 3839 012e F7E7     		b	.L240
 3840              	.LVL317:
 3841              	.L257:
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3842              		.loc 1 822 0
 3843 0130 0320     		movs	r0, #3
 3844 0132 F5E7     		b	.L240
 3845              	.L263:
 3846              		.align	2
 3847              	.L262:
 3848 0134 FF010000 		.word	511
 3849              		.cfi_endproc
 3850              	.LFE44:
 3852              		.section	.text.UART_CheckIdleState,"ax",%progbits
 3853              		.align	1
 3854              		.global	UART_CheckIdleState
ARM GAS  /tmp/ccOLnUHF.s 			page 123


 3855              		.syntax unified
 3856              		.code	16
 3857              		.thumb_func
 3858              		.fpu softvfp
 3860              	UART_CheckIdleState:
 3861              	.LFB76:
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
 3862              		.loc 1 2289 0
 3863              		.cfi_startproc
 3864              		@ args = 0, pretend = 0, frame = 0
 3865              		@ frame_needed = 0, uses_anonymous_args = 0
 3866              	.LVL318:
 3867 0000 30B5     		push	{r4, r5, lr}
 3868              	.LCFI31:
 3869              		.cfi_def_cfa_offset 12
 3870              		.cfi_offset 4, -12
 3871              		.cfi_offset 5, -8
 3872              		.cfi_offset 14, -4
 3873 0002 83B0     		sub	sp, sp, #12
 3874              	.LCFI32:
 3875              		.cfi_def_cfa_offset 24
 3876 0004 0400     		movs	r4, r0
 3877              	.LVL319:
2295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3878              		.loc 1 2295 0
 3879 0006 0023     		movs	r3, #0
 3880 0008 C366     		str	r3, [r0, #108]
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3881              		.loc 1 2299 0
 3882 000a FFF7FEFF 		bl	HAL_GetTick
 3883              	.LVL320:
 3884 000e 0500     		movs	r5, r0
 3885              	.LVL321:
2304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3886              		.loc 1 2304 0
 3887 0010 2368     		ldr	r3, [r4]
 3888 0012 194A     		ldr	r2, .L272
 3889 0014 9342     		cmp	r3, r2
 3890 0016 0DD0     		beq	.L265
2304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3891              		.loc 1 2304 0 is_stmt 0 discriminator 1
 3892 0018 184A     		ldr	r2, .L272+4
 3893 001a 9342     		cmp	r3, r2
 3894 001c 0AD0     		beq	.L265
 3895              	.LVL322:
 3896              	.L266:
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3897              		.loc 1 2331 0 is_stmt 1
 3898 001e 2023     		movs	r3, #32
 3899 0020 6922     		movs	r2, #105
 3900 0022 A354     		strb	r3, [r4, r2]
2332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3901              		.loc 1 2332 0
 3902 0024 0132     		adds	r2, r2, #1
 3903 0026 A354     		strb	r3, [r4, r2]
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3904              		.loc 1 2335 0
ARM GAS  /tmp/ccOLnUHF.s 			page 124


 3905 0028 4833     		adds	r3, r3, #72
 3906 002a 0022     		movs	r2, #0
 3907 002c E254     		strb	r2, [r4, r3]
2337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3908              		.loc 1 2337 0
 3909 002e 0020     		movs	r0, #0
 3910              	.L268:
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3911              		.loc 1 2338 0
 3912 0030 03B0     		add	sp, sp, #12
 3913              		@ sp needed
 3914              	.LVL323:
 3915              	.LVL324:
 3916 0032 30BD     		pop	{r4, r5, pc}
 3917              	.LVL325:
 3918              	.L265:
2307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3919              		.loc 1 2307 0
 3920 0034 1B68     		ldr	r3, [r3]
 3921 0036 1B07     		lsls	r3, r3, #28
 3922 0038 10D4     		bmi	.L271
 3923              	.LVL326:
 3924              	.L267:
2318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3925              		.loc 1 2318 0
 3926 003a 2368     		ldr	r3, [r4]
 3927 003c 1B68     		ldr	r3, [r3]
 3928 003e 5B07     		lsls	r3, r3, #29
 3929 0040 EDD5     		bpl	.L266
2321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3930              		.loc 1 2321 0
 3931 0042 8021     		movs	r1, #128
 3932 0044 0E4B     		ldr	r3, .L272+8
 3933 0046 0093     		str	r3, [sp]
 3934 0048 2B00     		movs	r3, r5
 3935 004a 0022     		movs	r2, #0
 3936 004c C903     		lsls	r1, r1, #15
 3937 004e 2000     		movs	r0, r4
 3938 0050 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3939              	.LVL327:
 3940 0054 0028     		cmp	r0, #0
 3941 0056 E2D0     		beq	.L266
2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3942              		.loc 1 2324 0
 3943 0058 0320     		movs	r0, #3
 3944 005a E9E7     		b	.L268
 3945              	.LVL328:
 3946              	.L271:
2310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3947              		.loc 1 2310 0
 3948 005c 8021     		movs	r1, #128
 3949 005e 084B     		ldr	r3, .L272+8
 3950 0060 0093     		str	r3, [sp]
 3951 0062 2B00     		movs	r3, r5
 3952 0064 0022     		movs	r2, #0
 3953 0066 8903     		lsls	r1, r1, #14
 3954 0068 2000     		movs	r0, r4
ARM GAS  /tmp/ccOLnUHF.s 			page 125


 3955              	.LVL329:
 3956 006a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3957              	.LVL330:
 3958 006e 0028     		cmp	r0, #0
 3959 0070 E3D0     		beq	.L267
2313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3960              		.loc 1 2313 0
 3961 0072 0320     		movs	r0, #3
 3962 0074 DCE7     		b	.L268
 3963              	.L273:
 3964 0076 C046     		.align	2
 3965              	.L272:
 3966 0078 00380140 		.word	1073821696
 3967 007c 00440040 		.word	1073759232
 3968 0080 FFFFFF01 		.word	33554431
 3969              		.cfi_endproc
 3970              	.LFE76:
 3972              		.section	.text.HAL_UART_Init,"ax",%progbits
 3973              		.align	1
 3974              		.global	HAL_UART_Init
 3975              		.syntax unified
 3976              		.code	16
 3977              		.thumb_func
 3978              		.fpu softvfp
 3980              	HAL_UART_Init:
 3981              	.LFB37:
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 3982              		.loc 1 292 0
 3983              		.cfi_startproc
 3984              		@ args = 0, pretend = 0, frame = 0
 3985              		@ frame_needed = 0, uses_anonymous_args = 0
 3986              	.LVL331:
 3987 0000 10B5     		push	{r4, lr}
 3988              	.LCFI33:
 3989              		.cfi_def_cfa_offset 8
 3990              		.cfi_offset 4, -8
 3991              		.cfi_offset 14, -4
 3992 0002 041E     		subs	r4, r0, #0
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3993              		.loc 1 294 0
 3994 0004 30D0     		beq	.L278
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3995              		.loc 1 310 0
 3996 0006 6923     		movs	r3, #105
 3997 0008 C35C     		ldrb	r3, [r0, r3]
 3998 000a 002B     		cmp	r3, #0
 3999 000c 22D0     		beq	.L279
 4000              	.LVL332:
 4001              	.L276:
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4002              		.loc 1 319 0
 4003 000e 6923     		movs	r3, #105
 4004 0010 2422     		movs	r2, #36
 4005 0012 E254     		strb	r2, [r4, r3]
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4006              		.loc 1 322 0
 4007 0014 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccOLnUHF.s 			page 126


 4008 0016 1368     		ldr	r3, [r2]
 4009 0018 0121     		movs	r1, #1
 4010 001a 8B43     		bics	r3, r1
 4011 001c 1360     		str	r3, [r2]
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4012              		.loc 1 325 0
 4013 001e 2000     		movs	r0, r4
 4014 0020 FFF7FEFF 		bl	UART_SetConfig
 4015              	.LVL333:
 4016 0024 0128     		cmp	r0, #1
 4017 0026 14D0     		beq	.L275
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4018              		.loc 1 330 0
 4019 0028 636A     		ldr	r3, [r4, #36]
 4020 002a 002B     		cmp	r3, #0
 4021 002c 18D1     		bne	.L280
 4022              	.L277:
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 4023              		.loc 1 339 0
 4024 002e 2268     		ldr	r2, [r4]
 4025 0030 5368     		ldr	r3, [r2, #4]
 4026 0032 0E49     		ldr	r1, .L281
 4027 0034 0B40     		ands	r3, r1
 4028 0036 5360     		str	r3, [r2, #4]
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 4029              		.loc 1 345 0
 4030 0038 2268     		ldr	r2, [r4]
 4031 003a 9368     		ldr	r3, [r2, #8]
 4032 003c 2A21     		movs	r1, #42
 4033 003e 8B43     		bics	r3, r1
 4034 0040 9360     		str	r3, [r2, #8]
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4035              		.loc 1 358 0
 4036 0042 2268     		ldr	r2, [r4]
 4037 0044 1368     		ldr	r3, [r2]
 4038 0046 2939     		subs	r1, r1, #41
 4039 0048 0B43     		orrs	r3, r1
 4040 004a 1360     		str	r3, [r2]
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4041              		.loc 1 361 0
 4042 004c 2000     		movs	r0, r4
 4043 004e FFF7FEFF 		bl	UART_CheckIdleState
 4044              	.LVL334:
 4045              	.L275:
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4046              		.loc 1 362 0
 4047              		@ sp needed
 4048              	.LVL335:
 4049 0052 10BD     		pop	{r4, pc}
 4050              	.LVL336:
 4051              	.L279:
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4052              		.loc 1 313 0
 4053 0054 6833     		adds	r3, r3, #104
 4054 0056 0022     		movs	r2, #0
 4055 0058 C254     		strb	r2, [r0, r3]
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccOLnUHF.s 			page 127


 4056              		.loc 1 316 0
 4057 005a FFF7FEFF 		bl	HAL_UART_MspInit
 4058              	.LVL337:
 4059 005e D6E7     		b	.L276
 4060              	.L280:
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4061              		.loc 1 332 0
 4062 0060 2000     		movs	r0, r4
 4063 0062 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4064              	.LVL338:
 4065 0066 E2E7     		b	.L277
 4066              	.LVL339:
 4067              	.L278:
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4068              		.loc 1 296 0
 4069 0068 0120     		movs	r0, #1
 4070              	.LVL340:
 4071 006a F2E7     		b	.L275
 4072              	.L282:
 4073              		.align	2
 4074              	.L281:
 4075 006c FFB7FFFF 		.word	-18433
 4076              		.cfi_endproc
 4077              	.LFE37:
 4079              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 4080              		.align	1
 4081              		.global	HAL_HalfDuplex_Init
 4082              		.syntax unified
 4083              		.code	16
 4084              		.thumb_func
 4085              		.fpu softvfp
 4087              	HAL_HalfDuplex_Init:
 4088              	.LFB38:
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 4089              		.loc 1 371 0
 4090              		.cfi_startproc
 4091              		@ args = 0, pretend = 0, frame = 0
 4092              		@ frame_needed = 0, uses_anonymous_args = 0
 4093              	.LVL341:
 4094 0000 10B5     		push	{r4, lr}
 4095              	.LCFI34:
 4096              		.cfi_def_cfa_offset 8
 4097              		.cfi_offset 4, -8
 4098              		.cfi_offset 14, -4
 4099 0002 041E     		subs	r4, r0, #0
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4100              		.loc 1 373 0
 4101 0004 35D0     		beq	.L287
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4102              		.loc 1 381 0
 4103 0006 6923     		movs	r3, #105
 4104 0008 C35C     		ldrb	r3, [r0, r3]
 4105 000a 002B     		cmp	r3, #0
 4106 000c 27D0     		beq	.L288
 4107              	.LVL342:
 4108              	.L285:
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccOLnUHF.s 			page 128


 4109              		.loc 1 390 0
 4110 000e 6923     		movs	r3, #105
 4111 0010 2422     		movs	r2, #36
 4112 0012 E254     		strb	r2, [r4, r3]
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4113              		.loc 1 393 0
 4114 0014 2268     		ldr	r2, [r4]
 4115 0016 1368     		ldr	r3, [r2]
 4116 0018 0121     		movs	r1, #1
 4117 001a 8B43     		bics	r3, r1
 4118 001c 1360     		str	r3, [r2]
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4119              		.loc 1 396 0
 4120 001e 2000     		movs	r0, r4
 4121 0020 FFF7FEFF 		bl	UART_SetConfig
 4122              	.LVL343:
 4123 0024 0128     		cmp	r0, #1
 4124 0026 19D0     		beq	.L284
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4125              		.loc 1 401 0
 4126 0028 636A     		ldr	r3, [r4, #36]
 4127 002a 002B     		cmp	r3, #0
 4128 002c 1DD1     		bne	.L289
 4129              	.L286:
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 4130              		.loc 1 410 0
 4131 002e 2268     		ldr	r2, [r4]
 4132 0030 5368     		ldr	r3, [r2, #4]
 4133 0032 1149     		ldr	r1, .L290
 4134 0034 0B40     		ands	r3, r1
 4135 0036 5360     		str	r3, [r2, #4]
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 4136              		.loc 1 416 0
 4137 0038 2268     		ldr	r2, [r4]
 4138 003a 9368     		ldr	r3, [r2, #8]
 4139 003c 2221     		movs	r1, #34
 4140 003e 8B43     		bics	r3, r1
 4141 0040 9360     		str	r3, [r2, #8]
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4142              		.loc 1 427 0
 4143 0042 2268     		ldr	r2, [r4]
 4144 0044 9368     		ldr	r3, [r2, #8]
 4145 0046 1A39     		subs	r1, r1, #26
 4146 0048 0B43     		orrs	r3, r1
 4147 004a 9360     		str	r3, [r2, #8]
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4148              		.loc 1 430 0
 4149 004c 2268     		ldr	r2, [r4]
 4150 004e 1368     		ldr	r3, [r2]
 4151 0050 0739     		subs	r1, r1, #7
 4152 0052 0B43     		orrs	r3, r1
 4153 0054 1360     		str	r3, [r2]
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4154              		.loc 1 433 0
 4155 0056 2000     		movs	r0, r4
 4156 0058 FFF7FEFF 		bl	UART_CheckIdleState
 4157              	.LVL344:
ARM GAS  /tmp/ccOLnUHF.s 			page 129


 4158              	.L284:
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4159              		.loc 1 434 0
 4160              		@ sp needed
 4161              	.LVL345:
 4162 005c 10BD     		pop	{r4, pc}
 4163              	.LVL346:
 4164              	.L288:
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4165              		.loc 1 384 0
 4166 005e 6833     		adds	r3, r3, #104
 4167 0060 0022     		movs	r2, #0
 4168 0062 C254     		strb	r2, [r0, r3]
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4169              		.loc 1 387 0
 4170 0064 FFF7FEFF 		bl	HAL_UART_MspInit
 4171              	.LVL347:
 4172 0068 D1E7     		b	.L285
 4173              	.L289:
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4174              		.loc 1 403 0
 4175 006a 2000     		movs	r0, r4
 4176 006c FFF7FEFF 		bl	UART_AdvFeatureConfig
 4177              	.LVL348:
 4178 0070 DDE7     		b	.L286
 4179              	.LVL349:
 4180              	.L287:
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4181              		.loc 1 375 0
 4182 0072 0120     		movs	r0, #1
 4183              	.LVL350:
 4184 0074 F2E7     		b	.L284
 4185              	.L291:
 4186 0076 C046     		.align	2
 4187              	.L290:
 4188 0078 FFB7FFFF 		.word	-18433
 4189              		.cfi_endproc
 4190              	.LFE38:
 4192              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 4193              		.align	1
 4194              		.global	HAL_MultiProcessor_Init
 4195              		.syntax unified
 4196              		.code	16
 4197              		.thumb_func
 4198              		.fpu softvfp
 4200              	HAL_MultiProcessor_Init:
 4201              	.LFB39:
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 4202              		.loc 1 456 0
 4203              		.cfi_startproc
 4204              		@ args = 0, pretend = 0, frame = 0
 4205              		@ frame_needed = 0, uses_anonymous_args = 0
 4206              	.LVL351:
 4207 0000 70B5     		push	{r4, r5, r6, lr}
 4208              	.LCFI35:
 4209              		.cfi_def_cfa_offset 16
 4210              		.cfi_offset 4, -16
ARM GAS  /tmp/ccOLnUHF.s 			page 130


 4211              		.cfi_offset 5, -12
 4212              		.cfi_offset 6, -8
 4213              		.cfi_offset 14, -4
 4214 0002 0400     		movs	r4, r0
 4215 0004 0D00     		movs	r5, r1
 4216 0006 1600     		movs	r6, r2
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4217              		.loc 1 458 0
 4218 0008 0028     		cmp	r0, #0
 4219 000a 42D0     		beq	.L297
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4220              		.loc 1 466 0
 4221 000c 6923     		movs	r3, #105
 4222 000e C35C     		ldrb	r3, [r0, r3]
 4223 0010 002B     		cmp	r3, #0
 4224 0012 2CD0     		beq	.L298
 4225              	.LVL352:
 4226              	.L294:
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4227              		.loc 1 475 0
 4228 0014 6923     		movs	r3, #105
 4229 0016 2422     		movs	r2, #36
 4230 0018 E254     		strb	r2, [r4, r3]
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4231              		.loc 1 478 0
 4232 001a 2268     		ldr	r2, [r4]
 4233 001c 1368     		ldr	r3, [r2]
 4234 001e 0121     		movs	r1, #1
 4235 0020 8B43     		bics	r3, r1
 4236 0022 1360     		str	r3, [r2]
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4237              		.loc 1 481 0
 4238 0024 2000     		movs	r0, r4
 4239 0026 FFF7FEFF 		bl	UART_SetConfig
 4240              	.LVL353:
 4241 002a 0128     		cmp	r0, #1
 4242 002c 1ED0     		beq	.L293
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4243              		.loc 1 486 0
 4244 002e 636A     		ldr	r3, [r4, #36]
 4245 0030 002B     		cmp	r3, #0
 4246 0032 22D1     		bne	.L299
 4247              	.L295:
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 4248              		.loc 1 495 0
 4249 0034 2268     		ldr	r2, [r4]
 4250 0036 5368     		ldr	r3, [r2, #4]
 4251 0038 1749     		ldr	r1, .L301
 4252 003a 0B40     		ands	r3, r1
 4253 003c 5360     		str	r3, [r2, #4]
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 4254              		.loc 1 501 0
 4255 003e 2268     		ldr	r2, [r4]
 4256 0040 9368     		ldr	r3, [r2, #8]
 4257 0042 2A21     		movs	r1, #42
 4258 0044 8B43     		bics	r3, r1
 4259 0046 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccOLnUHF.s 			page 131


 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4260              		.loc 1 513 0
 4261 0048 8023     		movs	r3, #128
 4262 004a 1B01     		lsls	r3, r3, #4
 4263 004c 9E42     		cmp	r6, r3
 4264 004e 18D0     		beq	.L300
 4265              	.L296:
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4266              		.loc 1 520 0
 4267 0050 2368     		ldr	r3, [r4]
 4268 0052 1A68     		ldr	r2, [r3]
 4269 0054 1149     		ldr	r1, .L301+4
 4270 0056 0A40     		ands	r2, r1
 4271 0058 3243     		orrs	r2, r6
 4272 005a 1A60     		str	r2, [r3]
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4273              		.loc 1 523 0
 4274 005c 2268     		ldr	r2, [r4]
 4275 005e 1368     		ldr	r3, [r2]
 4276 0060 0121     		movs	r1, #1
 4277 0062 0B43     		orrs	r3, r1
 4278 0064 1360     		str	r3, [r2]
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4279              		.loc 1 526 0
 4280 0066 2000     		movs	r0, r4
 4281 0068 FFF7FEFF 		bl	UART_CheckIdleState
 4282              	.LVL354:
 4283              	.L293:
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4284              		.loc 1 527 0
 4285              		@ sp needed
 4286              	.LVL355:
 4287              	.LVL356:
 4288 006c 70BD     		pop	{r4, r5, r6, pc}
 4289              	.LVL357:
 4290              	.L298:
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4291              		.loc 1 469 0
 4292 006e 6833     		adds	r3, r3, #104
 4293 0070 0022     		movs	r2, #0
 4294              	.LVL358:
 4295 0072 C254     		strb	r2, [r0, r3]
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4296              		.loc 1 472 0
 4297 0074 FFF7FEFF 		bl	HAL_UART_MspInit
 4298              	.LVL359:
 4299 0078 CCE7     		b	.L294
 4300              	.L299:
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4301              		.loc 1 488 0
 4302 007a 2000     		movs	r0, r4
 4303 007c FFF7FEFF 		bl	UART_AdvFeatureConfig
 4304              	.LVL360:
 4305 0080 D8E7     		b	.L295
 4306              	.L300:
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4307              		.loc 1 516 0
ARM GAS  /tmp/ccOLnUHF.s 			page 132


 4308 0082 2268     		ldr	r2, [r4]
 4309 0084 5368     		ldr	r3, [r2, #4]
 4310 0086 1B02     		lsls	r3, r3, #8
 4311 0088 1B0A     		lsrs	r3, r3, #8
 4312 008a 2D06     		lsls	r5, r5, #24
 4313 008c 1D43     		orrs	r5, r3
 4314 008e 5560     		str	r5, [r2, #4]
 4315 0090 DEE7     		b	.L296
 4316              	.LVL361:
 4317              	.L297:
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4318              		.loc 1 460 0
 4319 0092 0120     		movs	r0, #1
 4320              	.LVL362:
 4321 0094 EAE7     		b	.L293
 4322              	.L302:
 4323 0096 C046     		.align	2
 4324              	.L301:
 4325 0098 FFB7FFFF 		.word	-18433
 4326 009c FFF7FFFF 		.word	-2049
 4327              		.cfi_endproc
 4328              	.LFE39:
 4330              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 4331              		.align	1
 4332              		.global	HAL_MultiProcessor_EnableMuteMode
 4333              		.syntax unified
 4334              		.code	16
 4335              		.thumb_func
 4336              		.fpu softvfp
 4338              	HAL_MultiProcessor_EnableMuteMode:
 4339              	.LFB67:
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 4340              		.loc 1 1954 0
 4341              		.cfi_startproc
 4342              		@ args = 0, pretend = 0, frame = 0
 4343              		@ frame_needed = 0, uses_anonymous_args = 0
 4344              	.LVL363:
 4345 0000 10B5     		push	{r4, lr}
 4346              	.LCFI36:
 4347              		.cfi_def_cfa_offset 8
 4348              		.cfi_offset 4, -8
 4349              		.cfi_offset 14, -4
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4350              		.loc 1 1956 0
 4351 0002 6823     		movs	r3, #104
 4352 0004 C35C     		ldrb	r3, [r0, r3]
 4353 0006 012B     		cmp	r3, #1
 4354 0008 10D0     		beq	.L305
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4355              		.loc 1 1956 0 is_stmt 0 discriminator 2
 4356 000a 6823     		movs	r3, #104
 4357 000c 0122     		movs	r2, #1
 4358 000e C254     		strb	r2, [r0, r3]
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4359              		.loc 1 1958 0 is_stmt 1 discriminator 2
 4360 0010 6832     		adds	r2, r2, #104
 4361 0012 443B     		subs	r3, r3, #68
ARM GAS  /tmp/ccOLnUHF.s 			page 133


 4362 0014 8354     		strb	r3, [r0, r2]
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4363              		.loc 1 1961 0 discriminator 2
 4364 0016 0168     		ldr	r1, [r0]
 4365 0018 0C68     		ldr	r4, [r1]
 4366 001a 8023     		movs	r3, #128
 4367 001c 9B01     		lsls	r3, r3, #6
 4368 001e 2343     		orrs	r3, r4
 4369 0020 0B60     		str	r3, [r1]
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4370              		.loc 1 1963 0 discriminator 2
 4371 0022 2023     		movs	r3, #32
 4372 0024 8354     		strb	r3, [r0, r2]
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4373              		.loc 1 1965 0 discriminator 2
 4374 0026 FFF7FEFF 		bl	UART_CheckIdleState
 4375              	.LVL364:
 4376              	.L304:
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4377              		.loc 1 1966 0
 4378              		@ sp needed
 4379 002a 10BD     		pop	{r4, pc}
 4380              	.LVL365:
 4381              	.L305:
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4382              		.loc 1 1956 0
 4383 002c 0220     		movs	r0, #2
 4384              	.LVL366:
 4385 002e FCE7     		b	.L304
 4386              		.cfi_endproc
 4387              	.LFE67:
 4389              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 4390              		.align	1
 4391              		.global	HAL_MultiProcessor_DisableMuteMode
 4392              		.syntax unified
 4393              		.code	16
 4394              		.thumb_func
 4395              		.fpu softvfp
 4397              	HAL_MultiProcessor_DisableMuteMode:
 4398              	.LFB68:
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 4399              		.loc 1 1975 0
 4400              		.cfi_startproc
 4401              		@ args = 0, pretend = 0, frame = 0
 4402              		@ frame_needed = 0, uses_anonymous_args = 0
 4403              	.LVL367:
 4404 0000 10B5     		push	{r4, lr}
 4405              	.LCFI37:
 4406              		.cfi_def_cfa_offset 8
 4407              		.cfi_offset 4, -8
 4408              		.cfi_offset 14, -4
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4409              		.loc 1 1977 0
 4410 0002 6823     		movs	r3, #104
 4411 0004 C35C     		ldrb	r3, [r0, r3]
 4412 0006 012B     		cmp	r3, #1
 4413 0008 0FD0     		beq	.L308
ARM GAS  /tmp/ccOLnUHF.s 			page 134


1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4414              		.loc 1 1977 0 is_stmt 0 discriminator 2
 4415 000a 6823     		movs	r3, #104
 4416 000c 0122     		movs	r2, #1
 4417 000e C254     		strb	r2, [r0, r3]
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4418              		.loc 1 1979 0 is_stmt 1 discriminator 2
 4419 0010 6832     		adds	r2, r2, #104
 4420 0012 443B     		subs	r3, r3, #68
 4421 0014 8354     		strb	r3, [r0, r2]
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4422              		.loc 1 1982 0 discriminator 2
 4423 0016 0168     		ldr	r1, [r0]
 4424 0018 0B68     		ldr	r3, [r1]
 4425 001a 054C     		ldr	r4, .L309
 4426 001c 2340     		ands	r3, r4
 4427 001e 0B60     		str	r3, [r1]
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4428              		.loc 1 1984 0 discriminator 2
 4429 0020 2023     		movs	r3, #32
 4430 0022 8354     		strb	r3, [r0, r2]
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4431              		.loc 1 1986 0 discriminator 2
 4432 0024 FFF7FEFF 		bl	UART_CheckIdleState
 4433              	.LVL368:
 4434              	.L307:
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4435              		.loc 1 1987 0
 4436              		@ sp needed
 4437 0028 10BD     		pop	{r4, pc}
 4438              	.LVL369:
 4439              	.L308:
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4440              		.loc 1 1977 0
 4441 002a 0220     		movs	r0, #2
 4442              	.LVL370:
 4443 002c FCE7     		b	.L307
 4444              	.L310:
 4445 002e C046     		.align	2
 4446              	.L309:
 4447 0030 FFDFFFFF 		.word	-8193
 4448              		.cfi_endproc
 4449              	.LFE68:
 4451              		.section	.text.UART_Transmit_IT,"ax",%progbits
 4452              		.align	1
 4453              		.global	UART_Transmit_IT
 4454              		.syntax unified
 4455              		.code	16
 4456              		.thumb_func
 4457              		.fpu softvfp
 4459              	UART_Transmit_IT:
 4460              	.LFB90:
2661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Send an amount of data in interrupt mode.
2664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
ARM GAS  /tmp/ccOLnUHF.s 			page 135


2666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4461              		.loc 1 2670 0
 4462              		.cfi_startproc
 4463              		@ args = 0, pretend = 0, frame = 0
 4464              		@ frame_needed = 0, uses_anonymous_args = 0
 4465              		@ link register save eliminated.
 4466              	.LVL371:
2671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
2672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 4467              		.loc 1 2674 0
 4468 0000 6923     		movs	r3, #105
 4469 0002 C35C     		ldrb	r3, [r0, r3]
 4470 0004 212B     		cmp	r3, #33
 4471 0006 2FD1     		bne	.L316
2675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->TxXferCount == 0U)
 4472              		.loc 1 2676 0
 4473 0008 3133     		adds	r3, r3, #49
 4474 000a C35A     		ldrh	r3, [r0, r3]
 4475 000c 9BB2     		uxth	r3, r3
 4476 000e 002B     		cmp	r3, #0
 4477 0010 11D0     		beq	.L317
2677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
2679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
2680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_OK;
2685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 4478              		.loc 1 2688 0
 4479 0012 8023     		movs	r3, #128
 4480 0014 5B01     		lsls	r3, r3, #5
 4481 0016 8268     		ldr	r2, [r0, #8]
 4482 0018 9A42     		cmp	r2, r3
 4483 001a 18D0     		beq	.L318
 4484              	.L314:
2689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
2691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
2692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
2693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
2695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFFU);
 4485              		.loc 1 2696 0
 4486 001c C36C     		ldr	r3, [r0, #76]
ARM GAS  /tmp/ccOLnUHF.s 			page 136


 4487 001e 5A1C     		adds	r2, r3, #1
 4488 0020 C264     		str	r2, [r0, #76]
 4489 0022 1B78     		ldrb	r3, [r3]
 4490 0024 0268     		ldr	r2, [r0]
 4491 0026 1385     		strh	r3, [r2, #40]
 4492              	.L315:
2697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 4493              		.loc 1 2698 0
 4494 0028 5222     		movs	r2, #82
 4495 002a 835A     		ldrh	r3, [r0, r2]
 4496 002c 013B     		subs	r3, r3, #1
 4497 002e 9BB2     		uxth	r3, r3
 4498 0030 8352     		strh	r3, [r0, r2]
2699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_OK;
 4499              		.loc 1 2700 0
 4500 0032 0020     		movs	r0, #0
 4501              	.LVL372:
 4502 0034 19E0     		b	.L312
 4503              	.LVL373:
 4504              	.L317:
2679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4505              		.loc 1 2679 0
 4506 0036 0268     		ldr	r2, [r0]
 4507 0038 1368     		ldr	r3, [r2]
 4508 003a 8021     		movs	r1, #128
 4509 003c 8B43     		bics	r3, r1
 4510 003e 1360     		str	r3, [r2]
2682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4511              		.loc 1 2682 0
 4512 0040 0268     		ldr	r2, [r0]
 4513 0042 1368     		ldr	r3, [r2]
 4514 0044 4039     		subs	r1, r1, #64
 4515 0046 0B43     		orrs	r3, r1
 4516 0048 1360     		str	r3, [r2]
2684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4517              		.loc 1 2684 0
 4518 004a 0020     		movs	r0, #0
 4519              	.LVL374:
 4520 004c 0DE0     		b	.L312
 4521              	.LVL375:
 4522              	.L318:
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4523              		.loc 1 2688 0 discriminator 1
 4524 004e 0369     		ldr	r3, [r0, #16]
 4525 0050 002B     		cmp	r3, #0
 4526 0052 E3D1     		bne	.L314
 4527              	.LVL376:
2691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 4528              		.loc 1 2691 0
 4529 0054 C36C     		ldr	r3, [r0, #76]
 4530 0056 1B88     		ldrh	r3, [r3]
 4531 0058 DB05     		lsls	r3, r3, #23
 4532 005a DB0D     		lsrs	r3, r3, #23
 4533 005c 0268     		ldr	r2, [r0]
 4534 005e 1385     		strh	r3, [r2, #40]
ARM GAS  /tmp/ccOLnUHF.s 			page 137


 4535              	.LVL377:
2692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4536              		.loc 1 2692 0
 4537 0060 C36C     		ldr	r3, [r0, #76]
 4538 0062 0233     		adds	r3, r3, #2
 4539 0064 C364     		str	r3, [r0, #76]
 4540 0066 DFE7     		b	.L315
 4541              	.L316:
2701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 4542              		.loc 1 2705 0
 4543 0068 0220     		movs	r0, #2
 4544              	.LVL378:
 4545              	.L312:
2706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4546              		.loc 1 2707 0
 4547              		@ sp needed
 4548 006a 7047     		bx	lr
 4549              		.cfi_endproc
 4550              	.LFE90:
 4552              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 4553              		.align	1
 4554              		.global	UART_EndTransmit_IT
 4555              		.syntax unified
 4556              		.code	16
 4557              		.thumb_func
 4558              		.fpu softvfp
 4560              	UART_EndTransmit_IT:
 4561              	.LFB91:
2708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
2711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART module.
2713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4562              		.loc 1 2716 0
 4563              		.cfi_startproc
 4564              		@ args = 0, pretend = 0, frame = 0
 4565              		@ frame_needed = 0, uses_anonymous_args = 0
 4566              	.LVL379:
 4567 0000 10B5     		push	{r4, lr}
 4568              	.LCFI38:
 4569              		.cfi_def_cfa_offset 8
 4570              		.cfi_offset 4, -8
 4571              		.cfi_offset 14, -4
2717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
2718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 4572              		.loc 1 2718 0
 4573 0002 0268     		ldr	r2, [r0]
 4574 0004 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccOLnUHF.s 			page 138


 4575 0006 4021     		movs	r1, #64
 4576 0008 8B43     		bics	r3, r1
 4577 000a 1360     		str	r3, [r2]
2719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4578              		.loc 1 2721 0
 4579 000c 6923     		movs	r3, #105
 4580 000e 2022     		movs	r2, #32
 4581 0010 C254     		strb	r2, [r0, r3]
2722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 4582              		.loc 1 2723 0
 4583 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 4584              	.LVL380:
2724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4585              		.loc 1 2726 0
 4586 0016 0020     		movs	r0, #0
 4587              		@ sp needed
 4588 0018 10BD     		pop	{r4, pc}
 4589              		.cfi_endproc
 4590              	.LFE91:
 4592              		.section	.text.UART_Receive_IT,"ax",%progbits
 4593              		.align	1
 4594              		.global	UART_Receive_IT
 4595              		.syntax unified
 4596              		.code	16
 4597              		.thumb_func
 4598              		.fpu softvfp
 4600              	UART_Receive_IT:
 4601              	.LFB92:
2727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Receive an amount of data in interrupt mode.
2730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
2732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4602              		.loc 1 2736 0
 4603              		.cfi_startproc
 4604              		@ args = 0, pretend = 0, frame = 0
 4605              		@ frame_needed = 0, uses_anonymous_args = 0
 4606              	.LVL381:
 4607 0000 10B5     		push	{r4, lr}
 4608              	.LCFI39:
 4609              		.cfi_def_cfa_offset 8
 4610              		.cfi_offset 4, -8
 4611              		.cfi_offset 14, -4
2737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
2738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 4612              		.loc 1 2738 0
 4613 0002 5C23     		movs	r3, #92
ARM GAS  /tmp/ccOLnUHF.s 			page 139


 4614 0004 C25A     		ldrh	r2, [r0, r3]
 4615              	.LVL382:
2739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t  uhdata;
2740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 4616              		.loc 1 2742 0
 4617 0006 0E33     		adds	r3, r3, #14
 4618 0008 C35C     		ldrb	r3, [r0, r3]
 4619 000a 222B     		cmp	r3, #34
 4620 000c 32D1     		bne	.L321
2743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 4621              		.loc 1 2744 0
 4622 000e 0368     		ldr	r3, [r0]
 4623 0010 9B8C     		ldrh	r3, [r3, #36]
 4624 0012 9BB2     		uxth	r3, r3
 4625              	.LVL383:
2745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 4626              		.loc 1 2745 0
 4627 0014 8021     		movs	r1, #128
 4628 0016 4901     		lsls	r1, r1, #5
 4629 0018 8468     		ldr	r4, [r0, #8]
 4630 001a 8C42     		cmp	r4, r1
 4631 001c 0ED0     		beq	.L326
 4632              	.L322:
2746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
2748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pRxBuffPtr +=2U;
2750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
 4633              		.loc 1 2753 0
 4634 001e D2B2     		uxtb	r2, r2
 4635              	.LVL384:
 4636 0020 416D     		ldr	r1, [r0, #84]
 4637 0022 4C1C     		adds	r4, r1, #1
 4638 0024 4465     		str	r4, [r0, #84]
 4639              	.LVL385:
 4640 0026 1340     		ands	r3, r2
 4641              	.LVL386:
 4642 0028 0B70     		strb	r3, [r1]
 4643              	.L323:
2754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
 4644              		.loc 1 2756 0
 4645 002a 5A22     		movs	r2, #90
 4646 002c 835A     		ldrh	r3, [r0, r2]
 4647 002e 013B     		subs	r3, r3, #1
 4648 0030 9BB2     		uxth	r3, r3
 4649 0032 8352     		strh	r3, [r0, r2]
 4650 0034 002B     		cmp	r3, #0
 4651 0036 0BD0     		beq	.L327
2757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
ARM GAS  /tmp/ccOLnUHF.s 			page 140


2758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
2768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_OK;
2770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 4652              		.loc 1 2772 0
 4653 0038 0020     		movs	r0, #0
 4654              	.LVL387:
 4655 003a 21E0     		b	.L324
 4656              	.LVL388:
 4657              	.L326:
2745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4658              		.loc 1 2745 0 discriminator 1
 4659 003c 0169     		ldr	r1, [r0, #16]
 4660 003e 0029     		cmp	r1, #0
 4661 0040 EDD1     		bne	.L322
 4662              	.LVL389:
2748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pRxBuffPtr +=2U;
 4663              		.loc 1 2748 0
 4664 0042 1340     		ands	r3, r2
 4665              	.LVL390:
 4666 0044 426D     		ldr	r2, [r0, #84]
 4667              	.LVL391:
 4668 0046 1380     		strh	r3, [r2]
 4669              	.LVL392:
2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4670              		.loc 1 2749 0
 4671 0048 436D     		ldr	r3, [r0, #84]
 4672 004a 0233     		adds	r3, r3, #2
 4673 004c 4365     		str	r3, [r0, #84]
 4674 004e ECE7     		b	.L323
 4675              	.LVL393:
 4676              	.L327:
2759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4677              		.loc 1 2759 0
 4678 0050 0268     		ldr	r2, [r0]
 4679 0052 1368     		ldr	r3, [r2]
 4680 0054 0B49     		ldr	r1, .L328
 4681 0056 0B40     		ands	r3, r1
 4682 0058 1360     		str	r3, [r2]
2762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4683              		.loc 1 2762 0
 4684 005a 0268     		ldr	r2, [r0]
 4685 005c 9368     		ldr	r3, [r2, #8]
 4686 005e 2331     		adds	r1, r1, #35
 4687 0060 FF31     		adds	r1, r1, #255
 4688 0062 8B43     		bics	r3, r1
ARM GAS  /tmp/ccOLnUHF.s 			page 141


 4689 0064 9360     		str	r3, [r2, #8]
2765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4690              		.loc 1 2765 0
 4691 0066 6A23     		movs	r3, #106
 4692 0068 2022     		movs	r2, #32
 4693 006a C254     		strb	r2, [r0, r3]
2767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4694              		.loc 1 2767 0
 4695 006c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 4696              	.LVL394:
2769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4697              		.loc 1 2769 0
 4698 0070 0020     		movs	r0, #0
 4699 0072 05E0     		b	.L324
 4700              	.LVL395:
 4701              	.L321:
2773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
2777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4702              		.loc 1 2777 0
 4703 0074 0268     		ldr	r2, [r0]
 4704              	.LVL396:
 4705 0076 9369     		ldr	r3, [r2, #24]
 4706 0078 0821     		movs	r1, #8
 4707 007a 0B43     		orrs	r3, r1
 4708 007c 9361     		str	r3, [r2, #24]
 4709              	.LVL397:
2778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 4710              		.loc 1 2779 0
 4711 007e 0220     		movs	r0, #2
 4712              	.LVL398:
 4713              	.L324:
2780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4714              		.loc 1 2781 0
 4715              		@ sp needed
 4716 0080 10BD     		pop	{r4, pc}
 4717              	.L329:
 4718 0082 C046     		.align	2
 4719              	.L328:
 4720 0084 DFFEFFFF 		.word	-289
 4721              		.cfi_endproc
 4722              	.LFE92:
 4724              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 4725              		.align	1
 4726              		.global	HAL_UART_IRQHandler
 4727              		.syntax unified
 4728              		.code	16
 4729              		.thumb_func
 4730              		.fpu softvfp
 4732              	HAL_UART_IRQHandler:
 4733              	.LFB58:
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 4734              		.loc 1 1657 0
ARM GAS  /tmp/ccOLnUHF.s 			page 142


 4735              		.cfi_startproc
 4736              		@ args = 0, pretend = 0, frame = 0
 4737              		@ frame_needed = 0, uses_anonymous_args = 0
 4738              	.LVL399:
 4739 0000 70B5     		push	{r4, r5, r6, lr}
 4740              	.LCFI40:
 4741              		.cfi_def_cfa_offset 16
 4742              		.cfi_offset 4, -16
 4743              		.cfi_offset 5, -12
 4744              		.cfi_offset 6, -8
 4745              		.cfi_offset 14, -4
 4746 0002 0400     		movs	r4, r0
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 4747              		.loc 1 1658 0
 4748 0004 0168     		ldr	r1, [r0]
 4749 0006 CB69     		ldr	r3, [r1, #28]
 4750              	.LVL400:
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr3its;
 4751              		.loc 1 1659 0
 4752 0008 0868     		ldr	r0, [r1]
 4753              	.LVL401:
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (errorflags == RESET)
 4754              		.loc 1 1664 0
 4755 000a 0F22     		movs	r2, #15
 4756 000c 1A40     		ands	r2, r3
 4757              	.LVL402:
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4758              		.loc 1 1665 0
 4759 000e 03D1     		bne	.L331
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4760              		.loc 1 1668 0
 4761 0010 9D06     		lsls	r5, r3, #26
 4762 0012 01D5     		bpl	.L331
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4763              		.loc 1 1668 0 is_stmt 0 discriminator 1
 4764 0014 8506     		lsls	r5, r0, #26
 4765 0016 5BD4     		bmi	.L347
 4766              	.L331:
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(   (errorflags != RESET)
 4767              		.loc 1 1676 0 is_stmt 1
 4768 0018 8D68     		ldr	r5, [r1, #8]
 4769              	.LVL403:
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
 4770              		.loc 1 1677 0
 4771 001a 002A     		cmp	r2, #0
 4772 001c 6ED0     		beq	.L333
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
 4773              		.loc 1 1678 0
 4774 001e 0122     		movs	r2, #1
 4775              	.LVL404:
 4776 0020 2A40     		ands	r2, r5
 4777 0022 03D1     		bne	.L334
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4778              		.loc 1 1679 0
 4779 0024 9026     		movs	r6, #144
 4780 0026 7600     		lsls	r6, r6, #1
 4781 0028 3042     		tst	r0, r6
ARM GAS  /tmp/ccOLnUHF.s 			page 143


 4782 002a 67D0     		beq	.L333
 4783              	.L334:
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4784              		.loc 1 1682 0
 4785 002c DD07     		lsls	r5, r3, #31
 4786 002e 06D5     		bpl	.L335
 4787              	.LVL405:
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4788              		.loc 1 1682 0 is_stmt 0 discriminator 1
 4789 0030 C505     		lsls	r5, r0, #23
 4790 0032 04D5     		bpl	.L335
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4791              		.loc 1 1684 0 is_stmt 1
 4792 0034 0125     		movs	r5, #1
 4793 0036 0D62     		str	r5, [r1, #32]
1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4794              		.loc 1 1686 0
 4795 0038 E16E     		ldr	r1, [r4, #108]
 4796 003a 2943     		orrs	r1, r5
 4797 003c E166     		str	r1, [r4, #108]
 4798              	.L335:
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4799              		.loc 1 1690 0
 4800 003e 9907     		lsls	r1, r3, #30
 4801 0040 08D5     		bpl	.L336
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4802              		.loc 1 1690 0 is_stmt 0 discriminator 1
 4803 0042 002A     		cmp	r2, #0
 4804 0044 06D0     		beq	.L336
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4805              		.loc 1 1692 0 is_stmt 1
 4806 0046 2168     		ldr	r1, [r4]
 4807 0048 0225     		movs	r5, #2
 4808 004a 0D62     		str	r5, [r1, #32]
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4809              		.loc 1 1694 0
 4810 004c E16E     		ldr	r1, [r4, #108]
 4811 004e 0235     		adds	r5, r5, #2
 4812 0050 2943     		orrs	r1, r5
 4813 0052 E166     		str	r1, [r4, #108]
 4814              	.L336:
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4815              		.loc 1 1698 0
 4816 0054 5907     		lsls	r1, r3, #29
 4817 0056 08D5     		bpl	.L337
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4818              		.loc 1 1698 0 is_stmt 0 discriminator 1
 4819 0058 002A     		cmp	r2, #0
 4820 005a 06D0     		beq	.L337
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4821              		.loc 1 1700 0 is_stmt 1
 4822 005c 2168     		ldr	r1, [r4]
 4823 005e 0425     		movs	r5, #4
 4824 0060 0D62     		str	r5, [r1, #32]
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4825              		.loc 1 1702 0
 4826 0062 E16E     		ldr	r1, [r4, #108]
ARM GAS  /tmp/ccOLnUHF.s 			page 144


 4827 0064 023D     		subs	r5, r5, #2
 4828 0066 2943     		orrs	r1, r5
 4829 0068 E166     		str	r1, [r4, #108]
 4830              	.L337:
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 4831              		.loc 1 1706 0
 4832 006a 1907     		lsls	r1, r3, #28
 4833 006c 09D5     		bpl	.L338
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 4834              		.loc 1 1706 0 is_stmt 0 discriminator 1
 4835 006e 8106     		lsls	r1, r0, #26
 4836 0070 01D4     		bmi	.L339
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4837              		.loc 1 1707 0 is_stmt 1
 4838 0072 002A     		cmp	r2, #0
 4839 0074 05D0     		beq	.L338
 4840              	.L339:
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4841              		.loc 1 1709 0
 4842 0076 2268     		ldr	r2, [r4]
 4843 0078 0821     		movs	r1, #8
 4844 007a 1162     		str	r1, [r2, #32]
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4845              		.loc 1 1711 0
 4846 007c E26E     		ldr	r2, [r4, #108]
 4847 007e 0A43     		orrs	r2, r1
 4848 0080 E266     		str	r2, [r4, #108]
 4849              	.L338:
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4850              		.loc 1 1715 0
 4851 0082 E26E     		ldr	r2, [r4, #108]
 4852 0084 002A     		cmp	r2, #0
 4853 0086 45D0     		beq	.L330
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4854              		.loc 1 1718 0
 4855 0088 9B06     		lsls	r3, r3, #26
 4856 008a 01D5     		bpl	.L340
 4857              	.LVL406:
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4858              		.loc 1 1718 0 is_stmt 0 discriminator 1
 4859 008c 8306     		lsls	r3, r0, #26
 4860 008e 23D4     		bmi	.L348
 4861              	.LVL407:
 4862              	.L340:
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 4863              		.loc 1 1725 0 is_stmt 1
 4864 0090 E36E     		ldr	r3, [r4, #108]
 4865 0092 1B07     		lsls	r3, r3, #28
 4866 0094 03D4     		bmi	.L341
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {  
 4867              		.loc 1 1726 0 discriminator 1
 4868 0096 2368     		ldr	r3, [r4]
 4869 0098 9B68     		ldr	r3, [r3, #8]
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 4870              		.loc 1 1725 0 discriminator 1
 4871 009a 5B06     		lsls	r3, r3, #25
 4872 009c 28D5     		bpl	.L342
ARM GAS  /tmp/ccOLnUHF.s 			page 145


 4873              	.L341:
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4874              		.loc 1 1731 0
 4875 009e 2000     		movs	r0, r4
 4876 00a0 FFF7FEFF 		bl	UART_EndRxTransfer
 4877              	.LVL408:
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 4878              		.loc 1 1734 0
 4879 00a4 2368     		ldr	r3, [r4]
 4880 00a6 9A68     		ldr	r2, [r3, #8]
 4881 00a8 5206     		lsls	r2, r2, #25
 4882 00aa 1DD5     		bpl	.L343
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4883              		.loc 1 1736 0
 4884 00ac 9A68     		ldr	r2, [r3, #8]
 4885 00ae 4021     		movs	r1, #64
 4886 00b0 8A43     		bics	r2, r1
 4887 00b2 9A60     		str	r2, [r3, #8]
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
 4888              		.loc 1 1739 0
 4889 00b4 636E     		ldr	r3, [r4, #100]
 4890 00b6 002B     		cmp	r3, #0
 4891 00b8 12D0     		beq	.L344
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4892              		.loc 1 1743 0
 4893 00ba 214A     		ldr	r2, .L352
 4894 00bc 5A63     		str	r2, [r3, #52]
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             {
 4895              		.loc 1 1746 0
 4896 00be 606E     		ldr	r0, [r4, #100]
 4897 00c0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4898              	.LVL409:
 4899 00c4 0028     		cmp	r0, #0
 4900 00c6 25D0     		beq	.L330
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             }
 4901              		.loc 1 1749 0
 4902 00c8 606E     		ldr	r0, [r4, #100]
 4903 00ca 436B     		ldr	r3, [r0, #52]
 4904 00cc 9847     		blx	r3
 4905              	.LVL410:
 4906 00ce 21E0     		b	.L330
 4907              	.LVL411:
 4908              	.L347:
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
 4909              		.loc 1 1670 0
 4910 00d0 2000     		movs	r0, r4
 4911              	.LVL412:
 4912 00d2 FFF7FEFF 		bl	UART_Receive_IT
 4913              	.LVL413:
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4914              		.loc 1 1671 0
 4915 00d6 1DE0     		b	.L330
 4916              	.LVL414:
 4917              	.L348:
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4918              		.loc 1 1720 0
 4919 00d8 2000     		movs	r0, r4
ARM GAS  /tmp/ccOLnUHF.s 			page 146


 4920              	.LVL415:
 4921 00da FFF7FEFF 		bl	UART_Receive_IT
 4922              	.LVL416:
 4923 00de D7E7     		b	.L340
 4924              	.L344:
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
 4925              		.loc 1 1755 0
 4926 00e0 2000     		movs	r0, r4
 4927 00e2 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4928              	.LVL417:
 4929 00e6 15E0     		b	.L330
 4930              	.L343:
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 4931              		.loc 1 1761 0
 4932 00e8 2000     		movs	r0, r4
 4933 00ea FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4934              	.LVL418:
 4935 00ee 11E0     		b	.L330
 4936              	.L342:
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 4937              		.loc 1 1768 0
 4938 00f0 2000     		movs	r0, r4
 4939 00f2 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4940              	.LVL419:
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4941              		.loc 1 1769 0
 4942 00f6 0023     		movs	r3, #0
 4943 00f8 E366     		str	r3, [r4, #108]
 4944 00fa 0BE0     		b	.L330
 4945              	.LVL420:
 4946              	.L333:
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4947              		.loc 1 1778 0
 4948 00fc DA02     		lsls	r2, r3, #11
 4949 00fe 01D5     		bpl	.L345
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4950              		.loc 1 1778 0 is_stmt 0 discriminator 1
 4951 0100 6A02     		lsls	r2, r5, #9
 4952 0102 08D4     		bmi	.L349
 4953              	.L345:
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4954              		.loc 1 1790 0 is_stmt 1
 4955 0104 1A06     		lsls	r2, r3, #24
 4956 0106 01D5     		bpl	.L346
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4957              		.loc 1 1790 0 is_stmt 0 discriminator 1
 4958 0108 0206     		lsls	r2, r0, #24
 4959 010a 10D4     		bmi	.L350
 4960              	.L346:
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4961              		.loc 1 1797 0 is_stmt 1
 4962 010c 5B06     		lsls	r3, r3, #25
 4963 010e 01D5     		bpl	.L330
 4964              	.LVL421:
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4965              		.loc 1 1797 0 is_stmt 0 discriminator 1
 4966 0110 4306     		lsls	r3, r0, #25
ARM GAS  /tmp/ccOLnUHF.s 			page 147


 4967 0112 10D4     		bmi	.L351
 4968              	.LVL422:
 4969              	.L330:
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4970              		.loc 1 1803 0 is_stmt 1
 4971              		@ sp needed
 4972              	.LVL423:
 4973 0114 70BD     		pop	{r4, r5, r6, pc}
 4974              	.LVL424:
 4975              	.L349:
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
 4976              		.loc 1 1780 0
 4977 0116 8023     		movs	r3, #128
 4978              	.LVL425:
 4979 0118 5B03     		lsls	r3, r3, #13
 4980 011a 0B62     		str	r3, [r1, #32]
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4981              		.loc 1 1782 0
 4982 011c 2023     		movs	r3, #32
 4983 011e 6922     		movs	r2, #105
 4984 0120 A354     		strb	r3, [r4, r2]
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 4985              		.loc 1 1783 0
 4986 0122 0132     		adds	r2, r2, #1
 4987 0124 A354     		strb	r3, [r4, r2]
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 4988              		.loc 1 1784 0
 4989 0126 2000     		movs	r0, r4
 4990              	.LVL426:
 4991 0128 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 4992              	.LVL427:
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4993              		.loc 1 1785 0
 4994 012c F2E7     		b	.L330
 4995              	.LVL428:
 4996              	.L350:
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 4997              		.loc 1 1792 0
 4998 012e 2000     		movs	r0, r4
 4999              	.LVL429:
 5000 0130 FFF7FEFF 		bl	UART_Transmit_IT
 5001              	.LVL430:
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5002              		.loc 1 1793 0
 5003 0134 EEE7     		b	.L330
 5004              	.LVL431:
 5005              	.L351:
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 5006              		.loc 1 1799 0
 5007 0136 2000     		movs	r0, r4
 5008              	.LVL432:
 5009 0138 FFF7FEFF 		bl	UART_EndTransmit_IT
 5010              	.LVL433:
1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5011              		.loc 1 1800 0
 5012 013c EAE7     		b	.L330
 5013              	.L353:
ARM GAS  /tmp/ccOLnUHF.s 			page 148


 5014 013e C046     		.align	2
 5015              	.L352:
 5016 0140 00000000 		.word	UART_DMAAbortOnError
 5017              		.cfi_endproc
 5018              	.LFE58:
 5020              		.text
 5021              	.Letext0:
 5022              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 5023              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 5024              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 5025              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 5026              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 5027              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 5028              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 5029              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 5030              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 5031              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 5032              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 5033              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 5034              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 5035              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 5036              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart_ex.h"
ARM GAS  /tmp/ccOLnUHF.s 			page 149


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_uart.c
     /tmp/ccOLnUHF.s:16     .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccOLnUHF.s:22     .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccOLnUHF.s:48     .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccOLnUHF.s:54     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccOLnUHF.s:85     .text.UART_EndRxTransfer:0000000000000020 $d
     /tmp/ccOLnUHF.s:90     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccOLnUHF.s:97     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccOLnUHF.s:112    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccOLnUHF.s:119    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccOLnUHF.s:134    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccOLnUHF.s:141    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccOLnUHF.s:208    .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccOLnUHF.s:215    .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccOLnUHF.s:323    .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccOLnUHF.s:330    .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccOLnUHF.s:524    .text.HAL_UART_Receive_IT:00000000000000d0 $d
     /tmp/ccOLnUHF.s:529    .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccOLnUHF.s:536    .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccOLnUHF.s:671    .text.HAL_UART_Transmit_DMA:000000000000009c $d
     /tmp/ccOLnUHF.s:1403   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccOLnUHF.s:1486   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccOLnUHF.s:1684   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccOLnUHF.s:678    .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccOLnUHF.s:685    .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccOLnUHF.s:826    .text.HAL_UART_Receive_DMA:00000000000000a4 $d
     /tmp/ccOLnUHF.s:1539   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccOLnUHF.s:1631   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccOLnUHF.s:833    .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccOLnUHF.s:840    .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccOLnUHF.s:928    .text.HAL_UART_DMAPause:0000000000000068 $d
     /tmp/ccOLnUHF.s:933    .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccOLnUHF.s:940    .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccOLnUHF.s:1023   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccOLnUHF.s:1030   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccOLnUHF.s:1117   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccOLnUHF.s:1124   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccOLnUHF.s:1223   .text.HAL_UART_Abort:000000000000007c $d
     /tmp/ccOLnUHF.s:1228   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccOLnUHF.s:1235   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccOLnUHF.s:1294   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccOLnUHF.s:1301   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccOLnUHF.s:1370   .text.HAL_UART_AbortReceive:0000000000000050 $d
     /tmp/ccOLnUHF.s:1375   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccOLnUHF.s:1382   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccOLnUHF.s:1397   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccOLnUHF.s:1458   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccOLnUHF.s:1465   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccOLnUHF.s:1480   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccOLnUHF.s:1511   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccOLnUHF.s:1518   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccOLnUHF.s:1533   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccOLnUHF.s:1598   .text.UART_DMAReceiveCplt:0000000000000040 $d
     /tmp/ccOLnUHF.s:1603   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccOLnUHF.s:1610   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccOLnUHF.s:1625   .text.UART_DMARxHalfCplt:0000000000000000 $t
ARM GAS  /tmp/ccOLnUHF.s 			page 150


     /tmp/ccOLnUHF.s:1656   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccOLnUHF.s:1663   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccOLnUHF.s:1678   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccOLnUHF.s:1761   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccOLnUHF.s:1767   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccOLnUHF.s:1799   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccOLnUHF.s:1806   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccOLnUHF.s:1821   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccOLnUHF.s:1828   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccOLnUHF.s:1998   .text.HAL_UART_Abort_IT:00000000000000cc $d
     /tmp/ccOLnUHF.s:2079   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccOLnUHF.s:2011   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccOLnUHF.s:2005   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccOLnUHF.s:2073   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccOLnUHF.s:2141   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccOLnUHF.s:2148   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccOLnUHF.s:2163   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccOLnUHF.s:2170   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccOLnUHF.s:2255   .text.HAL_UART_AbortTransmit_IT:0000000000000060 $d
     /tmp/ccOLnUHF.s:2266   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccOLnUHF.s:2260   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccOLnUHF.s:2299   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccOLnUHF.s:2306   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccOLnUHF.s:2321   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccOLnUHF.s:2328   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccOLnUHF.s:2427   .text.HAL_UART_AbortReceive_IT:0000000000000078 $d
     /tmp/ccOLnUHF.s:2439   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccOLnUHF.s:2433   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccOLnUHF.s:2476   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccOLnUHF.s:2483   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccOLnUHF.s:2504   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccOLnUHF.s:2511   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccOLnUHF.s:2572   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccOLnUHF.s:2579   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccOLnUHF.s:2640   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccOLnUHF.s:2647   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccOLnUHF.s:2673   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccOLnUHF.s:2680   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccOLnUHF.s:2699   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccOLnUHF.s:2706   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccOLnUHF.s:3094   .text.UART_SetConfig:00000000000001e4 $d
     /tmp/ccOLnUHF.s:3108   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccOLnUHF.s:3115   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccOLnUHF.s:3249   .text.UART_AdvFeatureConfig:00000000000000bc $d
     /tmp/ccOLnUHF.s:3262   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccOLnUHF.s:3269   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccOLnUHF.s:3361   .text.UART_WaitOnFlagUntilTimeout:0000000000000068 $d
     /tmp/ccOLnUHF.s:3366   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccOLnUHF.s:3373   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccOLnUHF.s:3575   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccOLnUHF.s:3582   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccOLnUHF.s:3848   .text.HAL_UART_Receive:0000000000000134 $d
     /tmp/ccOLnUHF.s:3853   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccOLnUHF.s:3860   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccOLnUHF.s:3966   .text.UART_CheckIdleState:0000000000000078 $d
     /tmp/ccOLnUHF.s:3973   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccOLnUHF.s:3980   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
ARM GAS  /tmp/ccOLnUHF.s 			page 151


     /tmp/ccOLnUHF.s:4075   .text.HAL_UART_Init:000000000000006c $d
     /tmp/ccOLnUHF.s:4080   .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccOLnUHF.s:4087   .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccOLnUHF.s:4188   .text.HAL_HalfDuplex_Init:0000000000000078 $d
     /tmp/ccOLnUHF.s:4193   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccOLnUHF.s:4200   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccOLnUHF.s:4325   .text.HAL_MultiProcessor_Init:0000000000000098 $d
     /tmp/ccOLnUHF.s:4331   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccOLnUHF.s:4338   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccOLnUHF.s:4390   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccOLnUHF.s:4397   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccOLnUHF.s:4447   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000030 $d
     /tmp/ccOLnUHF.s:4452   .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/ccOLnUHF.s:4459   .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/ccOLnUHF.s:4553   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccOLnUHF.s:4560   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccOLnUHF.s:4593   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/ccOLnUHF.s:4600   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/ccOLnUHF.s:4720   .text.UART_Receive_IT:0000000000000084 $d
     /tmp/ccOLnUHF.s:4725   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccOLnUHF.s:4732   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccOLnUHF.s:5016   .text.HAL_UART_IRQHandler:0000000000000140 $d

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
__aeabi_uidiv
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_GetTick
HAL_UARTEx_WakeupCallback
