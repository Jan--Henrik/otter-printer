ARM GAS  /tmp/ccPYpLPg.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.dataTransmittedHandler0,"ax",%progbits
  16              		.align	1
  17              		.global	dataTransmittedHandler0
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	dataTransmittedHandler0:
  25              	.LVL0:
  26              	.LFB38:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** #include "main.h"
   2:Src/main.c    **** #include "usb_device.h"
   3:Src/main.c    **** 
   4:Src/main.c    **** TIM_HandleTypeDef htim1;
   5:Src/main.c    **** TIM_HandleTypeDef htim2;
   6:Src/main.c    **** TIM_HandleTypeDef htim3;
   7:Src/main.c    **** DMA_HandleTypeDef hdma_tim2_ch1;
   8:Src/main.c    **** DMA_HandleTypeDef hdma_tim2_ch4;
   9:Src/main.c    **** DMA_HandleTypeDef hdma_tim2_ch3;
  10:Src/main.c    **** 
  11:Src/main.c    **** UART_HandleTypeDef huart3;
  12:Src/main.c    **** DMA_HandleTypeDef hdma_usart3_rx;
  13:Src/main.c    **** DMA_HandleTypeDef hdma_usart3_tx;
  14:Src/main.c    **** DMA_HandleTypeDef hdma_tim2_uev;
  15:Src/main.c    **** 
  16:Src/main.c    **** uint16_t PER = 90;
  17:Src/main.c    **** 
  18:Src/main.c    **** void SystemClock_Config(void);
  19:Src/main.c    **** static void MX_GPIO_Init(void);
  20:Src/main.c    **** static void MX_DMA_Init(void);
  21:Src/main.c    **** static void MX_TIM1_Init(void);
  22:Src/main.c    **** static void MX_TIM2_Init(void);
  23:Src/main.c    **** static void MX_USART3_UART_Init(void);
  24:Src/main.c    **** void transmit_error_handler(DMA_HandleTypeDef * hdma);
  25:Src/main.c    **** void data_tramsmitted_handler(DMA_HandleTypeDef * hdma);
  26:Src/main.c    **** void dma_init();
  27:Src/main.c    **** void startDMA(void);
  28:Src/main.c    **** 
  29:Src/main.c    **** void dfu_otter_bootloader(void)
  30:Src/main.c    **** {
  31:Src/main.c    ****   *((unsigned long *)0x20003FF0) = 0xDEADBEEF;
ARM GAS  /tmp/ccPYpLPg.s 			page 2


  32:Src/main.c    ****   NVIC_SystemReset();
  33:Src/main.c    **** }
  34:Src/main.c    **** 
  35:Src/main.c    **** #define data_len ((208*2))
  36:Src/main.c    **** uint16_t my_data_buf[data_len];
  37:Src/main.c    **** 
  38:Src/main.c    **** void dataTransmittedHandler0(DMA_HandleTypeDef *hdma) {
  28              		.loc 1 38 55 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 38 55 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  39:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, LED_STATUS_Pin, 0);
  38              		.loc 1 39 3 is_stmt 1 view .LVU2
  39 0002 0022     		movs	r2, #0
  40 0004 0121     		movs	r1, #1
  41 0006 0448     		ldr	r0, .L2
  42              	.LVL1:
  43              		.loc 1 39 3 is_stmt 0 view .LVU3
  44 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
  45              	.LVL2:
  40:Src/main.c    ****   HAL_TIM_PWM_Stop(&htim2, TIM_CHANNEL_1);
  46              		.loc 1 40 3 is_stmt 1 view .LVU4
  47 000c 0021     		movs	r1, #0
  48 000e 0348     		ldr	r0, .L2+4
  49 0010 FFF7FEFF 		bl	HAL_TIM_PWM_Stop
  50              	.LVL3:
  41:Src/main.c    **** }
  51              		.loc 1 41 1 is_stmt 0 view .LVU5
  52              		@ sp needed
  53 0014 10BD     		pop	{r4, pc}
  54              	.L3:
  55 0016 C046     		.align	2
  56              	.L2:
  57 0018 00040048 		.word	1207960576
  58 001c 00000000 		.word	htim2
  59              		.cfi_endproc
  60              	.LFE38:
  62              		.section	.text.dataTransmittedHandler2,"ax",%progbits
  63              		.align	1
  64              		.global	dataTransmittedHandler2
  65              		.syntax unified
  66              		.code	16
  67              		.thumb_func
  68              		.fpu softvfp
  70              	dataTransmittedHandler2:
  71              	.LVL4:
  72              	.LFB39:
  42:Src/main.c    **** 
  43:Src/main.c    **** void dataTransmittedHandler2(DMA_HandleTypeDef *hdma) {
  73              		.loc 1 43 55 is_stmt 1 view -0
  74              		.cfi_startproc
ARM GAS  /tmp/ccPYpLPg.s 			page 3


  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		.loc 1 43 55 is_stmt 0 view .LVU7
  78 0000 10B5     		push	{r4, lr}
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 4, -8
  82              		.cfi_offset 14, -4
  44:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, LED_POWER_Pin, 0);
  83              		.loc 1 44 3 is_stmt 1 view .LVU8
  84 0002 0022     		movs	r2, #0
  85 0004 0221     		movs	r1, #2
  86 0006 0948     		ldr	r0, .L5
  87              	.LVL5:
  88              		.loc 1 44 3 is_stmt 0 view .LVU9
  89 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
  90              	.LVL6:
  45:Src/main.c    ****   HAL_TIM_PWM_Stop(&htim2, TIM_CHANNEL_4);
  91              		.loc 1 45 3 is_stmt 1 view .LVU10
  92 000c 0C21     		movs	r1, #12
  93 000e 0848     		ldr	r0, .L5+4
  94 0010 FFF7FEFF 		bl	HAL_TIM_PWM_Stop
  95              	.LVL7:
  46:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, F5_Pin, 0);
  96              		.loc 1 46 3 view .LVU11
  97 0014 074C     		ldr	r4, .L5+8
  98 0016 0022     		movs	r2, #0
  99 0018 4021     		movs	r1, #64
 100 001a 2000     		movs	r0, r4
 101 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 102              	.LVL8:
  47:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, F3_Pin, 0);
 103              		.loc 1 47 3 view .LVU12
 104 0020 0022     		movs	r2, #0
 105 0022 8021     		movs	r1, #128
 106 0024 2000     		movs	r0, r4
 107 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 108              	.LVL9:
  48:Src/main.c    **** }
 109              		.loc 1 48 1 is_stmt 0 view .LVU13
 110              		@ sp needed
 111 002a 10BD     		pop	{r4, pc}
 112              	.L6:
 113              		.align	2
 114              	.L5:
 115 002c 00040048 		.word	1207960576
 116 0030 00000000 		.word	htim2
 117 0034 00080048 		.word	1207961600
 118              		.cfi_endproc
 119              	.LFE39:
 121              		.section	.text.MX_GPIO_Init,"ax",%progbits
 122              		.align	1
 123              		.syntax unified
 124              		.code	16
 125              		.thumb_func
 126              		.fpu softvfp
 128              	MX_GPIO_Init:
ARM GAS  /tmp/ccPYpLPg.s 			page 4


 129              	.LFB47:
  49:Src/main.c    **** 
  50:Src/main.c    **** 
  51:Src/main.c    **** int main(void)
  52:Src/main.c    **** {
  53:Src/main.c    **** 
  54:Src/main.c    ****   HAL_Init();
  55:Src/main.c    **** 
  56:Src/main.c    ****   SystemClock_Config();
  57:Src/main.c    **** 
  58:Src/main.c    ****   MX_GPIO_Init();
  59:Src/main.c    ****   MX_DMA_Init();
  60:Src/main.c    ****   MX_TIM1_Init();
  61:Src/main.c    ****   MX_TIM2_Init();
  62:Src/main.c    ****   MX_USART3_UART_Init();
  63:Src/main.c    ****   MX_USB_DEVICE_Init();
  64:Src/main.c    **** 
  65:Src/main.c    ****   if(HAL_GPIO_ReadPin(GPIOB, BUTTON_Pin)) {
  66:Src/main.c    ****     dfu_otter_bootloader();
  67:Src/main.c    ****   }
  68:Src/main.c    **** 
  69:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, LED_POWER_Pin, 1);
  70:Src/main.c    **** 
  71:Src/main.c    ****   memset(my_data_buf, 0xFFFF, data_len*2);
  72:Src/main.c    ****   for (uint16_t i = 0; i < data_len - 9; i += 16) {
  73:Src/main.c    ****     my_data_buf[i + 0]  = 0b0000010000000000;
  74:Src/main.c    ****     my_data_buf[i + 1]  = 0b0110000000100001;
  75:Src/main.c    ****     my_data_buf[i + 2]  = 0b0110000000100000;
  76:Src/main.c    ****     my_data_buf[i + 3]  = 0b0110000000001001;
  77:Src/main.c    ****     my_data_buf[i + 4]  = 0b0110010000001000;
  78:Src/main.c    ****     my_data_buf[i + 5]  = 0b0110000000000011;
  79:Src/main.c    ****     my_data_buf[i + 6]  = 0b0110000010000010;
  80:Src/main.c    ****     my_data_buf[i + 7]  = 0b0110000010010001;
  81:Src/main.c    ****     my_data_buf[i + 8]  = 0b0110000010010000;
  82:Src/main.c    ****     my_data_buf[i + 9]  = 0b0000000000000100;
  83:Src/main.c    ****     my_data_buf[i + 10] = 0b0000000001000100;
  84:Src/main.c    ****     my_data_buf[i + 11] = 0b0000000001000000;
  85:Src/main.c    ****     my_data_buf[i + 12] = 0b0000000001000000;
  86:Src/main.c    ****     my_data_buf[i + 13] = 0b0000000000000000;
  87:Src/main.c    ****     my_data_buf[i + 14] = 0b0000000000000000;
  88:Src/main.c    ****     my_data_buf[i + 15] = 0b0000000000000000;
  89:Src/main.c    ****   }
  90:Src/main.c    **** 
  91:Src/main.c    ****   /*
  92:Src/main.c    ****   TUT
  93:Src/main.c    ****   my_data_buf[i + 0]  = 0b0000010000000000;
  94:Src/main.c    ****   my_data_buf[i + 1]  = 0b0110000000100001;
  95:Src/main.c    ****   my_data_buf[i + 2]  = 0b1010010000100000;
  96:Src/main.c    ****   my_data_buf[i + 3]  = 0b0110000000001001;
  97:Src/main.c    ****   my_data_buf[i + 4]  = 0b1100000000001000;
  98:Src/main.c    ****   my_data_buf[i + 5]  = 0b1010000000000011;
  99:Src/main.c    ****   my_data_buf[i + 6]  = 0b0110000010000010;
 100:Src/main.c    ****   my_data_buf[i + 7]  = 0b0000000010010001;
 101:Src/main.c    ****   my_data_buf[i + 8]  = 0b1110000010010000;
 102:Src/main.c    ****   my_data_buf[i + 9]  = 0b0000000000000100;
 103:Src/main.c    ****   my_data_buf[i + 10] = 0b0000000001000100;
 104:Src/main.c    ****   my_data_buf[i + 11] = 0b0000000001000000;
ARM GAS  /tmp/ccPYpLPg.s 			page 5


 105:Src/main.c    ****   my_data_buf[i + 12] = 0b0000000001000000;
 106:Src/main.c    ****   my_data_buf[i + 13] = 0b0000000000000000;
 107:Src/main.c    ****   my_data_buf[i + 14] = 0b0000000000000000;
 108:Src/main.c    ****   my_data_buf[i + 15] = 0b0000000000000000;
 109:Src/main.c    ****   */
 110:Src/main.c    **** 
 111:Src/main.c    ****   my_data_buf[data_len - 8 + 0] = 0b0000010000000000;//02
 112:Src/main.c    ****   my_data_buf[data_len - 8 + 1] = 0b0000000000000000;
 113:Src/main.c    ****   my_data_buf[data_len - 8 + 2] = 0b0000010000000000;
 114:Src/main.c    ****   my_data_buf[data_len - 8 + 3] = 0b0000000000000000;
 115:Src/main.c    ****   my_data_buf[data_len - 8 + 4] = 0b0000010000000000;//01
 116:Src/main.c    ****   my_data_buf[data_len - 8 + 5] = 0b0000000000000000;
 117:Src/main.c    ****   my_data_buf[data_len - 8 + 6] = 0b0000010000000000;
 118:Src/main.c    ****   my_data_buf[data_len - 8 + 7] = 0b0000000000000000;
 119:Src/main.c    **** 
 120:Src/main.c    ****   htim2.hdma[TIM_DMA_ID_CC1]->XferCpltCallback = dataTransmittedHandler0;
 121:Src/main.c    ****   __HAL_TIM_ENABLE_DMA(&htim2, TIM_DMA_CC1);
 122:Src/main.c    **** 
 123:Src/main.c    ****   htim2.hdma[TIM_DMA_ID_CC4]->XferCpltCallback = dataTransmittedHandler2;
 124:Src/main.c    ****   __HAL_TIM_ENABLE_DMA(&htim2, TIM_DMA_CC4);
 125:Src/main.c    **** 
 126:Src/main.c    ****   while (1)
 127:Src/main.c    ****   {
 128:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, LED_POWER_Pin, 1);
 129:Src/main.c    ****     if(HAL_GPIO_ReadPin(GPIOB, BUTTON_Pin)) {
 130:Src/main.c    ****       HAL_GPIO_WritePin(GPIOB, LED_STATUS_Pin, 1);
 131:Src/main.c    ****       startDMA();
 132:Src/main.c    ****       HAL_Delay(10);
 133:Src/main.c    ****     }
 134:Src/main.c    ****   }
 135:Src/main.c    **** }
 136:Src/main.c    **** 
 137:Src/main.c    **** void startDMA(void) {
 138:Src/main.c    **** 
 139:Src/main.c    **** 
 140:Src/main.c    ****   if (HAL_DMA_GetState(htim2.hdma[TIM_DMA_ID_CC1]) == HAL_DMA_STATE_BUSY) {
 141:Src/main.c    ****     return;
 142:Src/main.c    ****   }
 143:Src/main.c    **** 
 144:Src/main.c    ****   if (HAL_DMA_GetState(htim2.hdma[TIM_DMA_ID_CC4]) == HAL_DMA_STATE_BUSY) {
 145:Src/main.c    ****     return;
 146:Src/main.c    ****   }
 147:Src/main.c    **** 
 148:Src/main.c    ****   TIM2->CR1 &= (TIM_CR1_CEN | 0);
 149:Src/main.c    **** 
 150:Src/main.c    ****   HAL_DMA_Start_IT(htim2.hdma[TIM_DMA_ID_CC1], (uint32_t)my_data_buf,       (uint32_t)&GPIOA->ODR, 
 151:Src/main.c    ****   HAL_DMA_Start_IT(htim2.hdma[TIM_DMA_ID_CC4], (uint32_t)my_data_buf,       (uint32_t)&GPIOC->ODR, 
 152:Src/main.c    **** 
 153:Src/main.c    ****   TIM2->CNT = 0u;
 154:Src/main.c    **** 
 155:Src/main.c    ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_ALL);
 156:Src/main.c    **** 
 157:Src/main.c    ****   TIM2->CR1 &= (TIM_CR1_CEN | 1);
 158:Src/main.c    **** }
 159:Src/main.c    **** 
 160:Src/main.c    **** void SystemClock_Config(void)
 161:Src/main.c    **** {
ARM GAS  /tmp/ccPYpLPg.s 			page 6


 162:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 163:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 164:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 165:Src/main.c    **** 
 166:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI | RCC_OSCILLATORTYPE_HSI48;
 167:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 168:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 169:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 170:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 171:Src/main.c    ****   HAL_RCC_OscConfig(&RCC_OscInitStruct);
 172:Src/main.c    **** 
 173:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 174:Src/main.c    ****                                 | RCC_CLOCKTYPE_PCLK1;
 175:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI48;
 176:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 177:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 178:Src/main.c    **** 
 179:Src/main.c    ****   HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1);
 180:Src/main.c    **** 
 181:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 182:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 183:Src/main.c    **** 
 184:Src/main.c    ****   HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
 185:Src/main.c    **** 
 186:Src/main.c    **** }
 187:Src/main.c    **** 
 188:Src/main.c    **** static void MX_TIM1_Init(void)
 189:Src/main.c    **** {
 190:Src/main.c    **** 
 191:Src/main.c    ****   TIM_Encoder_InitTypeDef sConfig = {0};
 192:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 193:Src/main.c    **** 
 194:Src/main.c    ****   htim1.Instance = TIM1;
 195:Src/main.c    ****   htim1.Init.Prescaler = 0;
 196:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 197:Src/main.c    ****   htim1.Init.Period = 0;
 198:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 199:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 200:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 201:Src/main.c    ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 202:Src/main.c    ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 203:Src/main.c    ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 204:Src/main.c    ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 205:Src/main.c    ****   sConfig.IC1Filter = 0;
 206:Src/main.c    ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 207:Src/main.c    ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 208:Src/main.c    ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 209:Src/main.c    ****   sConfig.IC2Filter = 0;
 210:Src/main.c    ****   HAL_TIM_Encoder_Init(&htim1, &sConfig);
 211:Src/main.c    **** 
 212:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 213:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 214:Src/main.c    ****  HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig);
 215:Src/main.c    **** 
 216:Src/main.c    **** 
 217:Src/main.c    **** }
 218:Src/main.c    **** 
ARM GAS  /tmp/ccPYpLPg.s 			page 7


 219:Src/main.c    **** static void MX_TIM2_Init(void)
 220:Src/main.c    **** {
 221:Src/main.c    **** 
 222:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 223:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 224:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC1 = {0};
 225:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC4 = {0};
 226:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC3 = {0};
 227:Src/main.c    **** 
 228:Src/main.c    ****   htim2.Instance = TIM2;
 229:Src/main.c    ****   htim2.Init.Prescaler = 0;
 230:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 231:Src/main.c    ****   htim2.Init.Period = PER;
 232:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 233:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 234:Src/main.c    ****   HAL_TIM_Base_Init(&htim2);
 235:Src/main.c    **** 
 236:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 237:Src/main.c    ****   HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig);
 238:Src/main.c    **** 
 239:Src/main.c    ****   HAL_TIM_PWM_Init(&htim2);
 240:Src/main.c    **** 
 241:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 242:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 243:Src/main.c    ****   HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig);
 244:Src/main.c    **** 
 245:Src/main.c    ****   sConfigOC1.OCMode = TIM_OCMODE_PWM1;
 246:Src/main.c    ****   sConfigOC1.Pulse = PER / 3 * 2;
 247:Src/main.c    ****   sConfigOC1.OCPolarity = TIM_OCPOLARITY_LOW;
 248:Src/main.c    ****   sConfigOC1.OCFastMode = TIM_OCFAST_DISABLE;
 249:Src/main.c    ****   HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC1, TIM_CHANNEL_1);
 250:Src/main.c    **** 
 251:Src/main.c    ****   sConfigOC4.OCMode = TIM_OCMODE_PWM1;
 252:Src/main.c    ****   sConfigOC4.Pulse = PER / 3;
 253:Src/main.c    ****   sConfigOC4.OCPolarity = TIM_OCPOLARITY_LOW;
 254:Src/main.c    ****   sConfigOC4.OCFastMode = TIM_OCFAST_DISABLE;
 255:Src/main.c    ****  HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC4, TIM_CHANNEL_4);
 256:Src/main.c    **** }
 257:Src/main.c    **** 
 258:Src/main.c    **** static void MX_USART3_UART_Init(void)
 259:Src/main.c    **** {
 260:Src/main.c    ****   huart3.Instance = USART3;
 261:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 262:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 263:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 264:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 265:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 266:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 267:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 268:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 269:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 270:Src/main.c    ****   HAL_UART_Init(&huart3);
 271:Src/main.c    **** }
 272:Src/main.c    **** 
 273:Src/main.c    **** static void MX_DMA_Init(void)
 274:Src/main.c    **** {
 275:Src/main.c    ****   __HAL_RCC_DMA1_CLK_ENABLE();
ARM GAS  /tmp/ccPYpLPg.s 			page 8


 276:Src/main.c    **** 
 277:Src/main.c    ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 278:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 279:Src/main.c    ****   HAL_NVIC_SetPriority(DMA1_Channel4_5_6_7_IRQn, 0, 0);
 280:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Channel4_5_6_7_IRQn);
 281:Src/main.c    **** }
 282:Src/main.c    **** 
 283:Src/main.c    **** static void MX_GPIO_Init(void)
 284:Src/main.c    **** {
 130              		.loc 1 284 1 is_stmt 1 view -0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 32
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 135              	.LCFI2:
 136              		.cfi_def_cfa_offset 20
 137              		.cfi_offset 4, -20
 138              		.cfi_offset 5, -16
 139              		.cfi_offset 6, -12
 140              		.cfi_offset 7, -8
 141              		.cfi_offset 14, -4
 142 0002 D646     		mov	lr, r10
 143 0004 4F46     		mov	r7, r9
 144 0006 4646     		mov	r6, r8
 145 0008 C0B5     		push	{r6, r7, lr}
 146              	.LCFI3:
 147              		.cfi_def_cfa_offset 32
 148              		.cfi_offset 8, -32
 149              		.cfi_offset 9, -28
 150              		.cfi_offset 10, -24
 151 000a 88B0     		sub	sp, sp, #32
 152              	.LCFI4:
 153              		.cfi_def_cfa_offset 64
 285:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 154              		.loc 1 285 3 view .LVU15
 155              		.loc 1 285 20 is_stmt 0 view .LVU16
 156 000c 1422     		movs	r2, #20
 157 000e 0021     		movs	r1, #0
 158 0010 03A8     		add	r0, sp, #12
 159 0012 FFF7FEFF 		bl	memset
 160              	.LVL10:
 286:Src/main.c    **** 
 287:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 161              		.loc 1 287 3 is_stmt 1 view .LVU17
 162              	.LBB8:
 163              		.loc 1 287 3 view .LVU18
 164              		.loc 1 287 3 view .LVU19
 165 0016 394B     		ldr	r3, .L8
 166 0018 5969     		ldr	r1, [r3, #20]
 167 001a 8020     		movs	r0, #128
 168 001c 0003     		lsls	r0, r0, #12
 169 001e 0143     		orrs	r1, r0
 170 0020 5961     		str	r1, [r3, #20]
 171              		.loc 1 287 3 view .LVU20
 172 0022 5A69     		ldr	r2, [r3, #20]
 173 0024 0240     		ands	r2, r0
 174 0026 0092     		str	r2, [sp]
ARM GAS  /tmp/ccPYpLPg.s 			page 9


 175              		.loc 1 287 3 view .LVU21
 176 0028 009A     		ldr	r2, [sp]
 177              	.LBE8:
 288:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 178              		.loc 1 288 3 view .LVU22
 179              	.LBB9:
 180              		.loc 1 288 3 view .LVU23
 181              		.loc 1 288 3 view .LVU24
 182 002a 5969     		ldr	r1, [r3, #20]
 183 002c 8020     		movs	r0, #128
 184 002e 8002     		lsls	r0, r0, #10
 185 0030 0143     		orrs	r1, r0
 186 0032 5961     		str	r1, [r3, #20]
 187              		.loc 1 288 3 view .LVU25
 188 0034 5A69     		ldr	r2, [r3, #20]
 189 0036 0240     		ands	r2, r0
 190 0038 0192     		str	r2, [sp, #4]
 191              		.loc 1 288 3 view .LVU26
 192 003a 019A     		ldr	r2, [sp, #4]
 193              	.LBE9:
 289:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 194              		.loc 1 289 3 view .LVU27
 195              	.LBB10:
 196              		.loc 1 289 3 view .LVU28
 197              		.loc 1 289 3 view .LVU29
 198 003c 5A69     		ldr	r2, [r3, #20]
 199 003e 8021     		movs	r1, #128
 200 0040 C902     		lsls	r1, r1, #11
 201 0042 0A43     		orrs	r2, r1
 202 0044 5A61     		str	r2, [r3, #20]
 203              		.loc 1 289 3 view .LVU30
 204 0046 5B69     		ldr	r3, [r3, #20]
 205 0048 0B40     		ands	r3, r1
 206 004a 0293     		str	r3, [sp, #8]
 207              		.loc 1 289 3 view .LVU31
 208 004c 029B     		ldr	r3, [sp, #8]
 209              	.LBE10:
 290:Src/main.c    **** 
 291:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, D1_Pin | D2_Pin | D3_Pin, GPIO_PIN_RESET);
 210              		.loc 1 291 3 view .LVU32
 211 004e E024     		movs	r4, #224
 212 0050 2402     		lsls	r4, r4, #8
 213 0052 2B4B     		ldr	r3, .L8+4
 214 0054 9A46     		mov	r10, r3
 215 0056 0022     		movs	r2, #0
 216 0058 2100     		movs	r1, r4
 217 005a 1800     		movs	r0, r3
 218 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 219              	.LVL11:
 292:Src/main.c    **** 
 293:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, DCLCK_Pin | S5_Pin | S2_Pin | S3_Pin
 220              		.loc 1 293 3 view .LVU33
 221 0060 284B     		ldr	r3, .L8+8
 222 0062 9946     		mov	r9, r3
 223 0064 9023     		movs	r3, #144
 224 0066 DB05     		lsls	r3, r3, #23
 225 0068 9846     		mov	r8, r3
ARM GAS  /tmp/ccPYpLPg.s 			page 10


 226 006a 0022     		movs	r2, #0
 227 006c 4946     		mov	r1, r9
 228 006e 1800     		movs	r0, r3
 229 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 230              	.LVL12:
 294:Src/main.c    ****                     | S4_Pin | S1_Pin | CSYNC_Pin  | F3_Pin | F5_Pin, GPIO_PIN_RESET);
 295:Src/main.c    **** 
 296:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, LED_STATUS_Pin | LED_POWER_Pin , GPIO_PIN_RESET);
 231              		.loc 1 296 3 view .LVU34
 232 0074 244D     		ldr	r5, .L8+12
 233 0076 0022     		movs	r2, #0
 234 0078 0321     		movs	r1, #3
 235 007a 2800     		movs	r0, r5
 236 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 237              	.LVL13:
 297:Src/main.c    **** 
 298:Src/main.c    ****   GPIO_InitStruct.Pin = D1_Pin | D2_Pin | D3_Pin;
 238              		.loc 1 298 3 view .LVU35
 239              		.loc 1 298 23 is_stmt 0 view .LVU36
 240 0080 0394     		str	r4, [sp, #12]
 299:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 241              		.loc 1 299 3 is_stmt 1 view .LVU37
 242              		.loc 1 299 24 is_stmt 0 view .LVU38
 243 0082 0127     		movs	r7, #1
 244 0084 0497     		str	r7, [sp, #16]
 300:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 245              		.loc 1 300 3 is_stmt 1 view .LVU39
 246              		.loc 1 300 24 is_stmt 0 view .LVU40
 247 0086 0024     		movs	r4, #0
 248 0088 0594     		str	r4, [sp, #20]
 301:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 249              		.loc 1 301 3 is_stmt 1 view .LVU41
 250              		.loc 1 301 25 is_stmt 0 view .LVU42
 251 008a 0326     		movs	r6, #3
 252 008c 0696     		str	r6, [sp, #24]
 302:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 253              		.loc 1 302 3 is_stmt 1 view .LVU43
 254 008e 03A9     		add	r1, sp, #12
 255 0090 5046     		mov	r0, r10
 256 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 257              	.LVL14:
 303:Src/main.c    **** 
 304:Src/main.c    ****   GPIO_InitStruct.Pin = DCLCK_Pin | S5_Pin | S2_Pin | S3_Pin
 258              		.loc 1 304 3 view .LVU44
 259              		.loc 1 304 23 is_stmt 0 view .LVU45
 260 0096 4B46     		mov	r3, r9
 261 0098 0393     		str	r3, [sp, #12]
 305:Src/main.c    ****                         | S4_Pin | S1_Pin | F3_Pin | F5_Pin | CSYNC_Pin;
 306:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 262              		.loc 1 306 3 is_stmt 1 view .LVU46
 263              		.loc 1 306 24 is_stmt 0 view .LVU47
 264 009a 0497     		str	r7, [sp, #16]
 307:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 265              		.loc 1 307 3 is_stmt 1 view .LVU48
 266              		.loc 1 307 24 is_stmt 0 view .LVU49
 267 009c 0594     		str	r4, [sp, #20]
 308:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
ARM GAS  /tmp/ccPYpLPg.s 			page 11


 268              		.loc 1 308 3 is_stmt 1 view .LVU50
 269              		.loc 1 308 25 is_stmt 0 view .LVU51
 270 009e 0696     		str	r6, [sp, #24]
 309:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 271              		.loc 1 309 3 is_stmt 1 view .LVU52
 272 00a0 03A9     		add	r1, sp, #12
 273 00a2 4046     		mov	r0, r8
 274 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
 275              	.LVL15:
 310:Src/main.c    **** 
 311:Src/main.c    ****   GPIO_InitStruct.Pin = INT_IN_Pin;
 276              		.loc 1 311 3 view .LVU53
 277              		.loc 1 311 23 is_stmt 0 view .LVU54
 278 00a8 0423     		movs	r3, #4
 279 00aa 0393     		str	r3, [sp, #12]
 312:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 280              		.loc 1 312 3 is_stmt 1 view .LVU55
 281              		.loc 1 312 24 is_stmt 0 view .LVU56
 282 00ac 174B     		ldr	r3, .L8+16
 283 00ae 0493     		str	r3, [sp, #16]
 313:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 284              		.loc 1 313 3 is_stmt 1 view .LVU57
 285              		.loc 1 313 24 is_stmt 0 view .LVU58
 286 00b0 0594     		str	r4, [sp, #20]
 314:Src/main.c    ****   HAL_GPIO_Init(INT_IN_GPIO_Port, &GPIO_InitStruct);
 287              		.loc 1 314 3 is_stmt 1 view .LVU59
 288 00b2 03A9     		add	r1, sp, #12
 289 00b4 2800     		movs	r0, r5
 290 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 291              	.LVL16:
 315:Src/main.c    **** 
 316:Src/main.c    ****   GPIO_InitStruct.Pin =  LED_STATUS_Pin | LED_POWER_Pin;
 292              		.loc 1 316 3 view .LVU60
 293              		.loc 1 316 23 is_stmt 0 view .LVU61
 294 00ba 0396     		str	r6, [sp, #12]
 317:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 295              		.loc 1 317 3 is_stmt 1 view .LVU62
 296              		.loc 1 317 24 is_stmt 0 view .LVU63
 297 00bc 0497     		str	r7, [sp, #16]
 318:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 298              		.loc 1 318 3 is_stmt 1 view .LVU64
 299              		.loc 1 318 24 is_stmt 0 view .LVU65
 300 00be 0594     		str	r4, [sp, #20]
 319:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 301              		.loc 1 319 3 is_stmt 1 view .LVU66
 302              		.loc 1 319 25 is_stmt 0 view .LVU67
 303 00c0 0696     		str	r6, [sp, #24]
 320:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 304              		.loc 1 320 3 is_stmt 1 view .LVU68
 305 00c2 03A9     		add	r1, sp, #12
 306 00c4 2800     		movs	r0, r5
 307 00c6 FFF7FEFF 		bl	HAL_GPIO_Init
 308              	.LVL17:
 321:Src/main.c    **** 
 322:Src/main.c    ****   GPIO_InitStruct.Pin = INDEX_Pin | BUTTON_Pin;
 309              		.loc 1 322 3 view .LVU69
 310              		.loc 1 322 23 is_stmt 0 view .LVU70
ARM GAS  /tmp/ccPYpLPg.s 			page 12


 311 00ca 8123     		movs	r3, #129
 312 00cc 1B02     		lsls	r3, r3, #8
 313 00ce 0393     		str	r3, [sp, #12]
 323:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 314              		.loc 1 323 3 is_stmt 1 view .LVU71
 315              		.loc 1 323 24 is_stmt 0 view .LVU72
 316 00d0 0494     		str	r4, [sp, #16]
 324:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 317              		.loc 1 324 3 is_stmt 1 view .LVU73
 318              		.loc 1 324 24 is_stmt 0 view .LVU74
 319 00d2 0223     		movs	r3, #2
 320 00d4 0593     		str	r3, [sp, #20]
 325:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 321              		.loc 1 325 3 is_stmt 1 view .LVU75
 322 00d6 03A9     		add	r1, sp, #12
 323 00d8 2800     		movs	r0, r5
 324 00da FFF7FEFF 		bl	HAL_GPIO_Init
 325              	.LVL18:
 326:Src/main.c    **** 
 327:Src/main.c    ****   GPIO_InitStruct.Pin = ANALOG_INPUT3_Pin | ANALOG_INPUT2_Pin | ANALOG_INPUT1_Pin;
 326              		.loc 1 327 3 view .LVU76
 327              		.loc 1 327 23 is_stmt 0 view .LVU77
 328 00de 3823     		movs	r3, #56
 329 00e0 0393     		str	r3, [sp, #12]
 328:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 330              		.loc 1 328 3 is_stmt 1 view .LVU78
 331              		.loc 1 328 24 is_stmt 0 view .LVU79
 332 00e2 0496     		str	r6, [sp, #16]
 329:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 333              		.loc 1 329 3 is_stmt 1 view .LVU80
 334              		.loc 1 329 24 is_stmt 0 view .LVU81
 335 00e4 0594     		str	r4, [sp, #20]
 330:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 336              		.loc 1 330 3 is_stmt 1 view .LVU82
 337 00e6 03A9     		add	r1, sp, #12
 338 00e8 2800     		movs	r0, r5
 339 00ea FFF7FEFF 		bl	HAL_GPIO_Init
 340              	.LVL19:
 331:Src/main.c    **** 
 332:Src/main.c    **** }
 341              		.loc 1 332 1 is_stmt 0 view .LVU83
 342 00ee 08B0     		add	sp, sp, #32
 343              		@ sp needed
 344 00f0 1CBC     		pop	{r2, r3, r4}
 345 00f2 9046     		mov	r8, r2
 346 00f4 9946     		mov	r9, r3
 347 00f6 A246     		mov	r10, r4
 348 00f8 F0BD     		pop	{r4, r5, r6, r7, pc}
 349              	.L9:
 350 00fa C046     		.align	2
 351              	.L8:
 352 00fc 00100240 		.word	1073876992
 353 0100 00080048 		.word	1207961600
 354 0104 FF040000 		.word	1279
 355 0108 00040048 		.word	1207960576
 356 010c 00001110 		.word	269549568
 357              		.cfi_endproc
ARM GAS  /tmp/ccPYpLPg.s 			page 13


 358              	.LFE47:
 360              		.section	.text.MX_DMA_Init,"ax",%progbits
 361              		.align	1
 362              		.syntax unified
 363              		.code	16
 364              		.thumb_func
 365              		.fpu softvfp
 367              	MX_DMA_Init:
 368              	.LFB46:
 274:Src/main.c    ****   __HAL_RCC_DMA1_CLK_ENABLE();
 369              		.loc 1 274 1 is_stmt 1 view -0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 8
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373 0000 00B5     		push	{lr}
 374              	.LCFI5:
 375              		.cfi_def_cfa_offset 4
 376              		.cfi_offset 14, -4
 377 0002 83B0     		sub	sp, sp, #12
 378              	.LCFI6:
 379              		.cfi_def_cfa_offset 16
 275:Src/main.c    **** 
 380              		.loc 1 275 3 view .LVU85
 381              	.LBB11:
 275:Src/main.c    **** 
 382              		.loc 1 275 3 view .LVU86
 275:Src/main.c    **** 
 383              		.loc 1 275 3 view .LVU87
 384 0004 0D4A     		ldr	r2, .L11
 385 0006 5169     		ldr	r1, [r2, #20]
 386 0008 0123     		movs	r3, #1
 387 000a 1943     		orrs	r1, r3
 388 000c 5161     		str	r1, [r2, #20]
 275:Src/main.c    **** 
 389              		.loc 1 275 3 view .LVU88
 390 000e 5269     		ldr	r2, [r2, #20]
 391 0010 1340     		ands	r3, r2
 392 0012 0193     		str	r3, [sp, #4]
 275:Src/main.c    **** 
 393              		.loc 1 275 3 view .LVU89
 394 0014 019B     		ldr	r3, [sp, #4]
 395              	.LBE11:
 277:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 396              		.loc 1 277 3 view .LVU90
 397 0016 0022     		movs	r2, #0
 398 0018 0021     		movs	r1, #0
 399 001a 0920     		movs	r0, #9
 400 001c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 401              	.LVL20:
 278:Src/main.c    ****   HAL_NVIC_SetPriority(DMA1_Channel4_5_6_7_IRQn, 0, 0);
 402              		.loc 1 278 3 view .LVU91
 403 0020 0920     		movs	r0, #9
 404 0022 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 405              	.LVL21:
 279:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Channel4_5_6_7_IRQn);
 406              		.loc 1 279 3 view .LVU92
 407 0026 0022     		movs	r2, #0
ARM GAS  /tmp/ccPYpLPg.s 			page 14


 408 0028 0021     		movs	r1, #0
 409 002a 0B20     		movs	r0, #11
 410 002c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 411              	.LVL22:
 280:Src/main.c    **** }
 412              		.loc 1 280 3 view .LVU93
 413 0030 0B20     		movs	r0, #11
 414 0032 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 415              	.LVL23:
 281:Src/main.c    **** 
 416              		.loc 1 281 1 is_stmt 0 view .LVU94
 417 0036 03B0     		add	sp, sp, #12
 418              		@ sp needed
 419 0038 00BD     		pop	{pc}
 420              	.L12:
 421 003a C046     		.align	2
 422              	.L11:
 423 003c 00100240 		.word	1073876992
 424              		.cfi_endproc
 425              	.LFE46:
 427              		.section	.text.MX_TIM1_Init,"ax",%progbits
 428              		.align	1
 429              		.syntax unified
 430              		.code	16
 431              		.thumb_func
 432              		.fpu softvfp
 434              	MX_TIM1_Init:
 435              	.LFB43:
 189:Src/main.c    **** 
 436              		.loc 1 189 1 is_stmt 1 view -0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 48
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440 0000 30B5     		push	{r4, r5, lr}
 441              	.LCFI7:
 442              		.cfi_def_cfa_offset 12
 443              		.cfi_offset 4, -12
 444              		.cfi_offset 5, -8
 445              		.cfi_offset 14, -4
 446 0002 8DB0     		sub	sp, sp, #52
 447              	.LCFI8:
 448              		.cfi_def_cfa_offset 64
 191:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 449              		.loc 1 191 3 view .LVU96
 191:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 450              		.loc 1 191 27 is_stmt 0 view .LVU97
 451 0004 2022     		movs	r2, #32
 452 0006 0021     		movs	r1, #0
 453 0008 04A8     		add	r0, sp, #16
 454 000a FFF7FEFF 		bl	memset
 455              	.LVL24:
 192:Src/main.c    **** 
 456              		.loc 1 192 3 is_stmt 1 view .LVU98
 192:Src/main.c    **** 
 457              		.loc 1 192 27 is_stmt 0 view .LVU99
 458 000e 0822     		movs	r2, #8
 459 0010 0021     		movs	r1, #0
ARM GAS  /tmp/ccPYpLPg.s 			page 15


 460 0012 01A8     		add	r0, sp, #4
 461 0014 FFF7FEFF 		bl	memset
 462              	.LVL25:
 194:Src/main.c    ****   htim1.Init.Prescaler = 0;
 463              		.loc 1 194 3 is_stmt 1 view .LVU100
 194:Src/main.c    ****   htim1.Init.Prescaler = 0;
 464              		.loc 1 194 18 is_stmt 0 view .LVU101
 465 0018 0C4C     		ldr	r4, .L14
 466 001a 0D4B     		ldr	r3, .L14+4
 467 001c 2360     		str	r3, [r4]
 195:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 468              		.loc 1 195 3 is_stmt 1 view .LVU102
 195:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 469              		.loc 1 195 24 is_stmt 0 view .LVU103
 470 001e 0025     		movs	r5, #0
 471 0020 6560     		str	r5, [r4, #4]
 196:Src/main.c    ****   htim1.Init.Period = 0;
 472              		.loc 1 196 3 is_stmt 1 view .LVU104
 196:Src/main.c    ****   htim1.Init.Period = 0;
 473              		.loc 1 196 26 is_stmt 0 view .LVU105
 474 0022 A560     		str	r5, [r4, #8]
 197:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 475              		.loc 1 197 3 is_stmt 1 view .LVU106
 197:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 476              		.loc 1 197 21 is_stmt 0 view .LVU107
 477 0024 E560     		str	r5, [r4, #12]
 198:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 478              		.loc 1 198 3 is_stmt 1 view .LVU108
 198:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 479              		.loc 1 198 28 is_stmt 0 view .LVU109
 480 0026 2561     		str	r5, [r4, #16]
 199:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 481              		.loc 1 199 3 is_stmt 1 view .LVU110
 199:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 482              		.loc 1 199 32 is_stmt 0 view .LVU111
 483 0028 6561     		str	r5, [r4, #20]
 200:Src/main.c    ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 484              		.loc 1 200 3 is_stmt 1 view .LVU112
 200:Src/main.c    ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 485              		.loc 1 200 32 is_stmt 0 view .LVU113
 486 002a A561     		str	r5, [r4, #24]
 201:Src/main.c    ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 487              		.loc 1 201 3 is_stmt 1 view .LVU114
 201:Src/main.c    ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 488              		.loc 1 201 23 is_stmt 0 view .LVU115
 489 002c 0123     		movs	r3, #1
 490 002e 0393     		str	r3, [sp, #12]
 202:Src/main.c    ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 491              		.loc 1 202 3 is_stmt 1 view .LVU116
 203:Src/main.c    ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 492              		.loc 1 203 3 view .LVU117
 203:Src/main.c    ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 493              		.loc 1 203 24 is_stmt 0 view .LVU118
 494 0030 0593     		str	r3, [sp, #20]
 204:Src/main.c    ****   sConfig.IC1Filter = 0;
 495              		.loc 1 204 3 is_stmt 1 view .LVU119
 205:Src/main.c    ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
ARM GAS  /tmp/ccPYpLPg.s 			page 16


 496              		.loc 1 205 3 view .LVU120
 206:Src/main.c    ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 497              		.loc 1 206 3 view .LVU121
 207:Src/main.c    ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 498              		.loc 1 207 3 view .LVU122
 207:Src/main.c    ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 499              		.loc 1 207 24 is_stmt 0 view .LVU123
 500 0032 0993     		str	r3, [sp, #36]
 208:Src/main.c    ****   sConfig.IC2Filter = 0;
 501              		.loc 1 208 3 is_stmt 1 view .LVU124
 209:Src/main.c    ****   HAL_TIM_Encoder_Init(&htim1, &sConfig);
 502              		.loc 1 209 3 view .LVU125
 210:Src/main.c    **** 
 503              		.loc 1 210 3 view .LVU126
 504 0034 03A9     		add	r1, sp, #12
 505 0036 2000     		movs	r0, r4
 506 0038 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 507              	.LVL26:
 212:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 508              		.loc 1 212 3 view .LVU127
 212:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 509              		.loc 1 212 37 is_stmt 0 view .LVU128
 510 003c 0195     		str	r5, [sp, #4]
 213:Src/main.c    ****  HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig);
 511              		.loc 1 213 3 is_stmt 1 view .LVU129
 213:Src/main.c    ****  HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig);
 512              		.loc 1 213 33 is_stmt 0 view .LVU130
 513 003e 0295     		str	r5, [sp, #8]
 214:Src/main.c    **** 
 514              		.loc 1 214 2 is_stmt 1 view .LVU131
 515 0040 01A9     		add	r1, sp, #4
 516 0042 2000     		movs	r0, r4
 517 0044 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 518              	.LVL27:
 217:Src/main.c    **** 
 519              		.loc 1 217 1 is_stmt 0 view .LVU132
 520 0048 0DB0     		add	sp, sp, #52
 521              		@ sp needed
 522 004a 30BD     		pop	{r4, r5, pc}
 523              	.L15:
 524              		.align	2
 525              	.L14:
 526 004c 00000000 		.word	htim1
 527 0050 002C0140 		.word	1073818624
 528              		.cfi_endproc
 529              	.LFE43:
 531              		.global	__aeabi_uidiv
 532              		.section	.text.MX_TIM2_Init,"ax",%progbits
 533              		.align	1
 534              		.syntax unified
 535              		.code	16
 536              		.thumb_func
 537              		.fpu softvfp
 539              	MX_TIM2_Init:
 540              	.LFB44:
 220:Src/main.c    **** 
 541              		.loc 1 220 1 is_stmt 1 view -0
ARM GAS  /tmp/ccPYpLPg.s 			page 17


 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 80
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 546              	.LCFI9:
 547              		.cfi_def_cfa_offset 20
 548              		.cfi_offset 4, -20
 549              		.cfi_offset 5, -16
 550              		.cfi_offset 6, -12
 551              		.cfi_offset 7, -8
 552              		.cfi_offset 14, -4
 553 0002 C646     		mov	lr, r8
 554 0004 00B5     		push	{lr}
 555              	.LCFI10:
 556              		.cfi_def_cfa_offset 24
 557              		.cfi_offset 8, -24
 558 0006 94B0     		sub	sp, sp, #80
 559              	.LCFI11:
 560              		.cfi_def_cfa_offset 104
 222:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 561              		.loc 1 222 3 view .LVU134
 222:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 562              		.loc 1 222 26 is_stmt 0 view .LVU135
 563 0008 1022     		movs	r2, #16
 564 000a 0021     		movs	r1, #0
 565 000c 10A8     		add	r0, sp, #64
 566 000e FFF7FEFF 		bl	memset
 567              	.LVL28:
 223:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC1 = {0};
 568              		.loc 1 223 3 is_stmt 1 view .LVU136
 223:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC1 = {0};
 569              		.loc 1 223 27 is_stmt 0 view .LVU137
 570 0012 0822     		movs	r2, #8
 571 0014 0021     		movs	r1, #0
 572 0016 0EA8     		add	r0, sp, #56
 573 0018 FFF7FEFF 		bl	memset
 574              	.LVL29:
 224:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC4 = {0};
 575              		.loc 1 224 3 is_stmt 1 view .LVU138
 224:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC4 = {0};
 576              		.loc 1 224 22 is_stmt 0 view .LVU139
 577 001c 1C22     		movs	r2, #28
 578 001e 0021     		movs	r1, #0
 579 0020 07A8     		add	r0, sp, #28
 580 0022 FFF7FEFF 		bl	memset
 581              	.LVL30:
 225:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC3 = {0};
 582              		.loc 1 225 3 is_stmt 1 view .LVU140
 225:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC3 = {0};
 583              		.loc 1 225 22 is_stmt 0 view .LVU141
 584 0026 1C22     		movs	r2, #28
 585 0028 0021     		movs	r1, #0
 586 002a 6846     		mov	r0, sp
 587 002c FFF7FEFF 		bl	memset
 588              	.LVL31:
 226:Src/main.c    **** 
 589              		.loc 1 226 3 is_stmt 1 view .LVU142
ARM GAS  /tmp/ccPYpLPg.s 			page 18


 228:Src/main.c    ****   htim2.Init.Prescaler = 0;
 590              		.loc 1 228 3 view .LVU143
 228:Src/main.c    ****   htim2.Init.Prescaler = 0;
 591              		.loc 1 228 18 is_stmt 0 view .LVU144
 592 0030 214C     		ldr	r4, .L17
 593 0032 8023     		movs	r3, #128
 594 0034 DB05     		lsls	r3, r3, #23
 595 0036 2360     		str	r3, [r4]
 229:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 596              		.loc 1 229 3 is_stmt 1 view .LVU145
 229:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 597              		.loc 1 229 24 is_stmt 0 view .LVU146
 598 0038 0025     		movs	r5, #0
 599 003a 6560     		str	r5, [r4, #4]
 230:Src/main.c    ****   htim2.Init.Period = PER;
 600              		.loc 1 230 3 is_stmt 1 view .LVU147
 230:Src/main.c    ****   htim2.Init.Period = PER;
 601              		.loc 1 230 26 is_stmt 0 view .LVU148
 602 003c A560     		str	r5, [r4, #8]
 231:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 603              		.loc 1 231 3 is_stmt 1 view .LVU149
 231:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 604              		.loc 1 231 21 is_stmt 0 view .LVU150
 605 003e 1F4E     		ldr	r6, .L17+4
 606 0040 3388     		ldrh	r3, [r6]
 607 0042 E360     		str	r3, [r4, #12]
 232:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 608              		.loc 1 232 3 is_stmt 1 view .LVU151
 232:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 609              		.loc 1 232 28 is_stmt 0 view .LVU152
 610 0044 2561     		str	r5, [r4, #16]
 233:Src/main.c    ****   HAL_TIM_Base_Init(&htim2);
 611              		.loc 1 233 3 is_stmt 1 view .LVU153
 233:Src/main.c    ****   HAL_TIM_Base_Init(&htim2);
 612              		.loc 1 233 32 is_stmt 0 view .LVU154
 613 0046 A561     		str	r5, [r4, #24]
 234:Src/main.c    **** 
 614              		.loc 1 234 3 is_stmt 1 view .LVU155
 615 0048 2000     		movs	r0, r4
 616 004a FFF7FEFF 		bl	HAL_TIM_Base_Init
 617              	.LVL32:
 236:Src/main.c    ****   HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig);
 618              		.loc 1 236 3 view .LVU156
 236:Src/main.c    ****   HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig);
 619              		.loc 1 236 34 is_stmt 0 view .LVU157
 620 004e 8023     		movs	r3, #128
 621 0050 5B01     		lsls	r3, r3, #5
 622 0052 1093     		str	r3, [sp, #64]
 237:Src/main.c    **** 
 623              		.loc 1 237 3 is_stmt 1 view .LVU158
 624 0054 10A9     		add	r1, sp, #64
 625 0056 2000     		movs	r0, r4
 626 0058 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 627              	.LVL33:
 239:Src/main.c    **** 
 628              		.loc 1 239 3 view .LVU159
 629 005c 2000     		movs	r0, r4
ARM GAS  /tmp/ccPYpLPg.s 			page 19


 630 005e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 631              	.LVL34:
 241:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 632              		.loc 1 241 3 view .LVU160
 241:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 633              		.loc 1 241 37 is_stmt 0 view .LVU161
 634 0062 0E95     		str	r5, [sp, #56]
 242:Src/main.c    ****   HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig);
 635              		.loc 1 242 3 is_stmt 1 view .LVU162
 242:Src/main.c    ****   HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig);
 636              		.loc 1 242 33 is_stmt 0 view .LVU163
 637 0064 0F95     		str	r5, [sp, #60]
 243:Src/main.c    **** 
 638              		.loc 1 243 3 is_stmt 1 view .LVU164
 639 0066 0EA9     		add	r1, sp, #56
 640 0068 2000     		movs	r0, r4
 641 006a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 642              	.LVL35:
 245:Src/main.c    ****   sConfigOC1.Pulse = PER / 3 * 2;
 643              		.loc 1 245 3 view .LVU165
 245:Src/main.c    ****   sConfigOC1.Pulse = PER / 3 * 2;
 644              		.loc 1 245 21 is_stmt 0 view .LVU166
 645 006e 6023     		movs	r3, #96
 646 0070 9846     		mov	r8, r3
 647 0072 0793     		str	r3, [sp, #28]
 246:Src/main.c    ****   sConfigOC1.OCPolarity = TIM_OCPOLARITY_LOW;
 648              		.loc 1 246 3 is_stmt 1 view .LVU167
 246:Src/main.c    ****   sConfigOC1.OCPolarity = TIM_OCPOLARITY_LOW;
 649              		.loc 1 246 26 is_stmt 0 view .LVU168
 650 0074 3088     		ldrh	r0, [r6]
 651 0076 0321     		movs	r1, #3
 652 0078 FFF7FEFF 		bl	__aeabi_uidiv
 653              	.LVL36:
 654 007c 80B2     		uxth	r0, r0
 246:Src/main.c    ****   sConfigOC1.OCPolarity = TIM_OCPOLARITY_LOW;
 655              		.loc 1 246 30 view .LVU169
 656 007e 4000     		lsls	r0, r0, #1
 246:Src/main.c    ****   sConfigOC1.OCPolarity = TIM_OCPOLARITY_LOW;
 657              		.loc 1 246 20 view .LVU170
 658 0080 0890     		str	r0, [sp, #32]
 247:Src/main.c    ****   sConfigOC1.OCFastMode = TIM_OCFAST_DISABLE;
 659              		.loc 1 247 3 is_stmt 1 view .LVU171
 247:Src/main.c    ****   sConfigOC1.OCFastMode = TIM_OCFAST_DISABLE;
 660              		.loc 1 247 25 is_stmt 0 view .LVU172
 661 0082 0227     		movs	r7, #2
 662 0084 0997     		str	r7, [sp, #36]
 248:Src/main.c    ****   HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC1, TIM_CHANNEL_1);
 663              		.loc 1 248 3 is_stmt 1 view .LVU173
 248:Src/main.c    ****   HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC1, TIM_CHANNEL_1);
 664              		.loc 1 248 25 is_stmt 0 view .LVU174
 665 0086 0B95     		str	r5, [sp, #44]
 249:Src/main.c    **** 
 666              		.loc 1 249 3 is_stmt 1 view .LVU175
 667 0088 0022     		movs	r2, #0
 668 008a 07A9     		add	r1, sp, #28
 669 008c 2000     		movs	r0, r4
 670 008e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
ARM GAS  /tmp/ccPYpLPg.s 			page 20


 671              	.LVL37:
 251:Src/main.c    ****   sConfigOC4.Pulse = PER / 3;
 672              		.loc 1 251 3 view .LVU176
 251:Src/main.c    ****   sConfigOC4.Pulse = PER / 3;
 673              		.loc 1 251 21 is_stmt 0 view .LVU177
 674 0092 4346     		mov	r3, r8
 675 0094 0093     		str	r3, [sp]
 252:Src/main.c    ****   sConfigOC4.OCPolarity = TIM_OCPOLARITY_LOW;
 676              		.loc 1 252 3 is_stmt 1 view .LVU178
 252:Src/main.c    ****   sConfigOC4.OCPolarity = TIM_OCPOLARITY_LOW;
 677              		.loc 1 252 26 is_stmt 0 view .LVU179
 678 0096 3088     		ldrh	r0, [r6]
 679 0098 0321     		movs	r1, #3
 680 009a FFF7FEFF 		bl	__aeabi_uidiv
 681              	.LVL38:
 682 009e 80B2     		uxth	r0, r0
 252:Src/main.c    ****   sConfigOC4.OCPolarity = TIM_OCPOLARITY_LOW;
 683              		.loc 1 252 20 view .LVU180
 684 00a0 0190     		str	r0, [sp, #4]
 253:Src/main.c    ****   sConfigOC4.OCFastMode = TIM_OCFAST_DISABLE;
 685              		.loc 1 253 3 is_stmt 1 view .LVU181
 253:Src/main.c    ****   sConfigOC4.OCFastMode = TIM_OCFAST_DISABLE;
 686              		.loc 1 253 25 is_stmt 0 view .LVU182
 687 00a2 0297     		str	r7, [sp, #8]
 254:Src/main.c    ****  HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC4, TIM_CHANNEL_4);
 688              		.loc 1 254 3 is_stmt 1 view .LVU183
 254:Src/main.c    ****  HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC4, TIM_CHANNEL_4);
 689              		.loc 1 254 25 is_stmt 0 view .LVU184
 690 00a4 0495     		str	r5, [sp, #16]
 255:Src/main.c    **** }
 691              		.loc 1 255 2 is_stmt 1 view .LVU185
 692 00a6 0C22     		movs	r2, #12
 693 00a8 6946     		mov	r1, sp
 694 00aa 2000     		movs	r0, r4
 695 00ac FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 696              	.LVL39:
 256:Src/main.c    **** 
 697              		.loc 1 256 1 is_stmt 0 view .LVU186
 698 00b0 14B0     		add	sp, sp, #80
 699              		@ sp needed
 700 00b2 04BC     		pop	{r2}
 701 00b4 9046     		mov	r8, r2
 702 00b6 F0BD     		pop	{r4, r5, r6, r7, pc}
 703              	.L18:
 704              		.align	2
 705              	.L17:
 706 00b8 00000000 		.word	htim2
 707 00bc 00000000 		.word	.LANCHOR0
 708              		.cfi_endproc
 709              	.LFE44:
 711              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 712              		.align	1
 713              		.syntax unified
 714              		.code	16
 715              		.thumb_func
 716              		.fpu softvfp
 718              	MX_USART3_UART_Init:
ARM GAS  /tmp/ccPYpLPg.s 			page 21


 719              	.LFB45:
 259:Src/main.c    ****   huart3.Instance = USART3;
 720              		.loc 1 259 1 is_stmt 1 view -0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 0
 723              		@ frame_needed = 0, uses_anonymous_args = 0
 724 0000 10B5     		push	{r4, lr}
 725              	.LCFI12:
 726              		.cfi_def_cfa_offset 8
 727              		.cfi_offset 4, -8
 728              		.cfi_offset 14, -4
 260:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 729              		.loc 1 260 3 view .LVU188
 260:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 730              		.loc 1 260 19 is_stmt 0 view .LVU189
 731 0002 0948     		ldr	r0, .L20
 732 0004 094B     		ldr	r3, .L20+4
 733 0006 0360     		str	r3, [r0]
 261:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 734              		.loc 1 261 3 is_stmt 1 view .LVU190
 261:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 735              		.loc 1 261 24 is_stmt 0 view .LVU191
 736 0008 E123     		movs	r3, #225
 737 000a 5B02     		lsls	r3, r3, #9
 738 000c 4360     		str	r3, [r0, #4]
 262:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 739              		.loc 1 262 3 is_stmt 1 view .LVU192
 262:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 740              		.loc 1 262 26 is_stmt 0 view .LVU193
 741 000e 0023     		movs	r3, #0
 742 0010 8360     		str	r3, [r0, #8]
 263:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 743              		.loc 1 263 3 is_stmt 1 view .LVU194
 263:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 744              		.loc 1 263 24 is_stmt 0 view .LVU195
 745 0012 C360     		str	r3, [r0, #12]
 264:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 746              		.loc 1 264 3 is_stmt 1 view .LVU196
 264:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 747              		.loc 1 264 22 is_stmt 0 view .LVU197
 748 0014 0361     		str	r3, [r0, #16]
 265:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 749              		.loc 1 265 3 is_stmt 1 view .LVU198
 265:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 750              		.loc 1 265 20 is_stmt 0 view .LVU199
 751 0016 0C22     		movs	r2, #12
 752 0018 4261     		str	r2, [r0, #20]
 266:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 753              		.loc 1 266 3 is_stmt 1 view .LVU200
 266:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 754              		.loc 1 266 25 is_stmt 0 view .LVU201
 755 001a 8361     		str	r3, [r0, #24]
 267:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 756              		.loc 1 267 3 is_stmt 1 view .LVU202
 267:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 757              		.loc 1 267 28 is_stmt 0 view .LVU203
 758 001c C361     		str	r3, [r0, #28]
ARM GAS  /tmp/ccPYpLPg.s 			page 22


 268:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 759              		.loc 1 268 3 is_stmt 1 view .LVU204
 268:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 760              		.loc 1 268 30 is_stmt 0 view .LVU205
 761 001e 0362     		str	r3, [r0, #32]
 269:Src/main.c    ****   HAL_UART_Init(&huart3);
 762              		.loc 1 269 3 is_stmt 1 view .LVU206
 269:Src/main.c    ****   HAL_UART_Init(&huart3);
 763              		.loc 1 269 38 is_stmt 0 view .LVU207
 764 0020 4362     		str	r3, [r0, #36]
 270:Src/main.c    **** }
 765              		.loc 1 270 3 is_stmt 1 view .LVU208
 766 0022 FFF7FEFF 		bl	HAL_UART_Init
 767              	.LVL40:
 271:Src/main.c    **** 
 768              		.loc 1 271 1 is_stmt 0 view .LVU209
 769              		@ sp needed
 770 0026 10BD     		pop	{r4, pc}
 771              	.L21:
 772              		.align	2
 773              	.L20:
 774 0028 00000000 		.word	huart3
 775 002c 00480040 		.word	1073760256
 776              		.cfi_endproc
 777              	.LFE45:
 779              		.section	.text.dfu_otter_bootloader,"ax",%progbits
 780              		.align	1
 781              		.global	dfu_otter_bootloader
 782              		.syntax unified
 783              		.code	16
 784              		.thumb_func
 785              		.fpu softvfp
 787              	dfu_otter_bootloader:
 788              	.LFB37:
  30:Src/main.c    ****   *((unsigned long *)0x20003FF0) = 0xDEADBEEF;
 789              		.loc 1 30 1 is_stmt 1 view -0
 790              		.cfi_startproc
 791              		@ Volatile: function does not return.
 792              		@ args = 0, pretend = 0, frame = 0
 793              		@ frame_needed = 0, uses_anonymous_args = 0
 794              		@ link register save eliminated.
  31:Src/main.c    ****   NVIC_SystemReset();
 795              		.loc 1 31 3 view .LVU211
  31:Src/main.c    ****   NVIC_SystemReset();
 796              		.loc 1 31 34 is_stmt 0 view .LVU212
 797 0000 054B     		ldr	r3, .L24
 798 0002 064A     		ldr	r2, .L24+4
 799 0004 1A60     		str	r2, [r3]
  32:Src/main.c    **** }
 800              		.loc 1 32 3 is_stmt 1 view .LVU213
 801              	.LBB20:
 802              	.LBI20:
 803              		.file 2 "Drivers/CMSIS/Include/core_cm0.h"
   1:Drivers/CMSIS/Include/core_cm0.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm0.h ****  * @file     core_cm0.h
   3:Drivers/CMSIS/Include/core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm0.h ****  * @version  V4.30
ARM GAS  /tmp/ccPYpLPg.s 			page 23


   5:Drivers/CMSIS/Include/core_cm0.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm0.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/core_cm0.h **** 
   9:Drivers/CMSIS/Include/core_cm0.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/core_cm0.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/core_cm0.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/core_cm0.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/core_cm0.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/core_cm0.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/core_cm0.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/core_cm0.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/core_cm0.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/core_cm0.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/core_cm0.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/core_cm0.h ****    *
  21:Drivers/CMSIS/Include/core_cm0.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/core_cm0.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/core_cm0.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/core_cm0.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/core_cm0.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/core_cm0.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/core_cm0.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/core_cm0.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/core_cm0.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/core_cm0.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/core_cm0.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/core_cm0.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/core_cm0.h **** 
  34:Drivers/CMSIS/Include/core_cm0.h **** 
  35:Drivers/CMSIS/Include/core_cm0.h **** #if   defined ( __ICCARM__ )
  36:Drivers/CMSIS/Include/core_cm0.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:Drivers/CMSIS/Include/core_cm0.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:Drivers/CMSIS/Include/core_cm0.h ****   #pragma clang system_header   /* treat file as system include file */
  39:Drivers/CMSIS/Include/core_cm0.h **** #endif
  40:Drivers/CMSIS/Include/core_cm0.h **** 
  41:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_GENERIC
  42:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_GENERIC
  43:Drivers/CMSIS/Include/core_cm0.h **** 
  44:Drivers/CMSIS/Include/core_cm0.h **** #include <stdint.h>
  45:Drivers/CMSIS/Include/core_cm0.h **** 
  46:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
  47:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
  48:Drivers/CMSIS/Include/core_cm0.h **** #endif
  49:Drivers/CMSIS/Include/core_cm0.h **** 
  50:Drivers/CMSIS/Include/core_cm0.h **** /**
  51:Drivers/CMSIS/Include/core_cm0.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:Drivers/CMSIS/Include/core_cm0.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:Drivers/CMSIS/Include/core_cm0.h **** 
  54:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:Drivers/CMSIS/Include/core_cm0.h ****      Function definitions in header files are used to allow 'inlining'.
  56:Drivers/CMSIS/Include/core_cm0.h **** 
  57:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:Drivers/CMSIS/Include/core_cm0.h ****      Unions are used for effective representation of core registers.
  59:Drivers/CMSIS/Include/core_cm0.h **** 
  60:Drivers/CMSIS/Include/core_cm0.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:Drivers/CMSIS/Include/core_cm0.h ****      Function-like macros are used to allow more efficient code.
ARM GAS  /tmp/ccPYpLPg.s 			page 24


  62:Drivers/CMSIS/Include/core_cm0.h ****  */
  63:Drivers/CMSIS/Include/core_cm0.h **** 
  64:Drivers/CMSIS/Include/core_cm0.h **** 
  65:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
  66:Drivers/CMSIS/Include/core_cm0.h ****  *                 CMSIS definitions
  67:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
  68:Drivers/CMSIS/Include/core_cm0.h **** /**
  69:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup Cortex_M0
  70:Drivers/CMSIS/Include/core_cm0.h ****   @{
  71:Drivers/CMSIS/Include/core_cm0.h ****  */
  72:Drivers/CMSIS/Include/core_cm0.h **** 
  73:Drivers/CMSIS/Include/core_cm0.h **** /*  CMSIS CM0 definitions */
  74:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16U) | \
  77:Drivers/CMSIS/Include/core_cm0.h ****                                     __CM0_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:Drivers/CMSIS/Include/core_cm0.h **** 
  79:Drivers/CMSIS/Include/core_cm0.h **** #define __CORTEX_M                (0x00U)                                      /*!< Cortex-M Core *
  80:Drivers/CMSIS/Include/core_cm0.h **** 
  81:Drivers/CMSIS/Include/core_cm0.h **** 
  82:Drivers/CMSIS/Include/core_cm0.h **** #if   defined ( __CC_ARM )
  83:Drivers/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:Drivers/CMSIS/Include/core_cm0.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:Drivers/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static __inline
  86:Drivers/CMSIS/Include/core_cm0.h **** 
  87:Drivers/CMSIS/Include/core_cm0.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:Drivers/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:Drivers/CMSIS/Include/core_cm0.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:Drivers/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static __inline
  91:Drivers/CMSIS/Include/core_cm0.h **** 
  92:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __GNUC__ )
  93:Drivers/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:Drivers/CMSIS/Include/core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:Drivers/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static inline
  96:Drivers/CMSIS/Include/core_cm0.h **** 
  97:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __ICCARM__ )
  98:Drivers/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:Drivers/CMSIS/Include/core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:Drivers/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static inline
 101:Drivers/CMSIS/Include/core_cm0.h **** 
 102:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TMS470__ )
 103:Drivers/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:Drivers/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static inline
 105:Drivers/CMSIS/Include/core_cm0.h **** 
 106:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TASKING__ )
 107:Drivers/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:Drivers/CMSIS/Include/core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:Drivers/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static inline
 110:Drivers/CMSIS/Include/core_cm0.h **** 
 111:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __CSMC__ )
 112:Drivers/CMSIS/Include/core_cm0.h ****   #define __packed
 113:Drivers/CMSIS/Include/core_cm0.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:Drivers/CMSIS/Include/core_cm0.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:Drivers/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static inline
 116:Drivers/CMSIS/Include/core_cm0.h **** 
 117:Drivers/CMSIS/Include/core_cm0.h **** #else
 118:Drivers/CMSIS/Include/core_cm0.h ****   #error Unknown compiler
ARM GAS  /tmp/ccPYpLPg.s 			page 25


 119:Drivers/CMSIS/Include/core_cm0.h **** #endif
 120:Drivers/CMSIS/Include/core_cm0.h **** 
 121:Drivers/CMSIS/Include/core_cm0.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:Drivers/CMSIS/Include/core_cm0.h ****     This core does not support an FPU at all
 123:Drivers/CMSIS/Include/core_cm0.h **** */
 124:Drivers/CMSIS/Include/core_cm0.h **** #define __FPU_USED       0U
 125:Drivers/CMSIS/Include/core_cm0.h **** 
 126:Drivers/CMSIS/Include/core_cm0.h **** #if defined ( __CC_ARM )
 127:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TARGET_FPU_VFP
 128:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 129:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 130:Drivers/CMSIS/Include/core_cm0.h **** 
 131:Drivers/CMSIS/Include/core_cm0.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 132:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARM_PCS_VFP
 133:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 134:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm0.h **** 
 136:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __GNUC__ )
 137:Drivers/CMSIS/Include/core_cm0.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 138:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 139:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 140:Drivers/CMSIS/Include/core_cm0.h **** 
 141:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __ICCARM__ )
 142:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARMVFP__
 143:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 144:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 145:Drivers/CMSIS/Include/core_cm0.h **** 
 146:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TMS470__ )
 147:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TI_VFP_SUPPORT__
 148:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 149:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 150:Drivers/CMSIS/Include/core_cm0.h **** 
 151:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TASKING__ )
 152:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __FPU_VFP__
 153:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 154:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 155:Drivers/CMSIS/Include/core_cm0.h **** 
 156:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __CSMC__ )
 157:Drivers/CMSIS/Include/core_cm0.h ****   #if ( __CSMC__ & 0x400U)
 158:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 159:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 160:Drivers/CMSIS/Include/core_cm0.h **** 
 161:Drivers/CMSIS/Include/core_cm0.h **** #endif
 162:Drivers/CMSIS/Include/core_cm0.h **** 
 163:Drivers/CMSIS/Include/core_cm0.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 164:Drivers/CMSIS/Include/core_cm0.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 165:Drivers/CMSIS/Include/core_cm0.h **** 
 166:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 167:Drivers/CMSIS/Include/core_cm0.h **** }
 168:Drivers/CMSIS/Include/core_cm0.h **** #endif
 169:Drivers/CMSIS/Include/core_cm0.h **** 
 170:Drivers/CMSIS/Include/core_cm0.h **** #endif /* __CORE_CM0_H_GENERIC */
 171:Drivers/CMSIS/Include/core_cm0.h **** 
 172:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CMSIS_GENERIC
 173:Drivers/CMSIS/Include/core_cm0.h **** 
 174:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_DEPENDANT
ARM GAS  /tmp/ccPYpLPg.s 			page 26


 176:Drivers/CMSIS/Include/core_cm0.h **** 
 177:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 178:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
 179:Drivers/CMSIS/Include/core_cm0.h **** #endif
 180:Drivers/CMSIS/Include/core_cm0.h **** 
 181:Drivers/CMSIS/Include/core_cm0.h **** /* check device defines and use defaults */
 182:Drivers/CMSIS/Include/core_cm0.h **** #if defined __CHECK_DEVICE_DEFINES
 183:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __CM0_REV
 184:Drivers/CMSIS/Include/core_cm0.h ****     #define __CM0_REV               0x0000U
 185:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__CM0_REV not defined in device header file; using default!"
 186:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 187:Drivers/CMSIS/Include/core_cm0.h **** 
 188:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __NVIC_PRIO_BITS
 189:Drivers/CMSIS/Include/core_cm0.h ****     #define __NVIC_PRIO_BITS          2U
 190:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 191:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 192:Drivers/CMSIS/Include/core_cm0.h **** 
 193:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __Vendor_SysTickConfig
 194:Drivers/CMSIS/Include/core_cm0.h ****     #define __Vendor_SysTickConfig    0U
 195:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 196:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 197:Drivers/CMSIS/Include/core_cm0.h **** #endif
 198:Drivers/CMSIS/Include/core_cm0.h **** 
 199:Drivers/CMSIS/Include/core_cm0.h **** /* IO definitions (access restrictions to peripheral registers) */
 200:Drivers/CMSIS/Include/core_cm0.h **** /**
 201:Drivers/CMSIS/Include/core_cm0.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 202:Drivers/CMSIS/Include/core_cm0.h **** 
 203:Drivers/CMSIS/Include/core_cm0.h ****     <strong>IO Type Qualifiers</strong> are used
 204:Drivers/CMSIS/Include/core_cm0.h ****     \li to specify the access to peripheral variables.
 205:Drivers/CMSIS/Include/core_cm0.h ****     \li for automatic generation of peripheral register debug information.
 206:Drivers/CMSIS/Include/core_cm0.h **** */
 207:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 208:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 209:Drivers/CMSIS/Include/core_cm0.h **** #else
 210:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 211:Drivers/CMSIS/Include/core_cm0.h **** #endif
 212:Drivers/CMSIS/Include/core_cm0.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 213:Drivers/CMSIS/Include/core_cm0.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 214:Drivers/CMSIS/Include/core_cm0.h **** 
 215:Drivers/CMSIS/Include/core_cm0.h **** /* following defines should be used for structure members */
 216:Drivers/CMSIS/Include/core_cm0.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 217:Drivers/CMSIS/Include/core_cm0.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 218:Drivers/CMSIS/Include/core_cm0.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 219:Drivers/CMSIS/Include/core_cm0.h **** 
 220:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group Cortex_M0 */
 221:Drivers/CMSIS/Include/core_cm0.h **** 
 222:Drivers/CMSIS/Include/core_cm0.h **** 
 223:Drivers/CMSIS/Include/core_cm0.h **** 
 224:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 225:Drivers/CMSIS/Include/core_cm0.h ****  *                 Register Abstraction
 226:Drivers/CMSIS/Include/core_cm0.h ****   Core Register contain:
 227:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register
 228:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Register
 229:Drivers/CMSIS/Include/core_cm0.h ****   - Core SCB Register
 230:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Register
 231:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 232:Drivers/CMSIS/Include/core_cm0.h **** /**
ARM GAS  /tmp/ccPYpLPg.s 			page 27


 233:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 234:Drivers/CMSIS/Include/core_cm0.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 235:Drivers/CMSIS/Include/core_cm0.h **** */
 236:Drivers/CMSIS/Include/core_cm0.h **** 
 237:Drivers/CMSIS/Include/core_cm0.h **** /**
 238:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 239:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 240:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Core Register type definitions.
 241:Drivers/CMSIS/Include/core_cm0.h ****   @{
 242:Drivers/CMSIS/Include/core_cm0.h ****  */
 243:Drivers/CMSIS/Include/core_cm0.h **** 
 244:Drivers/CMSIS/Include/core_cm0.h **** /**
 245:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 246:Drivers/CMSIS/Include/core_cm0.h ****  */
 247:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 248:Drivers/CMSIS/Include/core_cm0.h **** {
 249:Drivers/CMSIS/Include/core_cm0.h ****   struct
 250:Drivers/CMSIS/Include/core_cm0.h ****   {
 251:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 252:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 253:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 254:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 255:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 256:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 257:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 258:Drivers/CMSIS/Include/core_cm0.h **** } APSR_Type;
 259:Drivers/CMSIS/Include/core_cm0.h **** 
 260:Drivers/CMSIS/Include/core_cm0.h **** /* APSR Register Definitions */
 261:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 262:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 263:Drivers/CMSIS/Include/core_cm0.h **** 
 264:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 265:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 266:Drivers/CMSIS/Include/core_cm0.h **** 
 267:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 268:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 269:Drivers/CMSIS/Include/core_cm0.h **** 
 270:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 271:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 272:Drivers/CMSIS/Include/core_cm0.h **** 
 273:Drivers/CMSIS/Include/core_cm0.h **** 
 274:Drivers/CMSIS/Include/core_cm0.h **** /**
 275:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 276:Drivers/CMSIS/Include/core_cm0.h ****  */
 277:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 278:Drivers/CMSIS/Include/core_cm0.h **** {
 279:Drivers/CMSIS/Include/core_cm0.h ****   struct
 280:Drivers/CMSIS/Include/core_cm0.h ****   {
 281:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 282:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 283:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 284:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 285:Drivers/CMSIS/Include/core_cm0.h **** } IPSR_Type;
 286:Drivers/CMSIS/Include/core_cm0.h **** 
 287:Drivers/CMSIS/Include/core_cm0.h **** /* IPSR Register Definitions */
 288:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 289:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
ARM GAS  /tmp/ccPYpLPg.s 			page 28


 290:Drivers/CMSIS/Include/core_cm0.h **** 
 291:Drivers/CMSIS/Include/core_cm0.h **** 
 292:Drivers/CMSIS/Include/core_cm0.h **** /**
 293:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 294:Drivers/CMSIS/Include/core_cm0.h ****  */
 295:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 296:Drivers/CMSIS/Include/core_cm0.h **** {
 297:Drivers/CMSIS/Include/core_cm0.h ****   struct
 298:Drivers/CMSIS/Include/core_cm0.h ****   {
 299:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 300:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 301:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 302:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 303:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 304:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 305:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 306:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 307:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 308:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 309:Drivers/CMSIS/Include/core_cm0.h **** } xPSR_Type;
 310:Drivers/CMSIS/Include/core_cm0.h **** 
 311:Drivers/CMSIS/Include/core_cm0.h **** /* xPSR Register Definitions */
 312:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 313:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 314:Drivers/CMSIS/Include/core_cm0.h **** 
 315:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 316:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 317:Drivers/CMSIS/Include/core_cm0.h **** 
 318:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 319:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 320:Drivers/CMSIS/Include/core_cm0.h **** 
 321:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 322:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 323:Drivers/CMSIS/Include/core_cm0.h **** 
 324:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 325:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 326:Drivers/CMSIS/Include/core_cm0.h **** 
 327:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 328:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 329:Drivers/CMSIS/Include/core_cm0.h **** 
 330:Drivers/CMSIS/Include/core_cm0.h **** 
 331:Drivers/CMSIS/Include/core_cm0.h **** /**
 332:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Control Registers (CONTROL).
 333:Drivers/CMSIS/Include/core_cm0.h ****  */
 334:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 335:Drivers/CMSIS/Include/core_cm0.h **** {
 336:Drivers/CMSIS/Include/core_cm0.h ****   struct
 337:Drivers/CMSIS/Include/core_cm0.h ****   {
 338:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:1;               /*!< bit:      0  Reserved */
 339:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 340:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 341:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 342:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 343:Drivers/CMSIS/Include/core_cm0.h **** } CONTROL_Type;
 344:Drivers/CMSIS/Include/core_cm0.h **** 
 345:Drivers/CMSIS/Include/core_cm0.h **** /* CONTROL Register Definitions */
 346:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
ARM GAS  /tmp/ccPYpLPg.s 			page 29


 347:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 348:Drivers/CMSIS/Include/core_cm0.h **** 
 349:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CORE */
 350:Drivers/CMSIS/Include/core_cm0.h **** 
 351:Drivers/CMSIS/Include/core_cm0.h **** 
 352:Drivers/CMSIS/Include/core_cm0.h **** /**
 353:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 354:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 355:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Type definitions for the NVIC Registers
 356:Drivers/CMSIS/Include/core_cm0.h ****   @{
 357:Drivers/CMSIS/Include/core_cm0.h ****  */
 358:Drivers/CMSIS/Include/core_cm0.h **** 
 359:Drivers/CMSIS/Include/core_cm0.h **** /**
 360:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 361:Drivers/CMSIS/Include/core_cm0.h ****  */
 362:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 363:Drivers/CMSIS/Include/core_cm0.h **** {
 364:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 365:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0[31U];
 366:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 367:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RSERVED1[31U];
 368:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 369:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED2[31U];
 370:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 371:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED3[31U];
 372:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED4[64U];
 373:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 374:Drivers/CMSIS/Include/core_cm0.h **** }  NVIC_Type;
 375:Drivers/CMSIS/Include/core_cm0.h **** 
 376:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_NVIC */
 377:Drivers/CMSIS/Include/core_cm0.h **** 
 378:Drivers/CMSIS/Include/core_cm0.h **** 
 379:Drivers/CMSIS/Include/core_cm0.h **** /**
 380:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 381:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 382:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Control Block Registers
 383:Drivers/CMSIS/Include/core_cm0.h ****   @{
 384:Drivers/CMSIS/Include/core_cm0.h ****  */
 385:Drivers/CMSIS/Include/core_cm0.h **** 
 386:Drivers/CMSIS/Include/core_cm0.h **** /**
 387:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Control Block (SCB).
 388:Drivers/CMSIS/Include/core_cm0.h ****  */
 389:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 390:Drivers/CMSIS/Include/core_cm0.h **** {
 391:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 392:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 393:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0;
 394:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 395:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 396:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 397:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED1;
 398:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 399:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 400:Drivers/CMSIS/Include/core_cm0.h **** } SCB_Type;
 401:Drivers/CMSIS/Include/core_cm0.h **** 
 402:Drivers/CMSIS/Include/core_cm0.h **** /* SCB CPUID Register Definitions */
 403:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
ARM GAS  /tmp/ccPYpLPg.s 			page 30


 404:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 405:Drivers/CMSIS/Include/core_cm0.h **** 
 406:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 407:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 408:Drivers/CMSIS/Include/core_cm0.h **** 
 409:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 410:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 411:Drivers/CMSIS/Include/core_cm0.h **** 
 412:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 413:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 414:Drivers/CMSIS/Include/core_cm0.h **** 
 415:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 416:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 417:Drivers/CMSIS/Include/core_cm0.h **** 
 418:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 419:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 420:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 421:Drivers/CMSIS/Include/core_cm0.h **** 
 422:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 423:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 424:Drivers/CMSIS/Include/core_cm0.h **** 
 425:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 426:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 427:Drivers/CMSIS/Include/core_cm0.h **** 
 428:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 429:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 430:Drivers/CMSIS/Include/core_cm0.h **** 
 431:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 432:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 433:Drivers/CMSIS/Include/core_cm0.h **** 
 434:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 435:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 436:Drivers/CMSIS/Include/core_cm0.h **** 
 437:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 438:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 439:Drivers/CMSIS/Include/core_cm0.h **** 
 440:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 441:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 442:Drivers/CMSIS/Include/core_cm0.h **** 
 443:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 444:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 445:Drivers/CMSIS/Include/core_cm0.h **** 
 446:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 447:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 448:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 449:Drivers/CMSIS/Include/core_cm0.h **** 
 450:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 451:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 452:Drivers/CMSIS/Include/core_cm0.h **** 
 453:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 454:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 455:Drivers/CMSIS/Include/core_cm0.h **** 
 456:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 457:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 458:Drivers/CMSIS/Include/core_cm0.h **** 
 459:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 460:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
ARM GAS  /tmp/ccPYpLPg.s 			page 31


 461:Drivers/CMSIS/Include/core_cm0.h **** 
 462:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Control Register Definitions */
 463:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 464:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 465:Drivers/CMSIS/Include/core_cm0.h **** 
 466:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 467:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 468:Drivers/CMSIS/Include/core_cm0.h **** 
 469:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 470:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 471:Drivers/CMSIS/Include/core_cm0.h **** 
 472:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Configuration Control Register Definitions */
 473:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 474:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm0.h **** 
 476:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 477:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm0.h **** 
 479:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 480:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 481:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm0.h **** 
 483:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SCB */
 484:Drivers/CMSIS/Include/core_cm0.h **** 
 485:Drivers/CMSIS/Include/core_cm0.h **** 
 486:Drivers/CMSIS/Include/core_cm0.h **** /**
 487:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 488:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 489:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Timer Registers.
 490:Drivers/CMSIS/Include/core_cm0.h ****   @{
 491:Drivers/CMSIS/Include/core_cm0.h ****  */
 492:Drivers/CMSIS/Include/core_cm0.h **** 
 493:Drivers/CMSIS/Include/core_cm0.h **** /**
 494:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Timer (SysTick).
 495:Drivers/CMSIS/Include/core_cm0.h ****  */
 496:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 497:Drivers/CMSIS/Include/core_cm0.h **** {
 498:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 499:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 500:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 501:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 502:Drivers/CMSIS/Include/core_cm0.h **** } SysTick_Type;
 503:Drivers/CMSIS/Include/core_cm0.h **** 
 504:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Control / Status Register Definitions */
 505:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 506:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 507:Drivers/CMSIS/Include/core_cm0.h **** 
 508:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 509:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 510:Drivers/CMSIS/Include/core_cm0.h **** 
 511:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 512:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 513:Drivers/CMSIS/Include/core_cm0.h **** 
 514:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 515:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 516:Drivers/CMSIS/Include/core_cm0.h **** 
 517:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Reload Register Definitions */
ARM GAS  /tmp/ccPYpLPg.s 			page 32


 518:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 519:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 520:Drivers/CMSIS/Include/core_cm0.h **** 
 521:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Current Register Definitions */
 522:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 523:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 524:Drivers/CMSIS/Include/core_cm0.h **** 
 525:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Calibration Register Definitions */
 526:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 527:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 528:Drivers/CMSIS/Include/core_cm0.h **** 
 529:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 530:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 531:Drivers/CMSIS/Include/core_cm0.h **** 
 532:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 533:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 534:Drivers/CMSIS/Include/core_cm0.h **** 
 535:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SysTick */
 536:Drivers/CMSIS/Include/core_cm0.h **** 
 537:Drivers/CMSIS/Include/core_cm0.h **** 
 538:Drivers/CMSIS/Include/core_cm0.h **** /**
 539:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 540:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 541:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Cortex-M0 Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ove
 542:Drivers/CMSIS/Include/core_cm0.h ****             Therefore they are not covered by the Cortex-M0 header file.
 543:Drivers/CMSIS/Include/core_cm0.h ****   @{
 544:Drivers/CMSIS/Include/core_cm0.h ****  */
 545:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CoreDebug */
 546:Drivers/CMSIS/Include/core_cm0.h **** 
 547:Drivers/CMSIS/Include/core_cm0.h **** 
 548:Drivers/CMSIS/Include/core_cm0.h **** /**
 549:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 550:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 551:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 552:Drivers/CMSIS/Include/core_cm0.h ****   @{
 553:Drivers/CMSIS/Include/core_cm0.h ****  */
 554:Drivers/CMSIS/Include/core_cm0.h **** 
 555:Drivers/CMSIS/Include/core_cm0.h **** /**
 556:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 557:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 558:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of the bit field.
 559:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted value.
 560:Drivers/CMSIS/Include/core_cm0.h **** */
 561:Drivers/CMSIS/Include/core_cm0.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
 562:Drivers/CMSIS/Include/core_cm0.h **** 
 563:Drivers/CMSIS/Include/core_cm0.h **** /**
 564:Drivers/CMSIS/Include/core_cm0.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 565:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 566:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of register.
 567:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted bit field value.
 568:Drivers/CMSIS/Include/core_cm0.h **** */
 569:Drivers/CMSIS/Include/core_cm0.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
 570:Drivers/CMSIS/Include/core_cm0.h **** 
 571:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_core_bitfield */
 572:Drivers/CMSIS/Include/core_cm0.h **** 
 573:Drivers/CMSIS/Include/core_cm0.h **** 
 574:Drivers/CMSIS/Include/core_cm0.h **** /**
ARM GAS  /tmp/ccPYpLPg.s 			page 33


 575:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 576:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_base     Core Definitions
 577:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Definitions for base addresses, unions, and structures.
 578:Drivers/CMSIS/Include/core_cm0.h ****   @{
 579:Drivers/CMSIS/Include/core_cm0.h ****  */
 580:Drivers/CMSIS/Include/core_cm0.h **** 
 581:Drivers/CMSIS/Include/core_cm0.h **** /* Memory mapping of Cortex-M0 Hardware */
 582:Drivers/CMSIS/Include/core_cm0.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 583:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 584:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 585:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 586:Drivers/CMSIS/Include/core_cm0.h **** 
 587:Drivers/CMSIS/Include/core_cm0.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 588:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 589:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 590:Drivers/CMSIS/Include/core_cm0.h **** 
 591:Drivers/CMSIS/Include/core_cm0.h **** 
 592:Drivers/CMSIS/Include/core_cm0.h **** /*@} */
 593:Drivers/CMSIS/Include/core_cm0.h **** 
 594:Drivers/CMSIS/Include/core_cm0.h **** 
 595:Drivers/CMSIS/Include/core_cm0.h **** 
 596:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 597:Drivers/CMSIS/Include/core_cm0.h ****  *                Hardware Abstraction Layer
 598:Drivers/CMSIS/Include/core_cm0.h ****   Core Function Interface contains:
 599:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Functions
 600:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Functions
 601:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register Access Functions
 602:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 603:Drivers/CMSIS/Include/core_cm0.h **** /**
 604:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 605:Drivers/CMSIS/Include/core_cm0.h **** */
 606:Drivers/CMSIS/Include/core_cm0.h **** 
 607:Drivers/CMSIS/Include/core_cm0.h **** 
 608:Drivers/CMSIS/Include/core_cm0.h **** 
 609:Drivers/CMSIS/Include/core_cm0.h **** /* ##########################   NVIC functions  #################################### */
 610:Drivers/CMSIS/Include/core_cm0.h **** /**
 611:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 612:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 613:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 614:Drivers/CMSIS/Include/core_cm0.h ****   @{
 615:Drivers/CMSIS/Include/core_cm0.h ****  */
 616:Drivers/CMSIS/Include/core_cm0.h **** 
 617:Drivers/CMSIS/Include/core_cm0.h **** /* Interrupt Priorities are WORD accessible only under ARMv6M                   */
 618:Drivers/CMSIS/Include/core_cm0.h **** /* The following MACROS handle generation of the register offset and byte masks */
 619:Drivers/CMSIS/Include/core_cm0.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 620:Drivers/CMSIS/Include/core_cm0.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 621:Drivers/CMSIS/Include/core_cm0.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 622:Drivers/CMSIS/Include/core_cm0.h **** 
 623:Drivers/CMSIS/Include/core_cm0.h **** 
 624:Drivers/CMSIS/Include/core_cm0.h **** /**
 625:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Enable External Interrupt
 626:Drivers/CMSIS/Include/core_cm0.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
 627:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
 628:Drivers/CMSIS/Include/core_cm0.h ****  */
 629:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
 630:Drivers/CMSIS/Include/core_cm0.h **** {
 631:Drivers/CMSIS/Include/core_cm0.h ****   NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
ARM GAS  /tmp/ccPYpLPg.s 			page 34


 632:Drivers/CMSIS/Include/core_cm0.h **** }
 633:Drivers/CMSIS/Include/core_cm0.h **** 
 634:Drivers/CMSIS/Include/core_cm0.h **** 
 635:Drivers/CMSIS/Include/core_cm0.h **** /**
 636:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Disable External Interrupt
 637:Drivers/CMSIS/Include/core_cm0.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
 638:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
 639:Drivers/CMSIS/Include/core_cm0.h ****  */
 640:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
 641:Drivers/CMSIS/Include/core_cm0.h **** {
 642:Drivers/CMSIS/Include/core_cm0.h ****   NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 643:Drivers/CMSIS/Include/core_cm0.h **** }
 644:Drivers/CMSIS/Include/core_cm0.h **** 
 645:Drivers/CMSIS/Include/core_cm0.h **** 
 646:Drivers/CMSIS/Include/core_cm0.h **** /**
 647:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Get Pending Interrupt
 648:Drivers/CMSIS/Include/core_cm0.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
 649:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Interrupt number.
 650:Drivers/CMSIS/Include/core_cm0.h ****   \return             0  Interrupt status is not pending.
 651:Drivers/CMSIS/Include/core_cm0.h ****   \return             1  Interrupt status is pending.
 652:Drivers/CMSIS/Include/core_cm0.h ****  */
 653:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
 654:Drivers/CMSIS/Include/core_cm0.h **** {
 655:Drivers/CMSIS/Include/core_cm0.h ****   return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL
 656:Drivers/CMSIS/Include/core_cm0.h **** }
 657:Drivers/CMSIS/Include/core_cm0.h **** 
 658:Drivers/CMSIS/Include/core_cm0.h **** 
 659:Drivers/CMSIS/Include/core_cm0.h **** /**
 660:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Set Pending Interrupt
 661:Drivers/CMSIS/Include/core_cm0.h ****   \details Sets the pending bit of an external interrupt.
 662:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
 663:Drivers/CMSIS/Include/core_cm0.h ****  */
 664:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
 665:Drivers/CMSIS/Include/core_cm0.h **** {
 666:Drivers/CMSIS/Include/core_cm0.h ****   NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 667:Drivers/CMSIS/Include/core_cm0.h **** }
 668:Drivers/CMSIS/Include/core_cm0.h **** 
 669:Drivers/CMSIS/Include/core_cm0.h **** 
 670:Drivers/CMSIS/Include/core_cm0.h **** /**
 671:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Clear Pending Interrupt
 672:Drivers/CMSIS/Include/core_cm0.h ****   \details Clears the pending bit of an external interrupt.
 673:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
 674:Drivers/CMSIS/Include/core_cm0.h ****  */
 675:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 676:Drivers/CMSIS/Include/core_cm0.h **** {
 677:Drivers/CMSIS/Include/core_cm0.h ****   NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 678:Drivers/CMSIS/Include/core_cm0.h **** }
 679:Drivers/CMSIS/Include/core_cm0.h **** 
 680:Drivers/CMSIS/Include/core_cm0.h **** 
 681:Drivers/CMSIS/Include/core_cm0.h **** /**
 682:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Set Interrupt Priority
 683:Drivers/CMSIS/Include/core_cm0.h ****   \details Sets the priority of an interrupt.
 684:Drivers/CMSIS/Include/core_cm0.h ****   \note    The priority cannot be set for every core interrupt.
 685:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Interrupt number.
 686:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]  priority  Priority to set.
 687:Drivers/CMSIS/Include/core_cm0.h ****  */
 688:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
ARM GAS  /tmp/ccPYpLPg.s 			page 35


 689:Drivers/CMSIS/Include/core_cm0.h **** {
 690:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) < 0)
 691:Drivers/CMSIS/Include/core_cm0.h ****   {
 692:Drivers/CMSIS/Include/core_cm0.h ****     SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))
 693:Drivers/CMSIS/Include/core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 694:Drivers/CMSIS/Include/core_cm0.h ****   }
 695:Drivers/CMSIS/Include/core_cm0.h ****   else
 696:Drivers/CMSIS/Include/core_cm0.h ****   {
 697:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))
 698:Drivers/CMSIS/Include/core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 699:Drivers/CMSIS/Include/core_cm0.h ****   }
 700:Drivers/CMSIS/Include/core_cm0.h **** }
 701:Drivers/CMSIS/Include/core_cm0.h **** 
 702:Drivers/CMSIS/Include/core_cm0.h **** 
 703:Drivers/CMSIS/Include/core_cm0.h **** /**
 704:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Get Interrupt Priority
 705:Drivers/CMSIS/Include/core_cm0.h ****   \details Reads the priority of an interrupt.
 706:Drivers/CMSIS/Include/core_cm0.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
 707:Drivers/CMSIS/Include/core_cm0.h ****            or negative to specify an internal (core) interrupt.
 708:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]   IRQn  Interrupt number.
 709:Drivers/CMSIS/Include/core_cm0.h ****   \return             Interrupt Priority.
 710:Drivers/CMSIS/Include/core_cm0.h ****                       Value is aligned automatically to the implemented priority bits of the microc
 711:Drivers/CMSIS/Include/core_cm0.h ****  */
 712:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
 713:Drivers/CMSIS/Include/core_cm0.h **** {
 714:Drivers/CMSIS/Include/core_cm0.h **** 
 715:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) < 0)
 716:Drivers/CMSIS/Include/core_cm0.h ****   {
 717:Drivers/CMSIS/Include/core_cm0.h ****     return((uint32_t)(((SCB->SHP[_SHP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (8U -
 718:Drivers/CMSIS/Include/core_cm0.h ****   }
 719:Drivers/CMSIS/Include/core_cm0.h ****   else
 720:Drivers/CMSIS/Include/core_cm0.h ****   {
 721:Drivers/CMSIS/Include/core_cm0.h ****     return((uint32_t)(((NVIC->IP[ _IP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (8U -
 722:Drivers/CMSIS/Include/core_cm0.h ****   }
 723:Drivers/CMSIS/Include/core_cm0.h **** }
 724:Drivers/CMSIS/Include/core_cm0.h **** 
 725:Drivers/CMSIS/Include/core_cm0.h **** 
 726:Drivers/CMSIS/Include/core_cm0.h **** /**
 727:Drivers/CMSIS/Include/core_cm0.h ****   \brief   System Reset
 728:Drivers/CMSIS/Include/core_cm0.h ****   \details Initiates a system reset request to reset the MCU.
 729:Drivers/CMSIS/Include/core_cm0.h ****  */
 730:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_SystemReset(void)
 804              		.loc 2 730 22 view .LVU214
 805              	.LBB21:
 731:Drivers/CMSIS/Include/core_cm0.h **** {
 732:Drivers/CMSIS/Include/core_cm0.h ****   __DSB();                                                          /* Ensure all outstanding memor
 806              		.loc 2 732 3 view .LVU215
 807              	.LBB22:
 808              	.LBI22:
 809              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
ARM GAS  /tmp/ccPYpLPg.s 			page 36


   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccPYpLPg.s 			page 37


  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/ccPYpLPg.s 			page 38


 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccPYpLPg.s 			page 39


 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  /tmp/ccPYpLPg.s 			page 40


 236:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccPYpLPg.s 			page 41


 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
ARM GAS  /tmp/ccPYpLPg.s 			page 42


 350:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
ARM GAS  /tmp/ccPYpLPg.s 			page 43


 407:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 810              		.loc 3 427 53 view .LVU216
 811              	.LBB23:
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 812              		.loc 3 429 3 view .LVU217
 813              		.syntax divided
 814              	@ 429 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 815 0006 BFF34F8F 		dsb 0xF
 816              	@ 0 "" 2
 817              		.thumb
 818              		.syntax unified
 819              	.LBE23:
 820              	.LBE22:
 733:Drivers/CMSIS/Include/core_cm0.h ****                                                                        buffered write are completed
 734:Drivers/CMSIS/Include/core_cm0.h ****   SCB->AIRCR  = ((0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 821              		.loc 2 734 3 view .LVU218
 822              		.loc 2 734 15 is_stmt 0 view .LVU219
 823 000a 054B     		ldr	r3, .L24+8
 824 000c 054A     		ldr	r2, .L24+12
 825 000e DA60     		str	r2, [r3, #12]
 735:Drivers/CMSIS/Include/core_cm0.h ****                  SCB_AIRCR_SYSRESETREQ_Msk);
 736:Drivers/CMSIS/Include/core_cm0.h ****   __DSB();                                                          /* Ensure completion of memory 
 826              		.loc 2 736 3 is_stmt 1 view .LVU220
 827              	.LBB24:
 828              	.LBI24:
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 829              		.loc 3 427 53 view .LVU221
 830              	.LBB25:
 831              		.loc 3 429 3 view .LVU222
 832              		.syntax divided
 833              	@ 429 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 834 0010 BFF34F8F 		dsb 0xF
 835              	@ 0 "" 2
 836              		.thumb
 837              		.syntax unified
 838              	.L23:
ARM GAS  /tmp/ccPYpLPg.s 			page 44


 839              	.LBE25:
 840              	.LBE24:
 737:Drivers/CMSIS/Include/core_cm0.h **** 
 738:Drivers/CMSIS/Include/core_cm0.h ****   for(;;)                                                           /* wait until reset */
 841              		.loc 2 738 3 view .LVU223
 739:Drivers/CMSIS/Include/core_cm0.h ****   {
 740:Drivers/CMSIS/Include/core_cm0.h ****     __NOP();
 842              		.loc 2 740 5 view .LVU224
 843              	.LBB26:
 844              	.LBI26:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845              		.loc 3 373 53 view .LVU225
 846              	.LBB27:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 847              		.loc 3 375 3 view .LVU226
 848              		.syntax divided
 849              	@ 375 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 850 0014 C046     		nop
 851              	@ 0 "" 2
 852              		.thumb
 853              		.syntax unified
 854 0016 FDE7     		b	.L23
 855              	.L25:
 856              		.align	2
 857              	.L24:
 858 0018 F03F0020 		.word	536887280
 859 001c EFBEADDE 		.word	-559038737
 860 0020 00ED00E0 		.word	-536810240
 861 0024 0400FA05 		.word	100270084
 862              	.LBE27:
 863              	.LBE26:
 864              	.LBE21:
 865              	.LBE20:
 866              		.cfi_endproc
 867              	.LFE37:
 869              		.section	.text.startDMA,"ax",%progbits
 870              		.align	1
 871              		.global	startDMA
 872              		.syntax unified
 873              		.code	16
 874              		.thumb_func
 875              		.fpu softvfp
 877              	startDMA:
 878              	.LFB41:
 137:Src/main.c    **** 
 879              		.loc 1 137 21 view -0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 0
 882              		@ frame_needed = 0, uses_anonymous_args = 0
 883 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 884              	.LCFI13:
 885              		.cfi_def_cfa_offset 20
 886              		.cfi_offset 4, -20
 887              		.cfi_offset 5, -16
 888              		.cfi_offset 6, -12
 889              		.cfi_offset 7, -8
 890              		.cfi_offset 14, -4
ARM GAS  /tmp/ccPYpLPg.s 			page 45


 891 0002 C646     		mov	lr, r8
 892 0004 00B5     		push	{lr}
 893              	.LCFI14:
 894              		.cfi_def_cfa_offset 24
 895              		.cfi_offset 8, -24
 140:Src/main.c    ****     return;
 896              		.loc 1 140 3 view .LVU228
 140:Src/main.c    ****     return;
 897              		.loc 1 140 7 is_stmt 0 view .LVU229
 898 0006 174B     		ldr	r3, .L28
 899 0008 586A     		ldr	r0, [r3, #36]
 900 000a FFF7FEFF 		bl	HAL_DMA_GetState
 901              	.LVL41:
 140:Src/main.c    ****     return;
 902              		.loc 1 140 6 view .LVU230
 903 000e 0228     		cmp	r0, #2
 904 0010 24D0     		beq	.L26
 144:Src/main.c    ****     return;
 905              		.loc 1 144 3 is_stmt 1 view .LVU231
 144:Src/main.c    ****     return;
 906              		.loc 1 144 7 is_stmt 0 view .LVU232
 907 0012 144B     		ldr	r3, .L28
 908 0014 186B     		ldr	r0, [r3, #48]
 909 0016 FFF7FEFF 		bl	HAL_DMA_GetState
 910              	.LVL42:
 144:Src/main.c    ****     return;
 911              		.loc 1 144 6 view .LVU233
 912 001a 0228     		cmp	r0, #2
 913 001c 1ED0     		beq	.L26
 148:Src/main.c    **** 
 914              		.loc 1 148 3 is_stmt 1 view .LVU234
 148:Src/main.c    **** 
 915              		.loc 1 148 13 is_stmt 0 view .LVU235
 916 001e 8024     		movs	r4, #128
 917 0020 E405     		lsls	r4, r4, #23
 918 0022 2368     		ldr	r3, [r4]
 919 0024 0125     		movs	r5, #1
 920 0026 2B40     		ands	r3, r5
 921 0028 2360     		str	r3, [r4]
 150:Src/main.c    ****   HAL_DMA_Start_IT(htim2.hdma[TIM_DMA_ID_CC4], (uint32_t)my_data_buf,       (uint32_t)&GPIOC->ODR, 
 922              		.loc 1 150 3 is_stmt 1 view .LVU236
 923 002a 0F4F     		ldr	r7, .L28+4
 924 002c D023     		movs	r3, #208
 925 002e 5B00     		lsls	r3, r3, #1
 926 0030 9846     		mov	r8, r3
 927 0032 0C4E     		ldr	r6, .L28
 928 0034 0D4A     		ldr	r2, .L28+8
 929 0036 3900     		movs	r1, r7
 930 0038 706A     		ldr	r0, [r6, #36]
 931 003a FFF7FEFF 		bl	HAL_DMA_Start_IT
 932              	.LVL43:
 151:Src/main.c    **** 
 933              		.loc 1 151 3 view .LVU237
 934 003e 4346     		mov	r3, r8
 935 0040 0B4A     		ldr	r2, .L28+12
 936 0042 3900     		movs	r1, r7
 937 0044 306B     		ldr	r0, [r6, #48]
ARM GAS  /tmp/ccPYpLPg.s 			page 46


 938 0046 FFF7FEFF 		bl	HAL_DMA_Start_IT
 939              	.LVL44:
 153:Src/main.c    **** 
 940              		.loc 1 153 3 view .LVU238
 153:Src/main.c    **** 
 941              		.loc 1 153 13 is_stmt 0 view .LVU239
 942 004a 0023     		movs	r3, #0
 943 004c 6362     		str	r3, [r4, #36]
 155:Src/main.c    **** 
 944              		.loc 1 155 3 is_stmt 1 view .LVU240
 945 004e 1821     		movs	r1, #24
 946 0050 3000     		movs	r0, r6
 947 0052 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 948              	.LVL45:
 157:Src/main.c    **** }
 949              		.loc 1 157 3 view .LVU241
 157:Src/main.c    **** }
 950              		.loc 1 157 13 is_stmt 0 view .LVU242
 951 0056 2368     		ldr	r3, [r4]
 952 0058 1D40     		ands	r5, r3
 953 005a 2560     		str	r5, [r4]
 954              	.L26:
 158:Src/main.c    **** 
 955              		.loc 1 158 1 view .LVU243
 956              		@ sp needed
 957 005c 04BC     		pop	{r2}
 958 005e 9046     		mov	r8, r2
 959 0060 F0BD     		pop	{r4, r5, r6, r7, pc}
 960              	.L29:
 961 0062 C046     		.align	2
 962              	.L28:
 963 0064 00000000 		.word	htim2
 964 0068 00000000 		.word	my_data_buf
 965 006c 14000048 		.word	1207959572
 966 0070 14080048 		.word	1207961620
 967              		.cfi_endproc
 968              	.LFE41:
 970              		.section	.text.SystemClock_Config,"ax",%progbits
 971              		.align	1
 972              		.global	SystemClock_Config
 973              		.syntax unified
 974              		.code	16
 975              		.thumb_func
 976              		.fpu softvfp
 978              	SystemClock_Config:
 979              	.LFB42:
 161:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 980              		.loc 1 161 1 is_stmt 1 view -0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 96
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984 0000 10B5     		push	{r4, lr}
 985              	.LCFI15:
 986              		.cfi_def_cfa_offset 8
 987              		.cfi_offset 4, -8
 988              		.cfi_offset 14, -4
 989 0002 98B0     		sub	sp, sp, #96
ARM GAS  /tmp/ccPYpLPg.s 			page 47


 990              	.LCFI16:
 991              		.cfi_def_cfa_offset 104
 162:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 992              		.loc 1 162 3 view .LVU245
 162:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 993              		.loc 1 162 22 is_stmt 0 view .LVU246
 994 0004 3022     		movs	r2, #48
 995 0006 0021     		movs	r1, #0
 996 0008 0CA8     		add	r0, sp, #48
 997 000a FFF7FEFF 		bl	memset
 998              	.LVL46:
 163:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 999              		.loc 1 163 3 is_stmt 1 view .LVU247
 163:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1000              		.loc 1 163 22 is_stmt 0 view .LVU248
 1001 000e 1022     		movs	r2, #16
 1002 0010 0021     		movs	r1, #0
 1003 0012 07A8     		add	r0, sp, #28
 1004 0014 FFF7FEFF 		bl	memset
 1005              	.LVL47:
 164:Src/main.c    **** 
 1006              		.loc 1 164 3 is_stmt 1 view .LVU249
 164:Src/main.c    **** 
 1007              		.loc 1 164 28 is_stmt 0 view .LVU250
 1008 0018 1C22     		movs	r2, #28
 1009 001a 0021     		movs	r1, #0
 1010 001c 6846     		mov	r0, sp
 1011 001e FFF7FEFF 		bl	memset
 1012              	.LVL48:
 166:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1013              		.loc 1 166 3 is_stmt 1 view .LVU251
 166:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1014              		.loc 1 166 36 is_stmt 0 view .LVU252
 1015 0022 2223     		movs	r3, #34
 1016 0024 0B93     		str	r3, [sp, #44]
 167:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 1017              		.loc 1 167 3 is_stmt 1 view .LVU253
 167:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 1018              		.loc 1 167 30 is_stmt 0 view .LVU254
 1019 0026 213B     		subs	r3, r3, #33
 1020 0028 0E93     		str	r3, [sp, #56]
 168:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1021              		.loc 1 168 3 is_stmt 1 view .LVU255
 168:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1022              		.loc 1 168 32 is_stmt 0 view .LVU256
 1023 002a 1393     		str	r3, [sp, #76]
 169:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1024              		.loc 1 169 3 is_stmt 1 view .LVU257
 169:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1025              		.loc 1 169 41 is_stmt 0 view .LVU258
 1026 002c 0F33     		adds	r3, r3, #15
 1027 002e 0F93     		str	r3, [sp, #60]
 170:Src/main.c    ****   HAL_RCC_OscConfig(&RCC_OscInitStruct);
 1028              		.loc 1 170 3 is_stmt 1 view .LVU259
 171:Src/main.c    **** 
 1029              		.loc 1 171 3 view .LVU260
 1030 0030 0BA8     		add	r0, sp, #44
ARM GAS  /tmp/ccPYpLPg.s 			page 48


 1031 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1032              	.LVL49:
 173:Src/main.c    ****                                 | RCC_CLOCKTYPE_PCLK1;
 1033              		.loc 1 173 3 view .LVU261
 173:Src/main.c    ****                                 | RCC_CLOCKTYPE_PCLK1;
 1034              		.loc 1 173 31 is_stmt 0 view .LVU262
 1035 0036 0723     		movs	r3, #7
 1036 0038 0793     		str	r3, [sp, #28]
 175:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1037              		.loc 1 175 3 is_stmt 1 view .LVU263
 175:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1038              		.loc 1 175 34 is_stmt 0 view .LVU264
 1039 003a 043B     		subs	r3, r3, #4
 1040 003c 0893     		str	r3, [sp, #32]
 176:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1041              		.loc 1 176 3 is_stmt 1 view .LVU265
 176:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1042              		.loc 1 176 35 is_stmt 0 view .LVU266
 1043 003e 0024     		movs	r4, #0
 1044 0040 0994     		str	r4, [sp, #36]
 177:Src/main.c    **** 
 1045              		.loc 1 177 3 is_stmt 1 view .LVU267
 177:Src/main.c    **** 
 1046              		.loc 1 177 36 is_stmt 0 view .LVU268
 1047 0042 0A94     		str	r4, [sp, #40]
 179:Src/main.c    **** 
 1048              		.loc 1 179 3 is_stmt 1 view .LVU269
 1049 0044 0121     		movs	r1, #1
 1050 0046 07A8     		add	r0, sp, #28
 1051 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1052              	.LVL50:
 181:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 1053              		.loc 1 181 3 view .LVU270
 181:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 1054              		.loc 1 181 38 is_stmt 0 view .LVU271
 1055 004c 8023     		movs	r3, #128
 1056 004e 9B02     		lsls	r3, r3, #10
 1057 0050 0093     		str	r3, [sp]
 182:Src/main.c    **** 
 1058              		.loc 1 182 3 is_stmt 1 view .LVU272
 182:Src/main.c    **** 
 1059              		.loc 1 182 35 is_stmt 0 view .LVU273
 1060 0052 0694     		str	r4, [sp, #24]
 184:Src/main.c    **** 
 1061              		.loc 1 184 3 is_stmt 1 view .LVU274
 1062 0054 6846     		mov	r0, sp
 1063 0056 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1064              	.LVL51:
 186:Src/main.c    **** 
 1065              		.loc 1 186 1 is_stmt 0 view .LVU275
 1066 005a 18B0     		add	sp, sp, #96
 1067              		@ sp needed
 1068 005c 10BD     		pop	{r4, pc}
 1069              		.cfi_endproc
 1070              	.LFE42:
 1072              		.section	.text.main,"ax",%progbits
 1073              		.align	1
ARM GAS  /tmp/ccPYpLPg.s 			page 49


 1074              		.global	main
 1075              		.syntax unified
 1076              		.code	16
 1077              		.thumb_func
 1078              		.fpu softvfp
 1080              	main:
 1081              	.LFB40:
  52:Src/main.c    **** 
 1082              		.loc 1 52 1 is_stmt 1 view -0
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 0
 1085              		@ frame_needed = 0, uses_anonymous_args = 0
 1086 0000 10B5     		push	{r4, lr}
 1087              	.LCFI17:
 1088              		.cfi_def_cfa_offset 8
 1089              		.cfi_offset 4, -8
 1090              		.cfi_offset 14, -4
  54:Src/main.c    **** 
 1091              		.loc 1 54 3 view .LVU277
 1092 0002 FFF7FEFF 		bl	HAL_Init
 1093              	.LVL52:
  56:Src/main.c    **** 
 1094              		.loc 1 56 3 view .LVU278
 1095 0006 FFF7FEFF 		bl	SystemClock_Config
 1096              	.LVL53:
  58:Src/main.c    ****   MX_DMA_Init();
 1097              		.loc 1 58 3 view .LVU279
 1098 000a FFF7FEFF 		bl	MX_GPIO_Init
 1099              	.LVL54:
  59:Src/main.c    ****   MX_TIM1_Init();
 1100              		.loc 1 59 3 view .LVU280
 1101 000e FFF7FEFF 		bl	MX_DMA_Init
 1102              	.LVL55:
  60:Src/main.c    ****   MX_TIM2_Init();
 1103              		.loc 1 60 3 view .LVU281
 1104 0012 FFF7FEFF 		bl	MX_TIM1_Init
 1105              	.LVL56:
  61:Src/main.c    ****   MX_USART3_UART_Init();
 1106              		.loc 1 61 3 view .LVU282
 1107 0016 FFF7FEFF 		bl	MX_TIM2_Init
 1108              	.LVL57:
  62:Src/main.c    ****   MX_USB_DEVICE_Init();
 1109              		.loc 1 62 3 view .LVU283
 1110 001a FFF7FEFF 		bl	MX_USART3_UART_Init
 1111              	.LVL58:
  63:Src/main.c    **** 
 1112              		.loc 1 63 3 view .LVU284
 1113 001e FFF7FEFF 		bl	MX_USB_DEVICE_Init
 1114              	.LVL59:
  65:Src/main.c    ****     dfu_otter_bootloader();
 1115              		.loc 1 65 3 view .LVU285
  65:Src/main.c    ****     dfu_otter_bootloader();
 1116              		.loc 1 65 6 is_stmt 0 view .LVU286
 1117 0022 8021     		movs	r1, #128
 1118 0024 4900     		lsls	r1, r1, #1
 1119 0026 5048     		ldr	r0, .L38
 1120 0028 FFF7FEFF 		bl	HAL_GPIO_ReadPin
ARM GAS  /tmp/ccPYpLPg.s 			page 50


 1121              	.LVL60:
  65:Src/main.c    ****     dfu_otter_bootloader();
 1122              		.loc 1 65 5 view .LVU287
 1123 002c 0028     		cmp	r0, #0
 1124 002e 01D0     		beq	.L32
  66:Src/main.c    ****   }
 1125              		.loc 1 66 5 is_stmt 1 view .LVU288
 1126 0030 FFF7FEFF 		bl	dfu_otter_bootloader
 1127              	.LVL61:
 1128              	.L32:
  69:Src/main.c    **** 
 1129              		.loc 1 69 3 view .LVU289
 1130 0034 0122     		movs	r2, #1
 1131 0036 0221     		movs	r1, #2
 1132 0038 4B48     		ldr	r0, .L38
 1133 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1134              	.LVL62:
  71:Src/main.c    ****   for (uint16_t i = 0; i < data_len - 9; i += 16) {
 1135              		.loc 1 71 3 view .LVU290
 1136 003e D022     		movs	r2, #208
 1137 0040 9200     		lsls	r2, r2, #2
 1138 0042 4A49     		ldr	r1, .L38+4
 1139 0044 4A48     		ldr	r0, .L38+8
 1140 0046 FFF7FEFF 		bl	memset
 1141              	.LVL63:
  72:Src/main.c    ****     my_data_buf[i + 0]  = 0b0000010000000000;
 1142              		.loc 1 72 3 view .LVU291
 1143              	.LBB28:
  72:Src/main.c    ****     my_data_buf[i + 0]  = 0b0000010000000000;
 1144              		.loc 1 72 8 view .LVU292
  72:Src/main.c    ****     my_data_buf[i + 0]  = 0b0000010000000000;
 1145              		.loc 1 72 17 is_stmt 0 view .LVU293
 1146 004a 0023     		movs	r3, #0
  72:Src/main.c    ****     my_data_buf[i + 0]  = 0b0000010000000000;
 1147              		.loc 1 72 3 view .LVU294
 1148 004c 47E0     		b	.L33
 1149              	.LVL64:
 1150              	.L34:
  73:Src/main.c    ****     my_data_buf[i + 1]  = 0b0110000000100001;
 1151              		.loc 1 73 5 is_stmt 1 discriminator 3 view .LVU295
  73:Src/main.c    ****     my_data_buf[i + 1]  = 0b0110000000100001;
 1152              		.loc 1 73 25 is_stmt 0 discriminator 3 view .LVU296
 1153 004e 484A     		ldr	r2, .L38+8
 1154 0050 5900     		lsls	r1, r3, #1
 1155 0052 8020     		movs	r0, #128
 1156 0054 C000     		lsls	r0, r0, #3
 1157 0056 8852     		strh	r0, [r1, r2]
  74:Src/main.c    ****     my_data_buf[i + 2]  = 0b0110000000100000;
 1158              		.loc 1 74 5 is_stmt 1 discriminator 3 view .LVU297
  74:Src/main.c    ****     my_data_buf[i + 2]  = 0b0110000000100000;
 1159              		.loc 1 74 19 is_stmt 0 discriminator 3 view .LVU298
 1160 0058 591C     		adds	r1, r3, #1
  74:Src/main.c    ****     my_data_buf[i + 2]  = 0b0110000000100000;
 1161              		.loc 1 74 25 discriminator 3 view .LVU299
 1162 005a 4900     		lsls	r1, r1, #1
 1163 005c 4548     		ldr	r0, .L38+12
 1164 005e 8852     		strh	r0, [r1, r2]
ARM GAS  /tmp/ccPYpLPg.s 			page 51


  75:Src/main.c    ****     my_data_buf[i + 3]  = 0b0110000000001001;
 1165              		.loc 1 75 5 is_stmt 1 discriminator 3 view .LVU300
  75:Src/main.c    ****     my_data_buf[i + 3]  = 0b0110000000001001;
 1166              		.loc 1 75 19 is_stmt 0 discriminator 3 view .LVU301
 1167 0060 991C     		adds	r1, r3, #2
  75:Src/main.c    ****     my_data_buf[i + 3]  = 0b0110000000001001;
 1168              		.loc 1 75 25 discriminator 3 view .LVU302
 1169 0062 4900     		lsls	r1, r1, #1
 1170 0064 4448     		ldr	r0, .L38+16
 1171 0066 8852     		strh	r0, [r1, r2]
  76:Src/main.c    ****     my_data_buf[i + 4]  = 0b0110010000001000;
 1172              		.loc 1 76 5 is_stmt 1 discriminator 3 view .LVU303
  76:Src/main.c    ****     my_data_buf[i + 4]  = 0b0110010000001000;
 1173              		.loc 1 76 19 is_stmt 0 discriminator 3 view .LVU304
 1174 0068 D91C     		adds	r1, r3, #3
  76:Src/main.c    ****     my_data_buf[i + 4]  = 0b0110010000001000;
 1175              		.loc 1 76 25 discriminator 3 view .LVU305
 1176 006a 4900     		lsls	r1, r1, #1
 1177 006c 4348     		ldr	r0, .L38+20
 1178 006e 8852     		strh	r0, [r1, r2]
  77:Src/main.c    ****     my_data_buf[i + 5]  = 0b0110000000000011;
 1179              		.loc 1 77 5 is_stmt 1 discriminator 3 view .LVU306
  77:Src/main.c    ****     my_data_buf[i + 5]  = 0b0110000000000011;
 1180              		.loc 1 77 19 is_stmt 0 discriminator 3 view .LVU307
 1181 0070 191D     		adds	r1, r3, #4
  77:Src/main.c    ****     my_data_buf[i + 5]  = 0b0110000000000011;
 1182              		.loc 1 77 25 discriminator 3 view .LVU308
 1183 0072 4900     		lsls	r1, r1, #1
 1184 0074 4248     		ldr	r0, .L38+24
 1185 0076 8852     		strh	r0, [r1, r2]
  78:Src/main.c    ****     my_data_buf[i + 6]  = 0b0110000010000010;
 1186              		.loc 1 78 5 is_stmt 1 discriminator 3 view .LVU309
  78:Src/main.c    ****     my_data_buf[i + 6]  = 0b0110000010000010;
 1187              		.loc 1 78 19 is_stmt 0 discriminator 3 view .LVU310
 1188 0078 591D     		adds	r1, r3, #5
  78:Src/main.c    ****     my_data_buf[i + 6]  = 0b0110000010000010;
 1189              		.loc 1 78 25 discriminator 3 view .LVU311
 1190 007a 4900     		lsls	r1, r1, #1
 1191 007c 4148     		ldr	r0, .L38+28
 1192 007e 8852     		strh	r0, [r1, r2]
  79:Src/main.c    ****     my_data_buf[i + 7]  = 0b0110000010010001;
 1193              		.loc 1 79 5 is_stmt 1 discriminator 3 view .LVU312
  79:Src/main.c    ****     my_data_buf[i + 7]  = 0b0110000010010001;
 1194              		.loc 1 79 19 is_stmt 0 discriminator 3 view .LVU313
 1195 0080 991D     		adds	r1, r3, #6
  79:Src/main.c    ****     my_data_buf[i + 7]  = 0b0110000010010001;
 1196              		.loc 1 79 25 discriminator 3 view .LVU314
 1197 0082 4900     		lsls	r1, r1, #1
 1198 0084 4048     		ldr	r0, .L38+32
 1199 0086 8852     		strh	r0, [r1, r2]
  80:Src/main.c    ****     my_data_buf[i + 8]  = 0b0110000010010000;
 1200              		.loc 1 80 5 is_stmt 1 discriminator 3 view .LVU315
  80:Src/main.c    ****     my_data_buf[i + 8]  = 0b0110000010010000;
 1201              		.loc 1 80 19 is_stmt 0 discriminator 3 view .LVU316
 1202 0088 D91D     		adds	r1, r3, #7
  80:Src/main.c    ****     my_data_buf[i + 8]  = 0b0110000010010000;
 1203              		.loc 1 80 25 discriminator 3 view .LVU317
ARM GAS  /tmp/ccPYpLPg.s 			page 52


 1204 008a 4900     		lsls	r1, r1, #1
 1205 008c 3F48     		ldr	r0, .L38+36
 1206 008e 8852     		strh	r0, [r1, r2]
  81:Src/main.c    ****     my_data_buf[i + 9]  = 0b0000000000000100;
 1207              		.loc 1 81 5 is_stmt 1 discriminator 3 view .LVU318
  81:Src/main.c    ****     my_data_buf[i + 9]  = 0b0000000000000100;
 1208              		.loc 1 81 19 is_stmt 0 discriminator 3 view .LVU319
 1209 0090 1900     		movs	r1, r3
 1210 0092 0831     		adds	r1, r1, #8
  81:Src/main.c    ****     my_data_buf[i + 9]  = 0b0000000000000100;
 1211              		.loc 1 81 25 discriminator 3 view .LVU320
 1212 0094 4900     		lsls	r1, r1, #1
 1213 0096 3E48     		ldr	r0, .L38+40
 1214 0098 8852     		strh	r0, [r1, r2]
  82:Src/main.c    ****     my_data_buf[i + 10] = 0b0000000001000100;
 1215              		.loc 1 82 5 is_stmt 1 discriminator 3 view .LVU321
  82:Src/main.c    ****     my_data_buf[i + 10] = 0b0000000001000100;
 1216              		.loc 1 82 19 is_stmt 0 discriminator 3 view .LVU322
 1217 009a 1900     		movs	r1, r3
 1218 009c 0931     		adds	r1, r1, #9
  82:Src/main.c    ****     my_data_buf[i + 10] = 0b0000000001000100;
 1219              		.loc 1 82 25 discriminator 3 view .LVU323
 1220 009e 4900     		lsls	r1, r1, #1
 1221 00a0 0420     		movs	r0, #4
 1222 00a2 8852     		strh	r0, [r1, r2]
  83:Src/main.c    ****     my_data_buf[i + 11] = 0b0000000001000000;
 1223              		.loc 1 83 5 is_stmt 1 discriminator 3 view .LVU324
  83:Src/main.c    ****     my_data_buf[i + 11] = 0b0000000001000000;
 1224              		.loc 1 83 19 is_stmt 0 discriminator 3 view .LVU325
 1225 00a4 1900     		movs	r1, r3
 1226 00a6 0A31     		adds	r1, r1, #10
  83:Src/main.c    ****     my_data_buf[i + 11] = 0b0000000001000000;
 1227              		.loc 1 83 25 discriminator 3 view .LVU326
 1228 00a8 4900     		lsls	r1, r1, #1
 1229 00aa 4030     		adds	r0, r0, #64
 1230 00ac 8852     		strh	r0, [r1, r2]
  84:Src/main.c    ****     my_data_buf[i + 12] = 0b0000000001000000;
 1231              		.loc 1 84 5 is_stmt 1 discriminator 3 view .LVU327
  84:Src/main.c    ****     my_data_buf[i + 12] = 0b0000000001000000;
 1232              		.loc 1 84 19 is_stmt 0 discriminator 3 view .LVU328
 1233 00ae 1900     		movs	r1, r3
 1234 00b0 0B31     		adds	r1, r1, #11
  84:Src/main.c    ****     my_data_buf[i + 12] = 0b0000000001000000;
 1235              		.loc 1 84 25 discriminator 3 view .LVU329
 1236 00b2 4900     		lsls	r1, r1, #1
 1237 00b4 0438     		subs	r0, r0, #4
 1238 00b6 8852     		strh	r0, [r1, r2]
  85:Src/main.c    ****     my_data_buf[i + 13] = 0b0000000000000000;
 1239              		.loc 1 85 5 is_stmt 1 discriminator 3 view .LVU330
  85:Src/main.c    ****     my_data_buf[i + 13] = 0b0000000000000000;
 1240              		.loc 1 85 19 is_stmt 0 discriminator 3 view .LVU331
 1241 00b8 1900     		movs	r1, r3
 1242 00ba 0C31     		adds	r1, r1, #12
  85:Src/main.c    ****     my_data_buf[i + 13] = 0b0000000000000000;
 1243              		.loc 1 85 25 discriminator 3 view .LVU332
 1244 00bc 4900     		lsls	r1, r1, #1
 1245 00be 8852     		strh	r0, [r1, r2]
ARM GAS  /tmp/ccPYpLPg.s 			page 53


  86:Src/main.c    ****     my_data_buf[i + 14] = 0b0000000000000000;
 1246              		.loc 1 86 5 is_stmt 1 discriminator 3 view .LVU333
  86:Src/main.c    ****     my_data_buf[i + 14] = 0b0000000000000000;
 1247              		.loc 1 86 19 is_stmt 0 discriminator 3 view .LVU334
 1248 00c0 1900     		movs	r1, r3
 1249 00c2 0D31     		adds	r1, r1, #13
  86:Src/main.c    ****     my_data_buf[i + 14] = 0b0000000000000000;
 1250              		.loc 1 86 25 discriminator 3 view .LVU335
 1251 00c4 4900     		lsls	r1, r1, #1
 1252 00c6 0020     		movs	r0, #0
 1253 00c8 8852     		strh	r0, [r1, r2]
  87:Src/main.c    ****     my_data_buf[i + 15] = 0b0000000000000000;
 1254              		.loc 1 87 5 is_stmt 1 discriminator 3 view .LVU336
  87:Src/main.c    ****     my_data_buf[i + 15] = 0b0000000000000000;
 1255              		.loc 1 87 19 is_stmt 0 discriminator 3 view .LVU337
 1256 00ca 1900     		movs	r1, r3
 1257 00cc 0E31     		adds	r1, r1, #14
  87:Src/main.c    ****     my_data_buf[i + 15] = 0b0000000000000000;
 1258              		.loc 1 87 25 discriminator 3 view .LVU338
 1259 00ce 4900     		lsls	r1, r1, #1
 1260 00d0 8852     		strh	r0, [r1, r2]
  88:Src/main.c    ****   }
 1261              		.loc 1 88 5 is_stmt 1 discriminator 3 view .LVU339
  88:Src/main.c    ****   }
 1262              		.loc 1 88 19 is_stmt 0 discriminator 3 view .LVU340
 1263 00d2 1900     		movs	r1, r3
 1264 00d4 0F31     		adds	r1, r1, #15
  88:Src/main.c    ****   }
 1265              		.loc 1 88 25 discriminator 3 view .LVU341
 1266 00d6 4900     		lsls	r1, r1, #1
 1267 00d8 8852     		strh	r0, [r1, r2]
  72:Src/main.c    ****     my_data_buf[i + 0]  = 0b0000010000000000;
 1268              		.loc 1 72 44 discriminator 3 view .LVU342
 1269 00da 1033     		adds	r3, r3, #16
 1270              	.LVL65:
  72:Src/main.c    ****     my_data_buf[i + 0]  = 0b0000010000000000;
 1271              		.loc 1 72 44 discriminator 3 view .LVU343
 1272 00dc 9BB2     		uxth	r3, r3
 1273              	.LVL66:
 1274              	.L33:
  72:Src/main.c    ****     my_data_buf[i + 0]  = 0b0000010000000000;
 1275              		.loc 1 72 3 discriminator 1 view .LVU344
 1276 00de CB22     		movs	r2, #203
 1277 00e0 5200     		lsls	r2, r2, #1
 1278 00e2 9342     		cmp	r3, r2
 1279 00e4 B3D9     		bls	.L34
 1280              	.LBE28:
 111:Src/main.c    ****   my_data_buf[data_len - 8 + 1] = 0b0000000000000000;
 1281              		.loc 1 111 3 is_stmt 1 view .LVU345
 111:Src/main.c    ****   my_data_buf[data_len - 8 + 1] = 0b0000000000000000;
 1282              		.loc 1 111 33 is_stmt 0 view .LVU346
 1283 00e6 224B     		ldr	r3, .L38+8
 1284              	.LVL67:
 111:Src/main.c    ****   my_data_buf[data_len - 8 + 1] = 0b0000000000000000;
 1285              		.loc 1 111 33 view .LVU347
 1286 00e8 8021     		movs	r1, #128
 1287 00ea C900     		lsls	r1, r1, #3
ARM GAS  /tmp/ccPYpLPg.s 			page 54


 1288 00ec 9B32     		adds	r2, r2, #155
 1289 00ee FF32     		adds	r2, r2, #255
 1290 00f0 9952     		strh	r1, [r3, r2]
 112:Src/main.c    ****   my_data_buf[data_len - 8 + 2] = 0b0000010000000000;
 1291              		.loc 1 112 3 is_stmt 1 view .LVU348
 112:Src/main.c    ****   my_data_buf[data_len - 8 + 2] = 0b0000010000000000;
 1292              		.loc 1 112 33 is_stmt 0 view .LVU349
 1293 00f2 0022     		movs	r2, #0
 1294 00f4 2748     		ldr	r0, .L38+44
 1295 00f6 1A52     		strh	r2, [r3, r0]
 113:Src/main.c    ****   my_data_buf[data_len - 8 + 3] = 0b0000000000000000;
 1296              		.loc 1 113 3 is_stmt 1 view .LVU350
 113:Src/main.c    ****   my_data_buf[data_len - 8 + 3] = 0b0000000000000000;
 1297              		.loc 1 113 33 is_stmt 0 view .LVU351
 1298 00f8 0230     		adds	r0, r0, #2
 1299 00fa 1952     		strh	r1, [r3, r0]
 114:Src/main.c    ****   my_data_buf[data_len - 8 + 4] = 0b0000010000000000;//01
 1300              		.loc 1 114 3 is_stmt 1 view .LVU352
 114:Src/main.c    ****   my_data_buf[data_len - 8 + 4] = 0b0000010000000000;//01
 1301              		.loc 1 114 33 is_stmt 0 view .LVU353
 1302 00fc 2648     		ldr	r0, .L38+48
 1303 00fe 1A52     		strh	r2, [r3, r0]
 115:Src/main.c    ****   my_data_buf[data_len - 8 + 5] = 0b0000000000000000;
 1304              		.loc 1 115 3 is_stmt 1 view .LVU354
 115:Src/main.c    ****   my_data_buf[data_len - 8 + 5] = 0b0000000000000000;
 1305              		.loc 1 115 33 is_stmt 0 view .LVU355
 1306 0100 0230     		adds	r0, r0, #2
 1307 0102 1952     		strh	r1, [r3, r0]
 116:Src/main.c    ****   my_data_buf[data_len - 8 + 6] = 0b0000010000000000;
 1308              		.loc 1 116 3 is_stmt 1 view .LVU356
 116:Src/main.c    ****   my_data_buf[data_len - 8 + 6] = 0b0000010000000000;
 1309              		.loc 1 116 33 is_stmt 0 view .LVU357
 1310 0104 2548     		ldr	r0, .L38+52
 1311 0106 1A52     		strh	r2, [r3, r0]
 117:Src/main.c    ****   my_data_buf[data_len - 8 + 7] = 0b0000000000000000;
 1312              		.loc 1 117 3 is_stmt 1 view .LVU358
 117:Src/main.c    ****   my_data_buf[data_len - 8 + 7] = 0b0000000000000000;
 1313              		.loc 1 117 33 is_stmt 0 view .LVU359
 1314 0108 0230     		adds	r0, r0, #2
 1315 010a 1952     		strh	r1, [r3, r0]
 118:Src/main.c    **** 
 1316              		.loc 1 118 3 is_stmt 1 view .LVU360
 118:Src/main.c    **** 
 1317              		.loc 1 118 33 is_stmt 0 view .LVU361
 1318 010c 2449     		ldr	r1, .L38+56
 1319 010e 5A52     		strh	r2, [r3, r1]
 120:Src/main.c    ****   __HAL_TIM_ENABLE_DMA(&htim2, TIM_DMA_CC1);
 1320              		.loc 1 120 3 is_stmt 1 view .LVU362
 120:Src/main.c    ****   __HAL_TIM_ENABLE_DMA(&htim2, TIM_DMA_CC1);
 1321              		.loc 1 120 13 is_stmt 0 view .LVU363
 1322 0110 244A     		ldr	r2, .L38+60
 1323 0112 536A     		ldr	r3, [r2, #36]
 120:Src/main.c    ****   __HAL_TIM_ENABLE_DMA(&htim2, TIM_DMA_CC1);
 1324              		.loc 1 120 48 view .LVU364
 1325 0114 2449     		ldr	r1, .L38+64
 1326 0116 9962     		str	r1, [r3, #40]
 121:Src/main.c    **** 
ARM GAS  /tmp/ccPYpLPg.s 			page 55


 1327              		.loc 1 121 3 is_stmt 1 view .LVU365
 1328 0118 1368     		ldr	r3, [r2]
 1329 011a D868     		ldr	r0, [r3, #12]
 1330 011c 8021     		movs	r1, #128
 1331 011e 8900     		lsls	r1, r1, #2
 1332 0120 0143     		orrs	r1, r0
 1333 0122 D960     		str	r1, [r3, #12]
 123:Src/main.c    ****   __HAL_TIM_ENABLE_DMA(&htim2, TIM_DMA_CC4);
 1334              		.loc 1 123 3 view .LVU366
 123:Src/main.c    ****   __HAL_TIM_ENABLE_DMA(&htim2, TIM_DMA_CC4);
 1335              		.loc 1 123 13 is_stmt 0 view .LVU367
 1336 0124 126B     		ldr	r2, [r2, #48]
 123:Src/main.c    ****   __HAL_TIM_ENABLE_DMA(&htim2, TIM_DMA_CC4);
 1337              		.loc 1 123 48 view .LVU368
 1338 0126 2149     		ldr	r1, .L38+68
 1339 0128 9162     		str	r1, [r2, #40]
 124:Src/main.c    **** 
 1340              		.loc 1 124 3 is_stmt 1 view .LVU369
 1341 012a D968     		ldr	r1, [r3, #12]
 1342 012c 8022     		movs	r2, #128
 1343 012e 5201     		lsls	r2, r2, #5
 1344 0130 0A43     		orrs	r2, r1
 1345 0132 DA60     		str	r2, [r3, #12]
 1346 0134 09E0     		b	.L35
 1347              	.L37:
 130:Src/main.c    ****       startDMA();
 1348              		.loc 1 130 7 view .LVU370
 1349 0136 0122     		movs	r2, #1
 1350 0138 0121     		movs	r1, #1
 1351 013a 2000     		movs	r0, r4
 1352 013c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1353              	.LVL68:
 131:Src/main.c    ****       HAL_Delay(10);
 1354              		.loc 1 131 7 view .LVU371
 1355 0140 FFF7FEFF 		bl	startDMA
 1356              	.LVL69:
 132:Src/main.c    ****     }
 1357              		.loc 1 132 7 view .LVU372
 1358 0144 0A20     		movs	r0, #10
 1359 0146 FFF7FEFF 		bl	HAL_Delay
 1360              	.LVL70:
 1361              	.L35:
 126:Src/main.c    ****   {
 1362              		.loc 1 126 3 view .LVU373
 128:Src/main.c    ****     if(HAL_GPIO_ReadPin(GPIOB, BUTTON_Pin)) {
 1363              		.loc 1 128 5 view .LVU374
 1364 014a 074C     		ldr	r4, .L38
 1365 014c 0122     		movs	r2, #1
 1366 014e 0221     		movs	r1, #2
 1367 0150 2000     		movs	r0, r4
 1368 0152 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1369              	.LVL71:
 129:Src/main.c    ****       HAL_GPIO_WritePin(GPIOB, LED_STATUS_Pin, 1);
 1370              		.loc 1 129 5 view .LVU375
 129:Src/main.c    ****       HAL_GPIO_WritePin(GPIOB, LED_STATUS_Pin, 1);
 1371              		.loc 1 129 8 is_stmt 0 view .LVU376
 1372 0156 8021     		movs	r1, #128
ARM GAS  /tmp/ccPYpLPg.s 			page 56


 1373 0158 4900     		lsls	r1, r1, #1
 1374 015a 2000     		movs	r0, r4
 1375 015c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1376              	.LVL72:
 129:Src/main.c    ****       HAL_GPIO_WritePin(GPIOB, LED_STATUS_Pin, 1);
 1377              		.loc 1 129 7 view .LVU377
 1378 0160 0028     		cmp	r0, #0
 1379 0162 F2D0     		beq	.L35
 1380 0164 E7E7     		b	.L37
 1381              	.L39:
 1382 0166 C046     		.align	2
 1383              	.L38:
 1384 0168 00040048 		.word	1207960576
 1385 016c FFFF0000 		.word	65535
 1386 0170 00000000 		.word	my_data_buf
 1387 0174 21600000 		.word	24609
 1388 0178 20600000 		.word	24608
 1389 017c 09600000 		.word	24585
 1390 0180 08640000 		.word	25608
 1391 0184 03600000 		.word	24579
 1392 0188 82600000 		.word	24706
 1393 018c 91600000 		.word	24721
 1394 0190 90600000 		.word	24720
 1395 0194 32030000 		.word	818
 1396 0198 36030000 		.word	822
 1397 019c 3A030000 		.word	826
 1398 01a0 3E030000 		.word	830
 1399 01a4 00000000 		.word	htim2
 1400 01a8 00000000 		.word	dataTransmittedHandler0
 1401 01ac 00000000 		.word	dataTransmittedHandler2
 1402              		.cfi_endproc
 1403              	.LFE40:
 1405              		.section	.text.Error_Handler,"ax",%progbits
 1406              		.align	1
 1407              		.global	Error_Handler
 1408              		.syntax unified
 1409              		.code	16
 1410              		.thumb_func
 1411              		.fpu softvfp
 1413              	Error_Handler:
 1414              	.LFB48:
 333:Src/main.c    **** 
 334:Src/main.c    **** void Error_Handler(void)
 335:Src/main.c    **** {
 1415              		.loc 1 335 1 is_stmt 1 view -0
 1416              		.cfi_startproc
 1417              		@ args = 0, pretend = 0, frame = 0
 1418              		@ frame_needed = 0, uses_anonymous_args = 0
 1419              		@ link register save eliminated.
 336:Src/main.c    **** 
 337:Src/main.c    **** }
 1420              		.loc 1 337 1 view .LVU379
 1421              		@ sp needed
 1422 0000 7047     		bx	lr
 1423              		.cfi_endproc
 1424              	.LFE48:
 1426              		.comm	my_data_buf,832,4
ARM GAS  /tmp/ccPYpLPg.s 			page 57


 1427              		.global	PER
 1428              		.comm	hdma_tim2_uev,68,4
 1429              		.comm	hdma_usart3_tx,68,4
 1430              		.comm	hdma_usart3_rx,68,4
 1431              		.comm	huart3,112,4
 1432              		.comm	hdma_tim2_ch3,68,4
 1433              		.comm	hdma_tim2_ch4,68,4
 1434              		.comm	hdma_tim2_ch1,68,4
 1435              		.comm	htim3,64,4
 1436              		.comm	htim2,64,4
 1437              		.comm	htim1,64,4
 1438              		.section	.data.PER,"aw"
 1439              		.align	1
 1440              		.set	.LANCHOR0,. + 0
 1443              	PER:
 1444 0000 5A00     		.short	90
 1445              		.text
 1446              	.Letext0:
 1447              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1448              		.file 5 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1449              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 1450              		.file 7 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 1451              		.file 8 "/usr/arm-none-eabi/include/sys/lock.h"
 1452              		.file 9 "/usr/arm-none-eabi/include/sys/_types.h"
 1453              		.file 10 "/usr/lib/gcc/arm-none-eabi/9.1.0/include/stddef.h"
 1454              		.file 11 "/usr/arm-none-eabi/include/sys/reent.h"
 1455              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1456              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1457              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 1458              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1459              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 1460              		.file 17 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 1461              		.file 18 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 1462              		.file 19 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 1463              		.file 20 "/usr/arm-none-eabi/include/stdlib.h"
 1464              		.file 21 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 1465              		.file 22 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1466              		.file 23 "Inc/usb_device.h"
 1467              		.file 24 "/usr/arm-none-eabi/include/string.h"
 1468              		.file 25 "<built-in>"
ARM GAS  /tmp/ccPYpLPg.s 			page 58


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccPYpLPg.s:16     .text.dataTransmittedHandler0:0000000000000000 $t
     /tmp/ccPYpLPg.s:24     .text.dataTransmittedHandler0:0000000000000000 dataTransmittedHandler0
     /tmp/ccPYpLPg.s:57     .text.dataTransmittedHandler0:0000000000000018 $d
                            *COM*:0000000000000040 htim2
     /tmp/ccPYpLPg.s:63     .text.dataTransmittedHandler2:0000000000000000 $t
     /tmp/ccPYpLPg.s:70     .text.dataTransmittedHandler2:0000000000000000 dataTransmittedHandler2
     /tmp/ccPYpLPg.s:115    .text.dataTransmittedHandler2:000000000000002c $d
     /tmp/ccPYpLPg.s:122    .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccPYpLPg.s:128    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccPYpLPg.s:352    .text.MX_GPIO_Init:00000000000000fc $d
     /tmp/ccPYpLPg.s:361    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccPYpLPg.s:367    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccPYpLPg.s:423    .text.MX_DMA_Init:000000000000003c $d
     /tmp/ccPYpLPg.s:428    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccPYpLPg.s:434    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccPYpLPg.s:526    .text.MX_TIM1_Init:000000000000004c $d
                            *COM*:0000000000000040 htim1
     /tmp/ccPYpLPg.s:533    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccPYpLPg.s:539    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccPYpLPg.s:706    .text.MX_TIM2_Init:00000000000000b8 $d
     /tmp/ccPYpLPg.s:712    .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/ccPYpLPg.s:718    .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/ccPYpLPg.s:774    .text.MX_USART3_UART_Init:0000000000000028 $d
                            *COM*:0000000000000070 huart3
     /tmp/ccPYpLPg.s:780    .text.dfu_otter_bootloader:0000000000000000 $t
     /tmp/ccPYpLPg.s:787    .text.dfu_otter_bootloader:0000000000000000 dfu_otter_bootloader
     /tmp/ccPYpLPg.s:858    .text.dfu_otter_bootloader:0000000000000018 $d
     /tmp/ccPYpLPg.s:870    .text.startDMA:0000000000000000 $t
     /tmp/ccPYpLPg.s:877    .text.startDMA:0000000000000000 startDMA
     /tmp/ccPYpLPg.s:963    .text.startDMA:0000000000000064 $d
                            *COM*:0000000000000340 my_data_buf
     /tmp/ccPYpLPg.s:971    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccPYpLPg.s:978    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccPYpLPg.s:1073   .text.main:0000000000000000 $t
     /tmp/ccPYpLPg.s:1080   .text.main:0000000000000000 main
     /tmp/ccPYpLPg.s:1384   .text.main:0000000000000168 $d
     /tmp/ccPYpLPg.s:1406   .text.Error_Handler:0000000000000000 $t
     /tmp/ccPYpLPg.s:1413   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccPYpLPg.s:1443   .data.PER:0000000000000000 PER
                            *COM*:0000000000000044 hdma_tim2_uev
                            *COM*:0000000000000044 hdma_usart3_tx
                            *COM*:0000000000000044 hdma_usart3_rx
                            *COM*:0000000000000044 hdma_tim2_ch3
                            *COM*:0000000000000044 hdma_tim2_ch4
                            *COM*:0000000000000044 hdma_tim2_ch1
                            *COM*:0000000000000040 htim3
     /tmp/ccPYpLPg.s:1439   .data.PER:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_TIM_PWM_Stop
memset
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
ARM GAS  /tmp/ccPYpLPg.s 			page 59


HAL_TIM_Encoder_Init
HAL_TIMEx_MasterConfigSynchronization
__aeabi_uidiv
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_UART_Init
HAL_DMA_GetState
HAL_DMA_Start_IT
HAL_TIM_PWM_Start
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_USB_DEVICE_Init
HAL_GPIO_ReadPin
HAL_Delay
